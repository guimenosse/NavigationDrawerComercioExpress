commit 70df53e901874beaee8b5fe35767d804e86b6f52
Author: Guilherme Menosse <gui_menosse@hotmail.com>
Date:   Fri May 22 01:05:01 2020 -0300

    Mudancas gerais para reformulacao do app e atendimentos do Rodrigo

diff --git a/.idea/assetWizardSettings.xml b/.idea/assetWizardSettings.xml
new file mode 100644
index 0000000..747a334
--- /dev/null
+++ b/.idea/assetWizardSettings.xml
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="WizardSettings">
+    <option name="children">
+      <map>
+        <entry key="imageWizard">
+          <value>
+            <PersistentState />
+          </value>
+        </entry>
+        <entry key="vectorWizard">
+          <value>
+            <PersistentState>
+              <option name="children">
+                <map>
+                  <entry key="vectorAssetStep">
+                    <value>
+                      <PersistentState>
+                        <option name="children">
+                          <map>
+                            <entry key="clipartAsset">
+                              <value>
+                                <PersistentState>
+                                  <option name="values">
+                                    <map>
+                                      <entry key="url" value="jar:file:/C:/Program%20Files/Android/Android%20Studio/plugins/android/lib/android.jar!/images/material_design_icons/av/ic_playlist_add_check_black_24dp.xml" />
+                                    </map>
+                                  </option>
+                                </PersistentState>
+                              </value>
+                            </entry>
+                          </map>
+                        </option>
+                        <option name="values">
+                          <map>
+                            <entry key="color" value="ffffff" />
+                            <entry key="outputName" value="ic_concluirprodutospedido" />
+                            <entry key="sourceFile" value="C:\Users\59858" />
+                          </map>
+                        </option>
+                      </PersistentState>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </PersistentState>
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/caches/build_file_checksums.ser b/.idea/caches/build_file_checksums.ser
index 6c15557..08b2aa0 100644
Binary files a/.idea/caches/build_file_checksums.ser and b/.idea/caches/build_file_checksums.ser differ
diff --git a/.idea/caches/gradle_models.ser b/.idea/caches/gradle_models.ser
index 1f55bc4..cf12dd3 100644
Binary files a/.idea/caches/gradle_models.ser and b/.idea/caches/gradle_models.ser differ
diff --git a/app/app.iml b/app/app.iml
index 23daa2d..749af48 100755
--- a/app/app.iml
+++ b/app/app.iml
@@ -99,14 +99,15 @@
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-runtime-classes" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-verifier" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant-run-apk" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant-run-resources" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant_app_manifest" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant_run_app_info_output_file" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant_run_main_apk_resources" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant_run_merged_manifests" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant_run_split_apk_resources" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/javac" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/legacy_multidex_aapt_derived_proguard_rules" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/legacy_multidex_main_dex_list" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/lint_jar" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifest-checker" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/merged_assets" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/merged_jni_libs" />
@@ -126,27 +127,65 @@
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/transforms" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/validate_signing_config" />
       <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/reports" />
       <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
     </content>
-    <orderEntry type="jdk" jdkName="Android API 26 Platform" jdkType="Android SDK" />
+    <orderEntry type="jdk" jdkName="Android API 28 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" name="Gradle: com.android.support:design:23.1.1@aar" level="project" />
-    <orderEntry type="library" name="Gradle: __local_aars__:C.\Users\Plano\Documents\Android\Express_Mobile\NavigationDrawerComercioExpress\app\libs\httpclient-4.0.3.jar:unspecified@jar" level="project" />
-    <orderEntry type="library" scope="TEST" name="Gradle: junit:junit:4.12@jar" level="project" />
-    <orderEntry type="library" name="Gradle: __local_aars__:C.\Users\Plano\Documents\Android\Express_Mobile\NavigationDrawerComercioExpress\app\libs\httpcore-4.0.1.jar:unspecified@jar" level="project" />
-    <orderEntry type="library" scope="TEST" name="Gradle: org.hamcrest:hamcrest-core:1.3@jar" level="project" />
-    <orderEntry type="library" name="Gradle: __local_aars__:C.\Users\Plano\Documents\Android\Express_Mobile\NavigationDrawerComercioExpress\app\libs\AndroidMask-1.0.0.jar:unspecified@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:design:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:support-fragment:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:localbroadcastmanager:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:animated-vector-drawable:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: android.arch.lifecycle:viewmodel:1.1.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:loader:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: android.arch.core:runtime:1.1.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: android.arch.lifecycle:livedata-core:1.1.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.github.clans:fab:1.6.4@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:cursoradapter:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: android.arch.lifecycle:runtime:1.1.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:support-compat:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.miguelcatalan:materialsearchview:1.4.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: __local_aars__:C.\Users\59858\StudioProjects\AppAntigoExpress\NavigationDrawerComercioExpress\app\libs\AndroidMask-1.0.0.jar:unspecified@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.itextpdf:itextg:5.5.10@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:cardview-v7:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: __local_aars__:C.\Users\59858\StudioProjects\AppAntigoExpress\NavigationDrawerComercioExpress\app\libs\gson-2.1.jar:unspecified@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-maps:16.1.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:support-vector-drawable:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:support-core-utils:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:recyclerview-v7:28.0.0@aar" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: com.android.support:multidex:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:support-annotations:28.0.0@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:interpolator:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:transition:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: android.arch.lifecycle:livedata:1.1.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:drawerlayout:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: __local_aars__:C.\Users\59858\StudioProjects\AppAntigoExpress\NavigationDrawerComercioExpress\app\libs\httpclient-4.0.3.jar:unspecified@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:support-v4:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support.constraint:constraint-layout-solver:1.1.3@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:documentfile:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:slidingpanelayout:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:appcompat-v7:28.0.0@aar" level="project" />
     <orderEntry type="library" name="Gradle: com.android.support:multidex:1.0.2@aar" level="project" />
-    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-maps:8.3.0@aar" level="project" />
     <orderEntry type="library" scope="TEST" name="Gradle: com.android.support:multidex-instrumentation:1.0.2@aar" level="project" />
-    <orderEntry type="library" name="Gradle: com.android.support:appcompat-v7:23.1.1@aar" level="project" />
-    <orderEntry type="library" name="Gradle: __local_aars__:C.\Users\Plano\Documents\Android\Express_Mobile\NavigationDrawerComercioExpress\app\libs\gson-2.1.jar:unspecified@jar" level="project" />
-    <orderEntry type="library" scope="TEST" name="Gradle: com.android.support:multidex:1.0.0@aar" level="project" />
-    <orderEntry type="library" name="Gradle: com.android.support:recyclerview-v7:23.1.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:collections:28.0.0@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:support-core-ui:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:asynclayoutinflater:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support.constraint:constraint-layout:1.1.3@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:print:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: android.arch.core:common:1.1.1@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:versionedparcelable:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-base:16.0.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: __local_aars__:C.\Users\59858\StudioProjects\AppAntigoExpress\NavigationDrawerComercioExpress\app\libs\httpcore-4.0.1.jar:unspecified@jar" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: junit:junit:4.12@jar" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: org.hamcrest:hamcrest-core:1.3@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:viewpager:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-basement:16.0.1@aar" level="project" />
     <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-location:8.3.0@aar" level="project" />
-    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-base:8.3.0@aar" level="project" />
-    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-basement:8.3.0@aar" level="project" />
-    <orderEntry type="library" name="Gradle: com.android.support:support-v4:23.1.1@aar" level="project" />
-    <orderEntry type="library" name="Gradle: com.android.support:support-annotations:23.1.1@jar" level="project" />
+    <orderEntry type="library" name="Gradle: android.arch.lifecycle:common:1.1.1@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:coordinatorlayout:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:customview:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:swiperefreshlayout:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.android.support:support-media-compat:28.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-tasks:16.0.1@aar" level="project" />
   </component>
 </module>
\ No newline at end of file
diff --git a/app/build.gradle b/app/build.gradle
index 54e0fb4..487e1f4 100755
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -1,7 +1,7 @@
 apply plugin: 'com.android.application'
 
 android {
-    compileSdkVersion 26
+    compileSdkVersion 28
     buildToolsVersion '27.0.3'
 
     compileOptions {
@@ -34,10 +34,22 @@ android {
 
 dependencies {
     implementation fileTree(dir: 'libs', include: ['*.jar'])
-    testCompile 'junit:junit:4.12'
-    implementation 'com.android.support:appcompat-v7:23.1.1'
-    implementation 'com.android.support:design:23.1.1'
+    implementation 'com.android.support:appcompat-v7:28.0.0'
+    implementation 'com.android.support:design:28.0.0'
+    implementation 'com.android.support:support-v4:28.0.0'
+    implementation 'com.android.support:support-vector-drawable:28.0.0'
+    implementation 'com.android.support:support-media-compat:28.0.0'
+    implementation 'com.android.support:animated-vector-drawable:28.0.0'
+    implementation 'com.google.android.gms:play-services-maps:16.1.0'
+    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
+    testImplementation 'junit:junit:4.12'
     implementation 'com.google.android.gms:play-services-location:8.3.0'
     implementation 'com.android.support:multidex:1.0.0'
-    implementation 'com.android.support:support-v4:23.1.1'
+
+    implementation 'com.github.clans:fab:1.6.4'
+    implementation 'com.miguelcatalan:materialsearchview:1.4.0'
+
+    implementation 'com.itextpdf:itextg:5.5.10'
+
+
 }
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 9c0c1e8..63e03db 100755
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -2,7 +2,6 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     package="com.example.desenvolvimento.navigationdrawercomercioexpress">
-
     <!-- To auto-complete the email text field in the login form with the user's emails -->
     <uses-permission android:name="android.permission.GET_ACCOUNTS" />
     <uses-permission android:name="android.permission.READ_PROFILE" />
@@ -15,33 +14,33 @@
         android:icon="@mipmap/ic_launcher"
         android:label="@string/app_name"
         android:supportsRtl="true"
-        android:theme="@style/AppTheme" >
+        android:theme="@style/AppTheme">
+        <activity
+            android:name=".VisaoGeralNova"
+            android:label="@string/title_activity_visao_geral_nova"
+            android:theme="@style/AppTheme.NoActionBar"></activity>
         <activity
             android:name=".HomeActivity"
             android:label="Seleção de Clientes"
-            android:theme="@style/AppTheme.NoActionBar" >
-        </activity>
+            android:theme="@style/AppTheme.NoActionBar" />
         <activity
             android:name=".Cliente"
             android:label="Cadastro de Clientes"
-            android:theme="@style/AppTheme.NoActionBar" >
-        </activity>
+            android:theme="@style/AppTheme.NoActionBar" />
         <activity
             android:name=".LoginActivity"
             android:label="@string/title_activity_login"
             android:screenOrientation="portrait"
-            android:theme="@style/AppTheme.Login" >
-        </activity>
+            android:theme="@style/AppTheme.Login" />
         <activity
             android:name=".Pedidos"
             android:label="@string/title_activity_pedidos"
-            android:theme="@style/AppTheme.NoActionBar" >
-        </activity>
+            android:theme="@style/AppTheme.NoActionBar" />
         <activity
             android:name=".Oppening"
             android:label="@string/title_activity_login"
             android:screenOrientation="portrait"
-            android:theme="@style/AppTheme.NoActionBar" >
+            android:theme="@style/AppTheme.NoActionBar">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
@@ -52,13 +51,12 @@
             android:name=".Opcoes"
             android:label="@string/title_activity_opcoes"
             android:screenOrientation="portrait"
-            android:theme="@style/AppTheme.NoActionBar" >
-        </activity>
+            android:theme="@style/AppTheme.NoActionBar" />
         <activity
             android:name=".CadastroClientes"
             android:label="@string/title_activity_cadastro_clientes"
             android:parentActivityName=".HomeActivity"
-            android:theme="@style/AppTheme.NoActionBar" >
+            android:theme="@style/AppTheme.NoActionBar">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value="com.example.desenvolvimento.navigationdrawercomercioexpress.HomeActivity" />
@@ -66,17 +64,15 @@
         <activity
             android:name=".Produtos"
             android:label="@string/title_activity_produtos"
-            android:theme="@style/AppTheme.NoActionBar" >
-        </activity>
+            android:theme="@style/AppTheme.NoActionBar" />
         <activity
             android:name=".CadastroProdutos"
             android:label="@string/title_activity_cadastro_produtos"
             android:parentActivityName=".Produtos"
-            android:theme="@style/AppTheme.NoActionBar" >
+            android:theme="@style/AppTheme.NoActionBar">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
-                android:value="com.example.desenvolvimento.navigationdrawercomercioexpress.Produtos"
-                />
+                android:value="com.example.desenvolvimento.navigationdrawercomercioexpress.Produtos" />
         </activity>
         <activity
             android:name=".ManutencaoPedidos"
@@ -85,7 +81,7 @@
             android:parentActivityName=".Pedidos"
             android:screenOrientation="portrait"
             android:theme="@style/AppTheme.NoActionBar"
-            android:windowSoftInputMode="stateHidden" >
+            android:windowSoftInputMode="stateHidden">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value="com.example.desenvolvimento.navigationdrawercomercioexpress.Pedidos" />
@@ -94,7 +90,7 @@
             android:name=".SelecaoCliente"
             android:label="@string/title_activity_selecao_cliente"
             android:parentActivityName=".ManutencaoPedidos"
-            android:theme="@style/AppTheme.NoActionBar" >
+            android:theme="@style/AppTheme.NoActionBar">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value="com.example.desenvolvimento.navigationdrawercomercioexpress.ManutencaoPedidos" />
@@ -103,7 +99,7 @@
             android:name=".AdicionarProdutos"
             android:label="@string/title_activity_adicionar_produtos"
             android:parentActivityName=".ManutencaoPedidos"
-            android:theme="@style/AppTheme.NoActionBar" >
+            android:theme="@style/AppTheme.NoActionBar">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value="com.example.desenvolvimento.navigationdrawercomercioexpress.ManutencaoPedidos" />
@@ -112,7 +108,7 @@
             android:name=".ListaCustomizadaProdutos"
             android:label="SelecionarProdutos"
             android:parentActivityName=".ManutencaoPedidos"
-            android:theme="@style/AppTheme.NoActionBar" >
+            android:theme="@style/AppTheme.NoActionBar">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value="com.example.desenvolvimento.navigationdrawercomercioexpress.ManutencaoPedidos" />
@@ -121,7 +117,7 @@
             android:name=".AdicionarProdutosCustomizada"
             android:label="@string/title_activity_adicionar_produtos_customizada"
             android:parentActivityName=".ManutencaoPedidos"
-            android:theme="@style/AppTheme.NoActionBar" >
+            android:theme="@style/AppTheme.NoActionBar">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value="com.example.desenvolvimento.navigationdrawercomercioexpress.ManutencaoPedidos" />
@@ -130,7 +126,7 @@
             android:name=".ManutencaoProdutoPedido"
             android:label="@string/title_activity_manutencao_produto_pedido"
             android:parentActivityName=".AdicionarProdutosCustomizada"
-            android:theme="@style/AppTheme.NoActionBar" >
+            android:theme="@style/AppTheme.NoActionBar">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value="com.example.desenvolvimento.navigationdrawercomercioexpress.AdicionarProdutosCustomizada" />
@@ -139,11 +135,11 @@
             android:name=".Filial"
             android:label="@string/title_activity_filial"
             android:parentActivityName=".Opcoes"
-            android:theme="@style/AppTheme.NoActionBar" >
+            android:theme="@style/AppTheme.NoActionBar">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value="com.example.desenvolvimento.navigationdrawercomercioexpress.Opcoes" />
         </activity>
     </application>
 
-</manifest>
+</manifest>
\ No newline at end of file
diff --git a/app/src/main/java/classes/CL_Clientes.java b/app/src/main/java/classes/CL_Clientes.java
new file mode 100644
index 0000000..6d1e183
--- /dev/null
+++ b/app/src/main/java/classes/CL_Clientes.java
@@ -0,0 +1,267 @@
+package classes;
+
+public class CL_Clientes {
+
+    /*public String [] arr_CamposCliente = {banco.ID, banco.RZSOCIAL, banco.NMFANTASIA, banco.CEP, banco.ENDERECO,
+            banco.NUMERO, banco.COMPLEMENTO, banco.BAIRRO, banco.UF, banco.CIDADE, banco.CNPJ,
+            banco.TELEFONE, banco.TELEFONEADICIONAL, banco.FAX, banco.CONTATO, banco.EMAIL, banco.TIPCLIENTE,
+            banco.VENDEDOR, banco.DTULTALTERACAO, banco.DTCADASTRO, banco.TIPOPESSOA, banco.FGSINCRONIZADO, banco.OBSCLIENTE,
+            banco.CLASSIFICACAO};*/
+
+    protected String id;
+    protected String cdCliente;
+    protected String nomeRzSocial;
+    protected String nomeFantasia;
+    protected String cep;
+    protected String endereco;
+    protected String numEndereco;
+    protected String complemento;
+    protected String bairro;
+    protected String cidade;
+    protected String uf;
+    protected String cpfCnpj;
+    protected String telefone;
+    protected String telefoneAdicional;
+    protected String fax;
+    protected String nomeContato;
+    protected String email;
+    protected String tipoCliente;
+    protected String vendedor;
+    protected String tipoPessoa;
+    protected String fgSincronizado;
+    protected String observacao;
+    protected String classificacao;
+
+    //INSCESTADUAL FIDELIDADE TIPOPRECO
+
+    protected String inscEstadual;
+    protected String fidelidade;
+    protected String tipoPreco;
+
+    protected String dtUltimaAlteracao;
+    protected String dtCadastro;
+
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    public String getCdCliente() {
+        return cdCliente;
+    }
+
+    public void setCdCliente(String cdCliente) {
+        this.cdCliente = cdCliente;
+    }
+
+    public String getNomeRzSocial() {
+        return nomeRzSocial;
+    }
+
+    public void setNomeRzSocial(String nomeRzSocial) {
+        this.nomeRzSocial = nomeRzSocial;
+    }
+
+    public String getNomeFantasia() {
+        return nomeFantasia;
+    }
+
+    public void setNomeFantasia(String nomeFantasia) {
+        this.nomeFantasia = nomeFantasia;
+    }
+
+    public String getCep() {
+        return cep;
+    }
+
+    public void setCep(String cep) {
+        this.cep = cep;
+    }
+
+    public String getEndereco() {
+        return endereco;
+    }
+
+    public void setEndereco(String endereco) {
+        this.endereco = endereco;
+    }
+
+    public String getNumEndereco() {
+        return numEndereco;
+    }
+
+    public void setNumEndereco(String numEndereco) {
+        this.numEndereco = numEndereco;
+    }
+
+    public String getComplemento() {
+        return complemento;
+    }
+
+    public void setComplemento(String complemento) {
+        this.complemento = complemento;
+    }
+
+    public String getBairro() {
+        return bairro;
+    }
+
+    public void setBairro(String bairro) {
+        this.bairro = bairro;
+    }
+
+    public String getCidade() {
+        return cidade;
+    }
+
+    public void setCidade(String cidade) {
+        this.cidade = cidade;
+    }
+
+    public String getUf() {
+        return uf;
+    }
+
+    public void setUf(String uf) {
+        this.uf = uf;
+    }
+
+    public String getCpfCnpj() {
+        return cpfCnpj;
+    }
+
+    public void setCpfCnpj(String cpfCnpj) {
+        this.cpfCnpj = cpfCnpj;
+    }
+
+    public String getTelefone() {
+        return telefone;
+    }
+
+    public void setTelefone(String telefone) {
+        this.telefone = telefone;
+    }
+
+    public String getTelefoneAdicional() {
+        return telefoneAdicional;
+    }
+
+    public void setTelefoneAdicional(String telefoneAdicional) {
+        this.telefoneAdicional = telefoneAdicional;
+    }
+
+    public String getFax() {
+        return fax;
+    }
+
+    public void setFax(String fax) {
+        this.fax = fax;
+    }
+
+    public String getNomeContato() {
+        return nomeContato;
+    }
+
+    public void setNomeContato(String nomeContato) {
+        this.nomeContato = nomeContato;
+    }
+
+    public String getEmail() {
+        return email;
+    }
+
+    public void setEmail(String email) {
+        this.email = email;
+    }
+
+    public String getTipoCliente() {
+        return tipoCliente;
+    }
+
+    public void setTipoCliente(String tipoCliente) {
+        this.tipoCliente = tipoCliente;
+    }
+
+    public String getVendedor() {
+        return vendedor;
+    }
+
+    public void setVendedor(String vendedor) {
+        this.vendedor = vendedor;
+    }
+
+    public String getTipoPessoa() {
+        return tipoPessoa;
+    }
+
+    public void setTipoPessoa(String tipoPessoa) {
+        this.tipoPessoa = tipoPessoa;
+    }
+
+    public String getFgSincronizado() {
+        return fgSincronizado;
+    }
+
+    public void setFgSincronizado(String fgSincronizado) {
+        this.fgSincronizado = fgSincronizado;
+    }
+
+    public String getObservacao() {
+        return observacao;
+    }
+
+    public void setObservacao(String observacao) {
+        this.observacao = observacao;
+    }
+
+    public String getClassificacao() {
+        return classificacao;
+    }
+
+    public void setClassificacao(String classificacao) {
+        this.classificacao = classificacao;
+    }
+
+    public String getInscEstadual() {
+        return inscEstadual;
+    }
+
+    public void setInscEstadual(String inscEstadual) {
+        this.inscEstadual = inscEstadual;
+    }
+
+    public String getFidelidade() {
+        return fidelidade;
+    }
+
+    public void setFidelidade(String fidelidade) {
+        this.fidelidade = fidelidade;
+    }
+
+    public String getTipoPreco() {
+        return tipoPreco;
+    }
+
+    public void setTipoPreco(String tipoPreco) {
+        this.tipoPreco = tipoPreco;
+    }
+
+    public String getDtUltimaAlteracao() {
+        return dtUltimaAlteracao;
+    }
+
+    public void setDtUltimaAlteracao(String dtUltimaAlteracao) {
+        this.dtUltimaAlteracao = dtUltimaAlteracao;
+    }
+
+    public String getDtCadastro() {
+        return dtCadastro;
+    }
+
+    public void setDtCadastro(String dtCadastro) {
+        this.dtCadastro = dtCadastro;
+    }
+}
diff --git a/app/src/main/java/classes/CL_Filial.java b/app/src/main/java/classes/CL_Filial.java
new file mode 100644
index 0000000..be41f9e
--- /dev/null
+++ b/app/src/main/java/classes/CL_Filial.java
@@ -0,0 +1,32 @@
+package classes;
+
+public class CL_Filial {
+
+    protected String id;
+    protected String cdFilial;
+    protected String nomeFilial;
+
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    public String getCdFilial() {
+        return cdFilial;
+    }
+
+    public void setCdFilial(String cdFilial) {
+        this.cdFilial = cdFilial;
+    }
+
+    public String getNomeFilial() {
+        return nomeFilial;
+    }
+
+    public void setNomeFilial(String nomeFilial) {
+        this.nomeFilial = nomeFilial;
+    }
+}
diff --git a/app/src/main/java/classes/CL_ItemPedido.java b/app/src/main/java/classes/CL_ItemPedido.java
new file mode 100644
index 0000000..e85364b
--- /dev/null
+++ b/app/src/main/java/classes/CL_ItemPedido.java
@@ -0,0 +1,104 @@
+package classes;
+
+public class CL_ItemPedido {
+
+    protected String id;
+    protected String numPedido;
+    protected String cdProduto;
+    protected String descricao;
+    protected String qtde;
+    protected String percDesconto;
+    protected String vlMaxDescPermitido;
+    protected String vlDesconto;
+    protected String vlUnitario;
+    protected String vlLiquido;
+    protected String vlTotal;
+
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    public String getNumPedido() {
+        return numPedido;
+    }
+
+    public void setNumPedido(String numPedido) {
+        this.numPedido = numPedido;
+    }
+
+    public String getCdProduto() {
+        return cdProduto;
+    }
+
+    public void setCdProduto(String cdProduto) {
+        this.cdProduto = cdProduto;
+    }
+
+    public String getDescricao() {
+        return descricao;
+    }
+
+    public void setDescricao(String descricao) {
+        this.descricao = descricao;
+    }
+
+    public String getQtde() {
+        return qtde;
+    }
+
+    public void setQtde(String qtde) {
+        this.qtde = qtde;
+    }
+
+    public String getPercDesconto() {
+        return percDesconto;
+    }
+
+    public void setPercDesconto(String percDesconto) {
+        this.percDesconto = percDesconto;
+    }
+
+    public String getVlMaxDescPermitido() {
+        return vlMaxDescPermitido;
+    }
+
+    public void setVlMaxDescPermitido(String vlMaxDescPermitido) {
+        this.vlMaxDescPermitido = vlMaxDescPermitido;
+    }
+
+    public String getVlDesconto() {
+        return vlDesconto;
+    }
+
+    public void setVlDesconto(String vlDesconto) {
+        this.vlDesconto = vlDesconto;
+    }
+
+    public String getVlUnitario() {
+        return vlUnitario;
+    }
+
+    public void setVlUnitario(String vlUnitario) {
+        this.vlUnitario = vlUnitario;
+    }
+
+    public String getVlLiquido() {
+        return vlLiquido;
+    }
+
+    public void setVlLiquido(String vlLiquido) {
+        this.vlLiquido = vlLiquido;
+    }
+
+    public String getVlTotal() {
+        return vlTotal;
+    }
+
+    public void setVlTotal(String vlTotal) {
+        this.vlTotal = vlTotal;
+    }
+}
diff --git a/app/src/main/java/classes/CL_Pedidos.java b/app/src/main/java/classes/CL_Pedidos.java
new file mode 100644
index 0000000..499b0a5
--- /dev/null
+++ b/app/src/main/java/classes/CL_Pedidos.java
@@ -0,0 +1,152 @@
+package classes;
+
+public class CL_Pedidos {
+
+    protected String numPedido;
+    protected String condPgto;
+    protected String vlTotal;
+    protected String percDesconto;
+    protected String vlDesconto;
+    protected String cdCliente;
+    protected String nomeRzSocial;
+    protected String obsPedido;
+    protected String dtEmissao;
+    protected String fgSituacao;
+    protected String cdVendedor;
+
+    protected String qtdeItens;
+    protected String vlTotalItens;
+
+    protected String vlFrete;
+
+    public CL_Pedidos(){
+        this.numPedido = "";
+        this.condPgto = "";
+        this.vlTotal = "0.0";
+        this.percDesconto = "";
+        this.vlDesconto = "0.0";
+        this.cdCliente = "";
+        this.nomeRzSocial = "";
+        this.obsPedido = "";
+        this.dtEmissao = "";
+        this.fgSituacao = "ABERTO";
+        this.cdVendedor = "";
+
+        this.qtdeItens = "0";
+        this.vlTotalItens = "0.0";
+
+        this.vlFrete = "0.00";
+    }
+
+    public String getNumPedido() {
+        return numPedido;
+    }
+
+    public void setNumPedido(String numPedido) {
+        this.numPedido = numPedido;
+    }
+
+    public String getCondPgto() {
+        return condPgto;
+    }
+
+    public void setCondPgto(String condPgto) {
+        this.condPgto = condPgto;
+    }
+
+    public String getVlTotal() {
+        return vlTotal;
+    }
+
+    public void setVlTotal(String vlTotal) {
+        this.vlTotal = vlTotal;
+    }
+
+    public String getPercDesconto() {
+        return percDesconto;
+    }
+
+    public void setPercDesconto(String percDesconto) {
+        this.percDesconto = percDesconto;
+    }
+
+    public String getVlDesconto() {
+        return vlDesconto;
+    }
+
+    public void setVlDesconto(String vlDesconto) {
+        this.vlDesconto = vlDesconto;
+    }
+
+    public String getCdCliente() {
+        return cdCliente;
+    }
+
+    public void setCdCliente(String cdCliente) {
+        this.cdCliente = cdCliente;
+    }
+
+    public String getNomeRzSocial() {
+        return nomeRzSocial;
+    }
+
+    public void setNomeRzSocial(String nomeRzSocial) {
+        this.nomeRzSocial = nomeRzSocial;
+    }
+
+    public String getObsPedido() {
+        return obsPedido;
+    }
+
+    public void setObsPedido(String obsPedido) {
+        this.obsPedido = obsPedido;
+    }
+
+    public String getDtEmissao() {
+        return dtEmissao;
+    }
+
+    public void setDtEmissao(String dtEmissao) {
+        this.dtEmissao = dtEmissao;
+    }
+
+    public String getFgSituacao() {
+        return fgSituacao;
+    }
+
+    public void setFgSituacao(String fgSituacao) {
+        this.fgSituacao = fgSituacao;
+    }
+
+    public String getCdVendedor() {
+        return cdVendedor;
+    }
+
+    public void setCdVendedor(String cdVendedor) {
+        this.cdVendedor = cdVendedor;
+    }
+
+    public String getQtdeItens() {
+        return qtdeItens;
+    }
+
+    public void setQtdeItens(String qtdeItens) {
+        this.qtdeItens = qtdeItens;
+    }
+
+    public String getVlTotalItens() {
+        return vlTotalItens;
+    }
+
+    public void setVlTotalItens(String vlTotalItens) {
+        this.vlTotalItens = vlTotalItens;
+    }
+
+    public String getVlFrete() {
+        return vlFrete;
+    }
+
+    public void setVlFrete(String vlFrete) {
+        this.vlFrete = vlFrete;
+    }
+}
diff --git a/app/src/main/java/classes/CL_Produtos.java b/app/src/main/java/classes/CL_Produtos.java
new file mode 100644
index 0000000..2c6dbd3
--- /dev/null
+++ b/app/src/main/java/classes/CL_Produtos.java
@@ -0,0 +1,148 @@
+package classes;
+
+public class CL_Produtos {
+
+    protected String id;
+    protected String cdProduto;
+    protected String descricao;
+    protected String estoqueAtual;
+    protected String vlUnitario;
+    protected String vlAtacado;
+    protected String descMaxPermitido;
+    protected String descMaxPermitidoA;
+    protected String descMaxPermitidoB;
+    protected String descMaxPermitidoC;
+    protected String descMaxPermitidoD;
+    protected String descMaxPermitidoE;
+    protected String descMaxPermitidoFidelidade;
+    protected String dtUltimaAlteracao;
+
+    public CL_Produtos(){
+        this.id = "";
+        this.cdProduto = "";
+        this.descricao = "";
+        this.estoqueAtual = "";
+        this.vlUnitario = "";
+        this.vlAtacado = "";
+        this.descMaxPermitido = "";
+        this.descMaxPermitidoA = "";
+        this.descMaxPermitidoB = "";
+        this.descMaxPermitidoC = "";
+        this.descMaxPermitidoD = "";
+        this.descMaxPermitidoE = "";
+        this.descMaxPermitidoFidelidade = "";
+        this.dtUltimaAlteracao = "";
+    }
+
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    public String getCdProduto() {
+        return cdProduto;
+    }
+
+    public void setCdProduto(String cdProduto) {
+        this.cdProduto = cdProduto;
+    }
+
+    public String getDescricao() {
+        return descricao;
+    }
+
+    public void setDescricao(String descricao) {
+        this.descricao = descricao;
+    }
+
+    public String getEstoqueAtual() {
+        return estoqueAtual;
+    }
+
+    public void setEstoqueAtual(String estoqueAtual) {
+        this.estoqueAtual = estoqueAtual;
+    }
+
+    public String getVlUnitario() {
+        return vlUnitario;
+    }
+
+    public void setVlUnitario(String vlUnitario) {
+        this.vlUnitario = vlUnitario;
+    }
+
+    public String getVlAtacado() {
+        return vlAtacado;
+    }
+
+    public void setVlAtacado(String vlAtacado) {
+        this.vlAtacado = vlAtacado;
+    }
+
+    public String getDescMaxPermitido() {
+        return descMaxPermitido;
+    }
+
+    public void setDescMaxPermitido(String descMaxPermitido) {
+        this.descMaxPermitido = descMaxPermitido;
+    }
+
+    public String getDescMaxPermitidoA() {
+        return descMaxPermitidoA;
+    }
+
+    public void setDescMaxPermitidoA(String descMaxPermitidoA) {
+        this.descMaxPermitidoA = descMaxPermitidoA;
+    }
+
+    public String getDescMaxPermitidoB() {
+        return descMaxPermitidoB;
+    }
+
+    public void setDescMaxPermitidoB(String descMaxPermitidoB) {
+        this.descMaxPermitidoB = descMaxPermitidoB;
+    }
+
+    public String getDescMaxPermitidoC() {
+        return descMaxPermitidoC;
+    }
+
+    public void setDescMaxPermitidoC(String descMaxPermitidoC) {
+        this.descMaxPermitidoC = descMaxPermitidoC;
+    }
+
+    public String getDescMaxPermitidoD() {
+        return descMaxPermitidoD;
+    }
+
+    public void setDescMaxPermitidoD(String descMaxPermitidoD) {
+        this.descMaxPermitidoD = descMaxPermitidoD;
+    }
+
+    public String getDescMaxPermitidoE() {
+        return descMaxPermitidoE;
+    }
+
+    public void setDescMaxPermitidoE(String descMaxPermitidoE) {
+        this.descMaxPermitidoE = descMaxPermitidoE;
+    }
+
+    public String getDescMaxPermitidoFidelidade() {
+        return descMaxPermitidoFidelidade;
+    }
+
+    public void setDescMaxPermitidoFidelidade(String descMaxPermitidoFidelidade) {
+        this.descMaxPermitidoFidelidade = descMaxPermitidoFidelidade;
+    }
+
+    public String getDtUltimaAlteracao() {
+        return dtUltimaAlteracao;
+    }
+
+    public void setDtUltimaAlteracao(String dtUltimaAlteracao) {
+        this.dtUltimaAlteracao = dtUltimaAlteracao;
+    }
+}
diff --git a/app/src/main/java/classes/CL_Usuario.java b/app/src/main/java/classes/CL_Usuario.java
new file mode 100644
index 0000000..e33a564
--- /dev/null
+++ b/app/src/main/java/classes/CL_Usuario.java
@@ -0,0 +1,23 @@
+package classes;
+
+public class CL_Usuario {
+
+    protected String nmUsuarioSistema;
+    protected String cdVendedorDefault;
+
+    public String getNmUsuarioSistema() {
+        return nmUsuarioSistema;
+    }
+
+    public void setNmUsuarioSistema(String nmUsuarioSistema) {
+        this.nmUsuarioSistema = nmUsuarioSistema;
+    }
+
+    public String getCdVendedorDefault() {
+        return cdVendedorDefault;
+    }
+
+    public void setCdVendedorDefault(String cdVendedorDefault) {
+        this.cdVendedorDefault = cdVendedorDefault;
+    }
+}
diff --git a/app/src/main/java/classes/CL_VisaoGeral.java b/app/src/main/java/classes/CL_VisaoGeral.java
new file mode 100644
index 0000000..c40de4e
--- /dev/null
+++ b/app/src/main/java/classes/CL_VisaoGeral.java
@@ -0,0 +1,72 @@
+package classes;
+
+public class CL_VisaoGeral {
+
+    protected int countTipoVenda, countCanceladosTipoVenda;
+    protected double vlVendaBruto, vlVendaDesconto, vlVendaLiquido, vlLucroMedio, vlDescontoTipoVenda, vlTotalTipoVenda;
+
+    public int getCountTipoVenda() {
+        return countTipoVenda;
+    }
+
+    public void setCountTipoVenda(int countTipoVenda) {
+        this.countTipoVenda = countTipoVenda;
+    }
+
+    public int getCountCanceladosTipoVenda() {
+        return countCanceladosTipoVenda;
+    }
+
+    public void setCountCanceladosTipoVenda(int countCanceladosTipoVenda) {
+        this.countCanceladosTipoVenda = countCanceladosTipoVenda;
+    }
+
+    public double getVlVendaBruto() {
+        return vlVendaBruto;
+    }
+
+    public void setVlVendaBruto(double vlVendaBruto) {
+        this.vlVendaBruto = vlVendaBruto;
+    }
+
+    public double getVlVendaDesconto() {
+        return vlVendaDesconto;
+    }
+
+    public void setVlVendaDesconto(double vlVendaDesconto) {
+        this.vlVendaDesconto = vlVendaDesconto;
+    }
+
+    public double getVlVendaLiquido() {
+        return vlVendaLiquido;
+    }
+
+    public void setVlVendaLiquido(double vlVendaLiquido) {
+        this.vlVendaLiquido = vlVendaLiquido;
+    }
+
+    public double getVlLucroMedio() {
+        return vlLucroMedio;
+    }
+
+    public void setVlLucroMedio(double vlLucroMedio) {
+        this.vlLucroMedio = vlLucroMedio;
+    }
+
+    public double getVlDescontoTipoVenda() {
+        return vlDescontoTipoVenda;
+    }
+
+    public void setVlDescontoTipoVenda(double vlDescontoTipoVenda) {
+        this.vlDescontoTipoVenda = vlDescontoTipoVenda;
+    }
+
+    public double getVlTotalTipoVenda() {
+        return vlTotalTipoVenda;
+    }
+
+    public void setVlTotalTipoVenda(double vlTotalTipoVenda) {
+        this.vlTotalTipoVenda = vlTotalTipoVenda;
+    }
+
+}
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/AdicionarProdutosCustomizada.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/AdicionarProdutosCustomizada.java
index b348cf4..2a56414 100755
--- a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/AdicionarProdutosCustomizada.java
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/AdicionarProdutosCustomizada.java
@@ -20,6 +20,9 @@ import android.widget.EditText;
 import android.widget.ListAdapter;
 import android.widget.ListView;
 import android.widget.SimpleCursorAdapter;
+import android.widget.TextView;
+
+import com.miguelcatalan.materialsearchview.MaterialSearchView;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -32,6 +35,15 @@ public class AdicionarProdutosCustomizada extends AppCompatActivity {
 
     ListView lista;
 
+    FloatingActionButton fab_SalvarProdutosPedido;
+
+    //sv_ProdutosPedidos
+
+    MaterialSearchView sv_ProdutosPedidos;
+
+
+    MenuItem me_BuscarProduto, me_Concluir;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -39,8 +51,25 @@ public class AdicionarProdutosCustomizada extends AppCompatActivity {
         Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
 
+        sv_ProdutosPedidos = (MaterialSearchView) findViewById(R.id.sv_ProdutosPedidos);
+        sv_ProdutosPedidos.setVoiceSearch(true); //or false
+
         //getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
+        fab_SalvarProdutosPedido = (FloatingActionButton) findViewById(R.id.fab_SalvarProdutosPedido);
+        fab_SalvarProdutosPedido.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                //suSalvarCliente();
+                Intent intent = new Intent();
+                intent.putExtra("numpedido", numpedido);
+                setResult(2, intent);
+                //intent.putExtra("codigo", codigo);
+                //startActivity(intent);
+                finish();
+            }
+        });
+
         numpedido = this.getIntent().getStringExtra("numpedido");
 
         String VA_ValorProduto = "";
@@ -135,8 +164,36 @@ public class AdicionarProdutosCustomizada extends AppCompatActivity {
         tb_buscarprodutoPedido.addTextChangedListener(new TextWatcher() {
             @Override
             public void onTextChanged(CharSequence s, int start, int before, int count) {
+
+            }
+
+            @Override
+            public void beforeTextChanged(CharSequence s, int start, int count,
+                                          int after) {
+                // TODO Auto-generated method stub
+            }
+
+            @Override
+            public void afterTextChanged(Editable s) {
+
+            }
+        });
+
+        final TextView lb_TituloProdutos = (TextView) findViewById(R.id.lb_TituloProdutosPedidos);
+
+                sv_ProdutosPedidos.setOnQueryTextListener(new MaterialSearchView.OnQueryTextListener() {
+                    @Override
+                    public boolean onQueryTextSubmit(String query) {
+                        return false;
+                    }
+
+                    @Override
+                    public boolean onQueryTextChange(String cdProdutoDescricao) {
+
+                String vf_CdProdutoDescricao = cdProdutoDescricao;
+
                 BancoController crud = new BancoController(getBaseContext());
-                final Cursor cursor = crud.carregaProdutosDescricaoPedido(tb_buscarprodutoPedido.getText().toString());
+                final Cursor cursor = crud.carregaProdutosDescricaoPedido(vf_CdProdutoDescricao);
 
                 String VA_ValorProduto = "";
                 String VA_ValorAtacado = "";
@@ -223,28 +280,42 @@ public class AdicionarProdutosCustomizada extends AppCompatActivity {
                         }
                     }
                 });
+
+                return false;
             }
+        });
+
+        sv_ProdutosPedidos.setOnSearchViewListener(new MaterialSearchView.SearchViewListener() {
 
             @Override
-            public void beforeTextChanged(CharSequence s, int start, int count,
-                                          int after) {
-                // TODO Auto-generated method stub
+            public void onSearchViewShown() {
+                //Do some magic
+                me_BuscarProduto.setVisible(false);
+                lb_TituloProdutos.setWidth(0);
+
             }
 
             @Override
-            public void afterTextChanged(Editable s) {
+            public void onSearchViewClosed() {
+                //Do some magic
 
+                me_BuscarProduto.setVisible(true);
+                lb_TituloProdutos.setWidth(550);
             }
         });
 
 
-
     }
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         // Inflate the menu; this adds items to the action bar if it is present.
         getMenuInflater().inflate(R.menu.adicionarproduto, menu);
+        MenuItem item = menu.findItem(R.id.buscar_produto);
+
+        sv_ProdutosPedidos.setMenuItem(item);
+
+        me_BuscarProduto = menu.findItem(R.id.buscar_produto);
         return true;
     }
 
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/CadastroClientes.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/CadastroClientes.java
index 1cb9cea..9ab9580 100755
--- a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/CadastroClientes.java
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/CadastroClientes.java
@@ -10,6 +10,8 @@ import android.support.design.widget.Snackbar;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.text.TextUtils;
+import android.view.Menu;
+import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
@@ -30,6 +32,9 @@ import br.com.jansenfelipe.androidmask.MaskEditTextChangedListener;
 
 public class CadastroClientes extends AppCompatActivity {
 
+    MenuItem me_Salvar;
+    MenuItem me_Excluir;
+
     String codigo;
 
     Spinner tipopessoa;
@@ -86,6 +91,10 @@ public class CadastroClientes extends AppCompatActivity {
     private AlertDialog alerta;
     AlertDialog.Builder builder;
 
+    String vc_TipoOperacao = "";
+
+    FloatingActionButton fab_SalvarCliente;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -95,14 +104,13 @@ public class CadastroClientes extends AppCompatActivity {
 
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
-       /*Spinner spinnerEstado = (Spinner) findViewById(R.id.tb_estado);
-        try {
-            ArrayList<String> estados = crud.selecionarEstado();
-            ArrayAdapter<String> arrayEstado = new ArrayAdapter<String>(getBaseContext(), android.R.layout.simple_spinner_item, estados);
-            spinnerEstado.setAdapter(arrayEstado);
-        }catch (Exception e){
-            e.printStackTrace();
-        }*/
+        fab_SalvarCliente = (FloatingActionButton) findViewById(R.id.fab_SalvarCliente);
+        fab_SalvarCliente.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                suSalvarCliente();
+            }
+        });
 
         tipopessoa = (Spinner)findViewById(R.id.cb_tipopessoa);
         rzsocial = (EditText)findViewById(R.id.tb_rzsocial);
@@ -132,18 +140,10 @@ public class CadastroClientes extends AppCompatActivity {
         // Apply the adapter to the spinner
         estado.setAdapter(adapter);
 
-         // Create an ArrayAdapter using the string array and a default spinner layout
         ArrayAdapter<CharSequence> adapterTipoPessoa = ArrayAdapter.createFromResource(this, R.array.tipopessoa_array, android.R.layout.simple_spinner_item);
-        // Specify the layout to use when the list of choices appears
         adapterTipoPessoa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        // Apply the adapter to the spinner
         tipopessoa.setAdapter(adapterTipoPessoa);
 
-        /*ArrayAdapter<CharSequence> adapterTipoCliente = ArrayAdapter.createFromResource(this, R.array.tipocliente_array, android.R.layout.simple_spinner_item);
-        // Specify the layout to use when the list of choices appears
-        adapterTipoCliente.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        // Apply the adapter to the spinner
-        tipocliente.setAdapter(adapterTipoCliente);*/
         try {
             crud = new BancoController(getBaseContext());
             Cursor listaTipoCliente = crud.selecionarTipoClienteCursor();
@@ -160,12 +160,6 @@ public class CadastroClientes extends AppCompatActivity {
             e2.printStackTrace();
         }
 
-       /* ArrayList<String> suaListaDeConsulta = crud.selecionarTipoCliente();
-        ArrayAdapter<String> array;
-
-        array = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_dropdown_item, suaListaDeConsulta);
-        tipocliente.setAdapter(array);*/
-
         maskCPF = new MaskEditTextChangedListener("###.###.###-##", cnpj);
         maskCNPJ = new MaskEditTextChangedListener("##.###.###/####-##", cnpj);
 
@@ -199,59 +193,13 @@ public class CadastroClientes extends AppCompatActivity {
 
         });
 
-        /*spinnerEstado.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
-            @Override
-            public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {
-                Spinner spinnerEstado = (Spinner) findViewById(R.id.tb_estado);
-                if(!spinnerEstado.getSelectedItem().toString().trim().equals("null") || !spinnerEstado.getSelectedItem().toString().trim().equals("")) {
-                    Spinner spinnerCidade = (Spinner) findViewById(R.id.tb_cidade);
-                    try {
-                        ArrayList<String> cidades = crud.selecionarCidade(spinnerEstado.getSelectedItem().toString());
-                        ArrayAdapter<String> arrayCidade = new ArrayAdapter<String>(getBaseContext(), android.R.layout.simple_spinner_item, cidades);
-                        spinnerCidade.setAdapter(arrayCidade);
-                    } catch (Exception e) {
-                        e.printStackTrace();
-                    }
-                }
-            }
-
-            @Override
-            public void onNothingSelected(AdapterView<?> parentView) {
-                // your code here
-            }
-
-        });*/
-
-
-        Button botao = (Button)findViewById(R.id.button);
-        Button botaoAlterar = (Button)findViewById(R.id.sc_alterar);
-        Button botaoCancelar = (Button)findViewById(R.id.sc_cancelar);
-        Button botaoExcluir = (Button)findViewById(R.id.sc_excluir);
-
         codigo = this.getIntent().getStringExtra("codigo");
 
         if(codigo.equals("0")) {
-            botaoAlterar.setVisibility(View.INVISIBLE);
-            botaoExcluir.setVisibility(View.INVISIBLE);
-            TextView lb_sccancelar = (TextView)findViewById(R.id.lb_sccancelar);
-            RelativeLayout.LayoutParams p_botaocancelar = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                    ViewGroup.LayoutParams.WRAP_CONTENT);
-            p_botaocancelar.addRule(RelativeLayout.BELOW, R.id.lb_sccadastrar);
-            p_botaocancelar.setMargins(0, 90, 0, 0);
-            lb_sccancelar.setLayoutParams(p_botaocancelar);
-
-            RelativeLayout.LayoutParams p_botaoalterar = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                    ViewGroup.LayoutParams.WRAP_CONTENT);
-            p_botaoalterar.addRule(RelativeLayout.BELOW, R.id.tb_fax);
-            botaoAlterar.setLayoutParams(p_botaoalterar);
-
-            RelativeLayout.LayoutParams p_botaoexcluir = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                    ViewGroup.LayoutParams.WRAP_CONTENT);
-            p_botaoexcluir.addRule(RelativeLayout.BELOW, R.id.tb_fax);
-            botaoExcluir.setLayoutParams(p_botaoexcluir);
-
-
+            vc_TipoOperacao = "I";
         }else{
+            vc_TipoOperacao = "A";
+
             crud = new BancoController(getBaseContext());
             cursor = crud.carregaClienteById(Integer.parseInt(codigo));
 
@@ -427,295 +375,249 @@ public class CadastroClientes extends AppCompatActivity {
                     VA_CountRows += 1;
                     listaTipoCliente.moveToNext();
                 }
-                /*ArrayAdapter<CharSequence> adaptadorTipoCliente = ArrayAdapter.createFromResource(this, R.array.tipocliente_array, android.R.layout.simple_spinner_item);
-                adaptadorTipoCliente.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-                tipocliente.setAdapter(adaptadorTipoCliente);
-                if (!compareValueTipoCliente.equals(null)) {
-                    int spinnerPosition = adaptadorTipoCliente.getPosition(compareValueTipoCliente);
-                    tipocliente.setSelection(spinnerPosition);
-                }*/
 
             }catch (Exception e){
                 e.printStackTrace();;
             }
 
             if(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.FGSINCRONIZADO)).equals("N")) {
-                TextView lb_scalterar = (TextView)findViewById(R.id.lb_scalterar);
-                TextView lb_sccancelar = (TextView)findViewById(R.id.lb_sccancelar);
-                TextView lb_scexcluir = (TextView)findViewById(R.id.lb_scexcluir);
-                botao.setVisibility(View.INVISIBLE);
-                //botaoExcluir.setVisibility(View.INVISIBLE);
-                cnpj.setEnabled(false);
-                RelativeLayout.LayoutParams p_botaoalterar = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                        ViewGroup.LayoutParams.WRAP_CONTENT);
-                p_botaoalterar.addRule(RelativeLayout.BELOW, R.id.lb_tipcliente);
-                lb_scalterar.setLayoutParams(p_botaoalterar);
-
-                RelativeLayout.LayoutParams p_botaoexcluir = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                        ViewGroup.LayoutParams.WRAP_CONTENT);
-                p_botaoexcluir.addRule(RelativeLayout.BELOW, R.id.lb_scalterar);
-                p_botaoexcluir.setMargins(0, 90, 0, 0);
-                lb_scexcluir.setLayoutParams(p_botaoexcluir);
 
-
-                RelativeLayout.LayoutParams p_botaocancelar = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                        ViewGroup.LayoutParams.WRAP_CONTENT);
-                p_botaocancelar.addRule(RelativeLayout.BELOW, R.id.lb_scexcluir);
-                p_botaocancelar.setMargins(0, 90, 0, 0);
-                lb_sccancelar.setLayoutParams(p_botaocancelar);
+                cnpj.setEnabled(false);
 
             }else{
-                RelativeLayout.LayoutParams p_botaocadastrar = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                        ViewGroup.LayoutParams.WRAP_CONTENT);
-                p_botaocadastrar.addRule(RelativeLayout.BELOW, R.id.tb_fax);
-                botao.setLayoutParams(p_botaocadastrar);
-
-                RelativeLayout.LayoutParams p_botaoalterar = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                        ViewGroup.LayoutParams.WRAP_CONTENT);
-                p_botaoalterar.addRule(RelativeLayout.BELOW, R.id.tb_fax);
-                botaoAlterar.setLayoutParams(p_botaoalterar);
-
-                RelativeLayout.LayoutParams p_botaoexcluir = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                        ViewGroup.LayoutParams.WRAP_CONTENT);
-                p_botaoexcluir.addRule(RelativeLayout.BELOW, R.id.tb_fax);
-                botaoExcluir.setLayoutParams(p_botaoexcluir);
-
-
-                botao.setVisibility(View.INVISIBLE);
-                botaoCancelar.setVisibility(View.INVISIBLE);
-                botaoAlterar.setVisibility(View.INVISIBLE);
-                botaoExcluir.setVisibility(View.INVISIBLE);
-
-                tipopessoa.setEnabled(false);
-                rzsocial.setEnabled(false);
-                nmfantasia.setEnabled(false);
-                cep.setEnabled(false);
-                endereco.setEnabled(false);
-                classificacao.setEnabled(false);
-                numero.setEnabled(false);
-                complemento.setEnabled(false);
-                bairro.setEnabled(false);
-                estado.setEnabled(false);
-                cidade.setEnabled(false);
-                cnpj.setEnabled(false);
-                telefone.setEnabled(false);
-                telefoneadicional.setEnabled(false);
-                fax.setEnabled(false);
-                contato.setEnabled(false);
-                email.setEnabled(false);
-                tipocliente.setEnabled(false);
-                obscliente.setEnabled(false);
-                inscestadual.setEnabled(false);
+                vc_TipoOperacao = "E";
+
+                suBloquearCampos(false);
 
                 TextView lb_clienteSincronizado = (TextView)findViewById(R.id.lb_clientesincronizado);
                 lb_clienteSincronizado.setVisibility(View.VISIBLE);
             }
 
         }
+    }
 
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu){
+        getMenuInflater().inflate(R.menu.menu_cadastrarcliente, menu);
 
+        me_Salvar = menu.findItem(R.id.menu_salvar);
+        me_Excluir = menu.findItem(R.id.menu_excluir);
 
-        botao.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Button botao = (Button) findViewById(R.id.button);
-                BancoController crud = new BancoController(getBaseContext());
-
-                /*EditText rzsocial = (EditText) findViewById(R.id.tb_rzsocial);
-                EditText nmfantasia = (EditText) findViewById(R.id.tb_nmfantasia);
-                EditText cnpj = (EditText) findViewById(R.id.tb_cnpj);
-
-                EditText email = (EditText) findViewById(R.id.tb_email);
-                EditText telefone = (EditText) findViewById(R.id.tb_telefone);
-                EditText celular = (EditText) findViewById(R.id.tb_telefoneadicional);
-
-                EditText endereco = (EditText) findViewById(R.id.tb_endereco);
-                EditText complemento = (EditText) findViewById(R.id.tb_complemento);
-                EditText cep = (EditText) findViewById(R.id.tb_cep);
-                EditText bairro = (EditText) findViewById(R.id.tb_bairro);
-                EditText cidade = (EditText) findViewById(R.id.tb_cidade);
-                Spinner estado = (Spinner) findViewById(R.id.tb_estado);
-                Spinner tipopessoa = (Spinner)findViewById(R.id.cb_tipopessoa);*/
-
-                rzsocialString = rzsocial.getText().toString().toUpperCase();
-                nmfantasiaString = nmfantasia.getText().toString().toUpperCase();
-                cepString = cep.getText().toString();
-                enderecoString = endereco.getText().toString().toUpperCase();
-                classificacaoString = classificacao.getText().toString().toUpperCase();
-                numeroString = numero.getText().toString();
-                complementoString = complemento.getText().toString().toUpperCase();
-                bairroString = bairro.getText().toString().toUpperCase();
-                estadoString = estado.getSelectedItem().toString();
-                cidadeString = cidade.getText().toString().toUpperCase();
-                cnpjString = cnpj.getText().toString().replace(".", "").replace("-", "").replace("/", "");
-                inscestadualString = inscestadual.getText().toString();
-                telefoneString = telefone.getText().toString();
-                telefoneAdicionalString = telefoneadicional.getText().toString();
-                faxString = fax.getText().toString();
-                nmcontatoString = contato.getText().toString().toUpperCase();
-                emailString = email.getText().toString().toUpperCase();
-                tipopessoaString = tipopessoa.getSelectedItem().toString().substring(0, 1);
-                tipoclienteString = tipocliente.getSelectedItem().toString();
-                obsclienteString = obscliente.getText().toString().toUpperCase();
-                dtultalteracao = getDateTime();
-                String dtcadastro = getDateTime();
-                resultado = "";
-                String vendedor = crud.selecionaVendedor();
-
-                if(botao.getText().toString().equals("Cadastrar")) {
-                    if (FU_Consiste("incluir")){
-
-                            try {
-                                resultado = crud.inserirCliente(cnpjString, rzsocialString, nmfantasiaString, cepString, enderecoString, numeroString, complementoString, bairroString, estadoString, cidadeString, cnpjString, inscestadualString, telefoneString, telefoneAdicionalString, faxString, nmcontatoString, emailString, tipoclienteString, vendedor, tipopessoaString, dtultalteracao, dtcadastro, "N", obsclienteString, classificacaoString, "", "");
-                                Toast.makeText(getApplicationContext(), "Cliente cadastrado com sucesso!", Toast.LENGTH_LONG).show();
-                                Intent secondActivity;
-                                secondActivity = new Intent(CadastroClientes.this, HomeActivity.class);
-                                startActivity(secondActivity);
-                            }catch (Exception e){
-                                //Toast.makeText(getApplicationContext(), "Não foi possivel realizar o cadastro do cliente.", Toast.LENGTH_LONG).show();
-                                MensagemUtil.addMsg(CadastroClientes.this, "Não foi possivel realizar o cadastro do cliente.");
-
-                            }
-                    }
-                }else{
-                    try {
-                        resultado = crud.alterarCliente(Integer.parseInt(codigo), rzsocialString, nmfantasiaString, cepString, enderecoString, numeroString, complementoString, bairroString, estadoString, cidadeString, cnpjString, inscestadualString, telefoneString, telefoneAdicionalString, faxString, nmcontatoString, emailString, tipoclienteString, tipopessoaString, dtultalteracao, obsclienteString, classificacaoString);
-                        Toast.makeText(getApplicationContext(), "Cliente alterado com sucesso!", Toast.LENGTH_LONG).show();
-                        Intent secondActivity;
-                        secondActivity = new Intent(CadastroClientes.this, HomeActivity.class);
-                        startActivity(secondActivity);
-                        //resultado = crud.alteraRegistro(Integer.parseInt(codigo), rzsocial.getText().toString(),nmfantasia.getText().toString(), cnpj.getText().toString(), email.getText().toString(), telefone.getText().toString(), celular.getText().toString(), endereco.getText().toString(), complemento.getText().toString(), cep.getText().toString(), bairro.getText().toString(), cidade.getText().toString(), estado.getSelectedItem().toString(), tipopessoaString);
-                    }catch (Exception e){
-                        Toast.makeText(getApplicationContext(), "Não foi possivel realizar a alteração do cadastro do cliente.", Toast.LENGTH_LONG).show();
+        if(vc_TipoOperacao.equals("E")){
 
-                    }
-                }
+            me_Salvar.setVisible(false);
+            me_Excluir.setVisible(false);
 
-            }
-        });
+        }
+
+
+        return true;
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item){
+
+        int id = item.getItemId();
+
+        if(id == android.R.id.home){
+
+            //fuVoltar();
+            finish();
+
+            return true;
+        }
+
+        if(id == R.id.menu_salvar) {
+
+            suSalvarCliente();
+
+            return true;
+        }
+
+        if(id == R.id.menu_excluir){
+
+            suDeletarCliente();
+
+            return true;
+        }
+
+        return super.onOptionsItemSelected(item);
+    }
+
+    protected void suSalvarCliente(){
+        if(vc_TipoOperacao.equals("I")){
+            BancoController crud = new BancoController(getBaseContext());
+
+            rzsocialString = rzsocial.getText().toString().toUpperCase();
+            nmfantasiaString = nmfantasia.getText().toString().toUpperCase();
+            cepString = cep.getText().toString();
+            enderecoString = endereco.getText().toString().toUpperCase();
+            classificacaoString = classificacao.getText().toString().toUpperCase();
+            numeroString = numero.getText().toString();
+            complementoString = complemento.getText().toString().toUpperCase();
+            bairroString = bairro.getText().toString().toUpperCase();
+            estadoString = estado.getSelectedItem().toString();
+            cidadeString = cidade.getText().toString().toUpperCase();
+            cnpjString = cnpj.getText().toString().replace(".", "").replace("-", "").replace("/", "");
+            inscestadualString = inscestadual.getText().toString();
+            telefoneString = telefone.getText().toString();
+            telefoneAdicionalString = telefoneadicional.getText().toString();
+            faxString = fax.getText().toString();
+            nmcontatoString = contato.getText().toString().toUpperCase();
+            emailString = email.getText().toString().toUpperCase();
+            tipopessoaString = tipopessoa.getSelectedItem().toString().substring(0, 1);
+            tipoclienteString = tipocliente.getSelectedItem().toString();
+            obsclienteString = obscliente.getText().toString().toUpperCase();
+            dtultalteracao = getDateTime();
+            String dtcadastro = getDateTime();
+            resultado = "";
+            String vendedor = crud.selecionaVendedor();
+
+            if(vc_TipoOperacao.equals("I")) {
+                if (FU_Consiste("incluir")){
 
-        botaoAlterar.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Button botao = (Button) findViewById(R.id.sc_alterar);
-                BancoController crud = new BancoController(getBaseContext());
-
-                /*EditText rzsocial = (EditText) findViewById(R.id.tb_rzsocial);
-                EditText nmfantasia = (EditText) findViewById(R.id.tb_nmfantasia);
-                EditText cnpj = (EditText) findViewById(R.id.tb_cnpj);
-
-                EditText email = (EditText) findViewById(R.id.tb_email);
-                EditText telefone = (EditText) findViewById(R.id.tb_telefone);
-                EditText celular = (EditText) findViewById(R.id.tb_telefoneadicional);
-
-                EditText endereco = (EditText) findViewById(R.id.tb_endereco);
-                EditText complemento = (EditText) findViewById(R.id.tb_complemento);
-                EditText cep = (EditText) findViewById(R.id.tb_cep);
-                EditText bairro = (EditText) findViewById(R.id.tb_bairro);
-                EditText cidade = (EditText) findViewById(R.id.tb_cidade);
-                Spinner estado = (Spinner) findViewById(R.id.tb_estado);
-                Spinner tipopessoa = (Spinner)findViewById(R.id.cb_tipopessoa);*/
-
-                rzsocialString = rzsocial.getText().toString().toUpperCase();
-                nmfantasiaString = nmfantasia.getText().toString().toUpperCase();
-                cepString = cep.getText().toString();
-                enderecoString = endereco.getText().toString().toUpperCase();
-                classificacaoString = classificacao.getText().toString().toUpperCase();
-                numeroString = numero.getText().toString();
-                complementoString = complemento.getText().toString().toUpperCase();
-                bairroString = bairro.getText().toString().toUpperCase();
-                estadoString = estado.getSelectedItem().toString();
-                cidadeString = cidade.getText().toString().toUpperCase();
-                cnpjString = cnpj.getText().toString().replace(".", "").replace("-", "").replace("/", "");
-                inscestadualString = inscestadual.getText().toString();
-                telefoneString = telefone.getText().toString();
-                telefoneAdicionalString = telefoneadicional.getText().toString();
-                faxString = fax.getText().toString();
-                nmcontatoString = contato.getText().toString().toUpperCase();
-                emailString = email.getText().toString().toUpperCase();
-                tipopessoaString = tipopessoa.getSelectedItem().toString().substring(0, 1);
-                tipoclienteString = tipocliente.getSelectedItem().toString();
-                obsclienteString = obscliente.getText().toString().toUpperCase();
-                dtultalteracao = getDateTime();
-                resultado = "";
-
-                if (FU_Consiste("alterar")){
                     try {
-                        resultado = crud.alterarCliente(Integer.parseInt(codigo), rzsocialString, nmfantasiaString, cepString, enderecoString, numeroString, complementoString, bairroString, estadoString, cidadeString, cnpjString, inscestadualString, telefoneString, telefoneAdicionalString, faxString, nmcontatoString, emailString, tipoclienteString, tipopessoaString, dtultalteracao, obsclienteString, classificacaoString);
-                        Toast.makeText(getApplicationContext(), "Cliente alterado com sucesso!", Toast.LENGTH_LONG).show();
+                        resultado = crud.inserirCliente(cnpjString, rzsocialString, nmfantasiaString, cepString, enderecoString, numeroString, complementoString, bairroString, estadoString, cidadeString, cnpjString, inscestadualString, telefoneString, telefoneAdicionalString, faxString, nmcontatoString, emailString, tipoclienteString, vendedor, tipopessoaString, dtultalteracao, dtcadastro, "N", obsclienteString, classificacaoString, "", "");
+                        Toast.makeText(getApplicationContext(), "Cliente cadastrado com sucesso!", Toast.LENGTH_LONG).show();
                         Intent secondActivity;
                         secondActivity = new Intent(CadastroClientes.this, HomeActivity.class);
                         startActivity(secondActivity);
-                        //resultado = crud.alteraRegistro(Integer.parseInt(codigo), rzsocial.getText().toString(),nmfantasia.getText().toString(), cnpj.getText().toString(), email.getText().toString(), telefone.getText().toString(), celular.getText().toString(), endereco.getText().toString(), complemento.getText().toString(), cep.getText().toString(), bairro.getText().toString(), cidade.getText().toString(), estado.getSelectedItem().toString(), tipopessoaString);
                     }catch (Exception e){
-                        Toast.makeText(getApplicationContext(), "Não foi possivel realizar a alteração do cadastro do cliente.", Toast.LENGTH_LONG).show();
+                        //Toast.makeText(getApplicationContext(), "Não foi possivel realizar o cadastro do cliente.", Toast.LENGTH_LONG).show();
+                        MensagemUtil.addMsg(CadastroClientes.this, "Não foi possivel realizar o cadastro do cliente.");
 
                     }
                 }
+            }else{
+                try {
+                    resultado = crud.alterarCliente(Integer.parseInt(codigo), rzsocialString, nmfantasiaString, cepString, enderecoString, numeroString, complementoString, bairroString, estadoString, cidadeString, cnpjString, inscestadualString, telefoneString, telefoneAdicionalString, faxString, nmcontatoString, emailString, tipoclienteString, tipopessoaString, dtultalteracao, obsclienteString, classificacaoString);
+                    Toast.makeText(getApplicationContext(), "Cliente alterado com sucesso!", Toast.LENGTH_LONG).show();
+                    Intent secondActivity;
+                    secondActivity = new Intent(CadastroClientes.this, HomeActivity.class);
+                    startActivity(secondActivity);
+                    //resultado = crud.alteraRegistro(Integer.parseInt(codigo), rzsocial.getText().toString(),nmfantasia.getText().toString(), cnpj.getText().toString(), email.getText().toString(), telefone.getText().toString(), celular.getText().toString(), endereco.getText().toString(), complemento.getText().toString(), cep.getText().toString(), bairro.getText().toString(), cidade.getText().toString(), estado.getSelectedItem().toString(), tipopessoaString);
+                }catch (Exception e){
+                    Toast.makeText(getApplicationContext(), "Não foi possivel realizar a alteração do cadastro do cliente.", Toast.LENGTH_LONG).show();
 
+                }
             }
-        });
+        }else{
+            BancoController crud = new BancoController(getBaseContext());
+
+            rzsocialString = rzsocial.getText().toString().toUpperCase();
+            nmfantasiaString = nmfantasia.getText().toString().toUpperCase();
+            cepString = cep.getText().toString();
+            enderecoString = endereco.getText().toString().toUpperCase();
+            classificacaoString = classificacao.getText().toString().toUpperCase();
+            numeroString = numero.getText().toString();
+            complementoString = complemento.getText().toString().toUpperCase();
+            bairroString = bairro.getText().toString().toUpperCase();
+            estadoString = estado.getSelectedItem().toString();
+            cidadeString = cidade.getText().toString().toUpperCase();
+            cnpjString = cnpj.getText().toString().replace(".", "").replace("-", "").replace("/", "");
+            inscestadualString = inscestadual.getText().toString();
+            telefoneString = telefone.getText().toString();
+            telefoneAdicionalString = telefoneadicional.getText().toString();
+            faxString = fax.getText().toString();
+            nmcontatoString = contato.getText().toString().toUpperCase();
+            emailString = email.getText().toString().toUpperCase();
+            tipopessoaString = tipopessoa.getSelectedItem().toString().substring(0, 1);
+            tipoclienteString = tipocliente.getSelectedItem().toString();
+            obsclienteString = obscliente.getText().toString().toUpperCase();
+            dtultalteracao = getDateTime();
+            resultado = "";
+
+            if (FU_Consiste("alterar")){
+                try {
+                    resultado = crud.alterarCliente(Integer.parseInt(codigo), rzsocialString, nmfantasiaString, cepString, enderecoString, numeroString, complementoString, bairroString, estadoString, cidadeString, cnpjString, inscestadualString, telefoneString, telefoneAdicionalString, faxString, nmcontatoString, emailString, tipoclienteString, tipopessoaString, dtultalteracao, obsclienteString, classificacaoString);
+                    Toast.makeText(getApplicationContext(), "Cliente alterado com sucesso!", Toast.LENGTH_LONG).show();
+                    Intent secondActivity;
+                    secondActivity = new Intent(CadastroClientes.this, HomeActivity.class);
+                    startActivity(secondActivity);
+                    //resultado = crud.alteraRegistro(Integer.parseInt(codigo), rzsocial.getText().toString(),nmfantasia.getText().toString(), cnpj.getText().toString(), email.getText().toString(), telefone.getText().toString(), celular.getText().toString(), endereco.getText().toString(), complemento.getText().toString(), cep.getText().toString(), bairro.getText().toString(), cidade.getText().toString(), estado.getSelectedItem().toString(), tipopessoaString);
+                }catch (Exception e){
+                    Toast.makeText(getApplicationContext(), "Não foi possivel realizar a alteração do cadastro do cliente.", Toast.LENGTH_LONG).show();
+
+                }
+            }
+        }
+    }
+
+    protected void suDeletarCliente(){
 
         builder = new AlertDialog.Builder(this);
 
-        botaoExcluir.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                EditText tb_rzsocial = (EditText) findViewById(R.id.tb_rzsocial);
+        EditText tb_rzsocial = (EditText) findViewById(R.id.tb_rzsocial);
 
-                crud = new BancoController(getBaseContext());
-                //cursor = crud.carregaDadosById(Integer.parseInt(codigo));
+        crud = new BancoController(getBaseContext());
+        //cursor = crud.carregaDadosById(Integer.parseInt(codigo));
 
-                if (crud.verificaPedidoIdCliente(Integer.parseInt(codigo)).equals("S")) {
-                    MensagemUtil.addMsg(CadastroClientes.this, "Cliente se encontra associado a um pedido, não será possivel excluir o cliente!");
-                } else {
+        if (crud.verificaPedidoIdCliente(Integer.parseInt(codigo)).equals("S")) {
+            MensagemUtil.addMsg(CadastroClientes.this, "Cliente se encontra associado a um pedido, não será possivel excluir o cliente!");
+        } else {
 
 
-                    //define o titulo
-
-                    builder.setTitle("Excluir Cliente");
-                    //define a mensagem
-                    builder.setMessage("Deseja mesmo excluir o cliente " + tb_rzsocial.getText().toString() + "?")
-                    ;
-
-                    //define um botão como positivo
-                    builder.setPositiveButton("Sim", new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface arg0, int arg1) {
-                            //Toast.makeText(ManutencaoProdutoPedido.this, "positivo=" + arg1, Toast.LENGTH_SHORT).show();
-                            try {
-                                BancoController crud = new BancoController(getBaseContext());
-                                crud.deletaCliente(Integer.parseInt(codigo));
-                                MensagemUtil.addMsg(CadastroClientes.this, "Cliente excluido com sucesso!");
-                                Intent secondActivity;
-                                secondActivity = new Intent(CadastroClientes.this, HomeActivity.class);
-                                startActivity(secondActivity);
-                            } catch (Exception e) {
-                                MensagemUtil.addMsg(CadastroClientes.this, "Não foi possivel excluir o cliente do pedido devido à seguinte situação:" + e.getMessage().toString());
-                            }
-                        }
-                    });
-                    //define um botão como negativo.
-                    builder.setNegativeButton("Não", new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface arg0, int arg1) {
-                            //Toast.makeText(ManutencaoProdutoPedido.this, "negativo=" + arg1, Toast.LENGTH_SHORT).show();
-                        }
-                    });
-                    //cria o AlertDialog
-                    alerta = builder.create();
-                    //Exibe
-                    alerta.show();
+            //define o titulo
+
+            builder.setTitle("Excluir Cliente");
+            //define a mensagem
+            builder.setMessage("Deseja mesmo excluir o cliente " + tb_rzsocial.getText().toString() + "?")
+            ;
+
+            //define um botão como positivo
+            builder.setPositiveButton("Sim", new DialogInterface.OnClickListener() {
+                public void onClick(DialogInterface arg0, int arg1) {
+                    //Toast.makeText(ManutencaoProdutoPedido.this, "positivo=" + arg1, Toast.LENGTH_SHORT).show();
+                    try {
+                        BancoController crud = new BancoController(getBaseContext());
+                        crud.deletaCliente(Integer.parseInt(codigo));
+                        MensagemUtil.addMsg(CadastroClientes.this, "Cliente excluido com sucesso!");
+                        Intent secondActivity;
+                        secondActivity = new Intent(CadastroClientes.this, HomeActivity.class);
+                        startActivity(secondActivity);
+                    } catch (Exception e) {
+                        MensagemUtil.addMsg(CadastroClientes.this, "Não foi possivel excluir o cliente do pedido devido à seguinte situação:" + e.getMessage().toString());
+                    }
                 }
-            }
-        });
+            });
+            //define um botão como negativo.
+            builder.setNegativeButton("Não", new DialogInterface.OnClickListener() {
+                public void onClick(DialogInterface arg0, int arg1) {
+                    //Toast.makeText(ManutencaoProdutoPedido.this, "negativo=" + arg1, Toast.LENGTH_SHORT).show();
+                }
+            });
+            //cria o AlertDialog
+            alerta = builder.create();
+            //Exibe
+            alerta.show();
+        }
+    }
+
+    public void suBloquearCampos(boolean bloquear){
+
+        tipopessoa.setEnabled(bloquear);
+        rzsocial.setEnabled(bloquear);
+        nmfantasia.setEnabled(bloquear);
+        cep.setEnabled(bloquear);
+        endereco.setEnabled(bloquear);
+        classificacao.setEnabled(bloquear);
+        numero.setEnabled(bloquear);
+        complemento.setEnabled(bloquear);
+        bairro.setEnabled(bloquear);
+        estado.setEnabled(bloquear);
+        cidade.setEnabled(bloquear);
+        cnpj.setEnabled(bloquear);
+        telefone.setEnabled(bloquear);
+        telefoneadicional.setEnabled(bloquear);
+        fax.setEnabled(bloquear);
+        contato.setEnabled(bloquear);
+        email.setEnabled(bloquear);
+        tipocliente.setEnabled(bloquear);
+        obscliente.setEnabled(bloquear);
+        inscestadual.setEnabled(bloquear);
+
+        fab_SalvarCliente.setVisibility(View.GONE);
 
-        botaoCancelar.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent secondActivity;
-                secondActivity = new Intent(CadastroClientes.this, HomeActivity.class);
-                startActivity(secondActivity);
-            }
-        });
     }
 
     public boolean FU_Consiste(String comando){
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Cliente.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Cliente.java
index 2bf8e8a..e7bcda9 100755
--- a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Cliente.java
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Cliente.java
@@ -174,12 +174,12 @@ public class Cliente extends AppCompatActivity
         });*/
 
 
-        Button botao = (Button)findViewById(R.id.button);
+        //Button botao = (Button)findViewById(R.id.button);
 
         codigo = this.getIntent().getStringExtra("codigo");
 
         if(codigo.equals("0")) {
-            botao.setText("Cadastrar");
+            //botao.setText("Cadastrar");
         }else{
             crud = new BancoController(getBaseContext());
             cursor = crud.carregaClienteById(Integer.parseInt(codigo));
@@ -277,12 +277,12 @@ public class Cliente extends AppCompatActivity
 
 
             //botao.setText("Alterar");
-            botao.setVisibility(View.INVISIBLE);
+            //botao.setVisibility(View.INVISIBLE);
         }
 
 
 
-            botao.setOnClickListener(new View.OnClickListener() {
+            /*botao.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
                     Button botao = (Button)findViewById(R.id.button);
@@ -336,7 +336,7 @@ public class Cliente extends AppCompatActivity
                         }/*else{
                             resultado = crud.alteraRegistro(Integer.parseInt(codigo), rzsocial.getText().toString(),nmfantasia.getText().toString(), cnpj.getText().toString(), email.getText().toString(), telefone.getText().toString(), celular.getText().toString(), endereco.getText().toString(), complemento.getText().toString(), cep.getText().toString(), bairro.getText().toString(), cidade.getText().toString(), estado.getSelectedItem().toString(), tipopessoaString);
 
-                        }*/
+                        }
                         Toast.makeText(getApplicationContext(), resultado, Toast.LENGTH_LONG).show();
                         Intent secondActivity;
                         secondActivity = new Intent(Cliente.this, HomeActivity.class);
@@ -344,19 +344,19 @@ public class Cliente extends AppCompatActivity
                     }
 
                 }
-            });
+            });*/
 
 
-        Button botaoCancelar = (Button)findViewById(R.id.sc_cancelar);
+        //Button botaoCancelar = (Button)findViewById(R.id.sc_cancelar);
 
-        botaoCancelar.setOnClickListener(new View.OnClickListener() {
+        /*botaoCancelar.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 Intent secondActivity;
                 secondActivity = new Intent(Cliente.this, HomeActivity.class);
                 startActivity(secondActivity);
             }
-        });
+        });*/
     }
 
     private String getDateTime() {
@@ -403,17 +403,17 @@ public class Cliente extends AppCompatActivity
         // Handle navigation view item clicks here.
         int id = item.getItemId();
 
-        if (id == R.id.nav_camara) {
+        if (id == R.id.nav_clientes) {
             // Handle the camera action
             Intent secondActivity;
             secondActivity = new Intent(Cliente.this, HomeActivity.class);
             startActivity(secondActivity);
-        } else if (id == R.id.nav_gallery) {
+        } else if (id == R.id.nav_pedidos) {
             Intent secondActivity;
             secondActivity = new Intent(Cliente.this, Pedidos.class);
             startActivity(secondActivity);
 
-        }  else if (id == R.id.nav_share) {
+        }  else if (id == R.id.nav_opcoes) {
             Intent secondActivity;
             secondActivity = new Intent(Cliente.this, Opcoes.class);
             startActivity(secondActivity);
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/CriaBanco.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/CriaBanco.java
index c6416c0..b8d4b44 100755
--- a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/CriaBanco.java
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/CriaBanco.java
@@ -68,6 +68,7 @@ public class CriaBanco extends SQLiteOpenHelper {
     public static final String CONDPGTO = "condpgto";
     public static final String VLTOTAL = "vltotal";
     public static final String VLDESCONTO = "vldesconto";
+    public static final String VLFRETE = "vlfrete";
     public static final String CDEMITENTE = "cdemitente";
     public static final String OBS = "obs";
     public static final String DTEMISSAO = "dtemissao";
@@ -198,6 +199,7 @@ public class CriaBanco extends SQLiteOpenHelper {
                 VLTOTAL + " real, " +
                 PERCDESCONTO + " real, " +
                 VLDESCONTO + " real, " +
+                VLFRETE + " real, " +
                 CDEMITENTE + " text, " +
                 RZSOCIAL + " text, " +
                 OBS + " text, " +
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Funcoes.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Funcoes.java
index 794a545..f052624 100755
--- a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Funcoes.java
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Funcoes.java
@@ -23,6 +23,7 @@ import java.io.IOException;
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
+import java.util.Calendar;
 import java.util.Date;
 import java.util.HashMap;
 import java.util.List;
@@ -86,5 +87,230 @@ public class Funcoes {
         return true;
     }
 
+    public String getDateTime() {
+        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
+        Date date = new Date();
+        return dateFormat.format(date);
+    }
+
+    public static String gerarDataFinal(int mes, int ano){
+
+        String _mesString = String.valueOf(mes);
+        if(mes < 10){
+            _mesString = "0" + _mesString;
+        }
+
+        if(mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes == 8 || mes == 10 || mes == 12){
+            return "" + "31/" + _mesString + "/" + String.valueOf(ano);
+        }else if(mes == 2){
+            return "" + "29/" + _mesString + "/" + String.valueOf(ano);
+            //return "" + String.valueOf(ano) + "-29-" + String.valueOf(mes) + " 00:00:00";
+        }else{
+            return "" + "30/" + _mesString + "/" + String.valueOf(ano);
+            //return "" + String.valueOf(ano) + "-30-" + String.valueOf(mes) + " 00:00:00";
+        }
+    }
+
+    public static String gerarDataFinalComparacao(int mes, int ano){
+
+        String _mesString = String.valueOf(mes);
+        if(mes < 10){
+            _mesString = "0" + _mesString;
+        }
+
+        if(mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes == 8 || mes == 10 || mes == 12){
+            return "" + "31" + _mesString + "" + String.valueOf(ano);
+        }else if(mes == 2){
+            return "" + "29" + _mesString + "" + String.valueOf(ano);
+            //return "" + String.valueOf(ano) + "-29-" + String.valueOf(mes) + " 00:00:00";
+        }else{
+            return "" + "30" + _mesString + "" + String.valueOf(ano);
+            //return "" + String.valueOf(ano) + "-30-" + String.valueOf(mes) + " 00:00:00";
+        }
+    }
+
+    public static String gerarNomeDia(int dia){
+
+        String nomeDia = "";
+
+        switch(dia) {
+            case Calendar.SUNDAY:
+                nomeDia = "Domingo";
+                break;
+            case Calendar.MONDAY:
+                nomeDia = "Segunda-feira";
+                break;
+            case Calendar.TUESDAY:
+                nomeDia = "Terça-feira";
+                break;
+            case Calendar.WEDNESDAY:
+                nomeDia = "Quarta-feira";
+                break;
+            case Calendar.THURSDAY:
+                nomeDia = "Quinta-feira";
+                break;
+            case Calendar.FRIDAY:
+                nomeDia = "Sexta-feira";
+                break;
+            case Calendar.SATURDAY:
+                nomeDia = "Sábado";
+                break;
+        }
+
+        return nomeDia;
+
+    }
+
+    public static String gerarNomeMes(int mes){
+
+        String nomeMes = "";
+
+        switch (mes){
+            case 1:
+                nomeMes = "Janeiro";
+                break;
+            case 2:
+                nomeMes = "Fevereiro";
+                break;
+            case 3:
+                nomeMes = "Março";
+                break;
+            case 4:
+                nomeMes = "Abril";
+                break;
+            case 5:
+                nomeMes = "Maio";
+                break;
+            case 6:
+                nomeMes = "Junho";
+                break;
+            case 7:
+                nomeMes = "Julho";
+                break;
+            case 8:
+                nomeMes = "Agosto";
+                break;
+            case 9:
+                nomeMes = "Setembro";
+                break;
+            case 10:
+                nomeMes = "Outubro";
+                break;
+            case 11:
+                nomeMes = "Novembro";
+                break;
+            case 12:
+                nomeMes = "Dezembro";
+                break;
+        }
+
+        return nomeMes;
+
+    }
+    public static String gerarSiglaMes(int mes){
+        String siglaMes = "";
+
+        switch (mes){
+            case 1:
+                siglaMes = "JAN";
+                break;
+            case 2:
+                siglaMes = "FEV";
+                break;
+            case 3:
+                siglaMes = "MAR";
+                break;
+            case 4:
+                siglaMes = "ABR";
+                break;
+            case 5:
+                siglaMes = "MAI";
+                break;
+            case 6:
+                siglaMes = "JUN";
+                break;
+            case 7:
+                siglaMes = "JUL";
+                break;
+            case 8:
+                siglaMes = "AGO";
+                break;
+            case 9:
+                siglaMes = "SET";
+                break;
+            case 10:
+                siglaMes = "OUT";
+                break;
+            case 11:
+                siglaMes = "NOV";
+                break;
+            case 12:
+                siglaMes = "DEZ";
+                break;
+        }
+
+        return siglaMes;
+    }
+
+    public static String gerarNumeroMes(String mes){
+        String numeroMes = "";
+
+
+        switch (mes.toUpperCase()){
+            case "JAN":
+                numeroMes = "01";
+                break;
+            case "FEV":
+                numeroMes = "02";
+                break;
+            case "FEB":
+                numeroMes = "02";
+                break;
+            case "MAR":
+                numeroMes = "03";
+                break;
+            case "ABR":
+                numeroMes = "04";
+            case "APR":
+                numeroMes = "04";
+                break;
+            case "MAI":
+                numeroMes = "05";
+            case "MAY":
+                numeroMes = "05";
+                break;
+            case "JUN":
+                numeroMes = "06";
+                break;
+            case "JUL":
+                numeroMes = "07";
+                break;
+            case "AGO":
+                numeroMes = "08";
+            case "AUG":
+                numeroMes = "08";
+                break;
+            case "SET":
+                numeroMes = "09";
+            case "SEP":
+                numeroMes = "09";
+                break;
+            case "OUT":
+                numeroMes = "10";
+            case "OCT":
+                numeroMes = "10";
+                break;
+            case "NOV":
+                numeroMes = "11";
+                break;
+            case "DEZ":
+                numeroMes = "12";
+                break;
+            case "DEC":
+                numeroMes = "12";
+                break;
+        }
+        return numeroMes;
+    }
 
 }
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/HomeActivity.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/HomeActivity.java
index f818189..5feec6e 100755
--- a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/HomeActivity.java
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/HomeActivity.java
@@ -28,8 +28,11 @@ import android.widget.AdapterView;
 import android.widget.EditText;
 import android.widget.ListView;
 import android.widget.SimpleCursorAdapter;
+import android.widget.TextView;
 import android.widget.Toast;
 
+import com.miguelcatalan.materialsearchview.MaterialSearchView;
+
 import org.apache.http.NameValuePair;
 import org.apache.http.client.ClientProtocolException;
 import org.apache.http.client.HttpClient;
@@ -64,6 +67,10 @@ public class HomeActivity extends AppCompatActivity
 
     int countCli;
 
+    MaterialSearchView sv_Clientes;
+
+    MenuItem me_BuscarCliente;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -71,6 +78,9 @@ public class HomeActivity extends AppCompatActivity
         Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
 
+        sv_Clientes = (MaterialSearchView) findViewById(R.id.sv_Clientes);
+        sv_Clientes.setVoiceSearch(true); //or false
+
         FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
         fab.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -158,7 +168,67 @@ public class HomeActivity extends AppCompatActivity
             }
         });
 
+        final TextView lb_TituloClientes = (TextView) findViewById(R.id.lb_TituloClientes);
+
+        sv_Clientes.setOnQueryTextListener(new MaterialSearchView.OnQueryTextListener() {
+            @Override
+            public boolean onQueryTextSubmit(String query) {
+                return false;
+            }
+
+            @Override
+            public boolean onQueryTextChange(String vf_Nome) {
+
+                String vf_RazaoSocialNome = vf_Nome;
+                try{
+                    BancoController crud = new BancoController(getBaseContext());
+                    final Cursor cursor = crud.carregaClientesNome(vf_RazaoSocialNome);
+
+                    String[] nomeCampos = new String[]{CriaBanco.RZSOCIAL};
+                    int[] idViews = new int[]{R.id.rzsociallist};
+
+                    SimpleCursorAdapter adaptador = new SimpleCursorAdapter(getBaseContext(), R.layout.listviewteste, cursor, nomeCampos, idViews, 0);
+                    lista = (ListView) findViewById(R.id.listView);
+                    lista.setAdapter(adaptador);
+
+                    lista.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+
+                        @Override
+                        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                            String codigo;
+                            cursor.moveToPosition(position);
+                            codigo = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.ID));
+                            Intent intent = new Intent(HomeActivity.this, CadastroClientes.class);
+                            intent.putExtra("codigo", codigo);
+                            startActivity(intent);
+                        }
+                    });
+                }catch (Exception e){
+                    MensagemUtil.addMsg(HomeActivity.this, "Não foi possível selecionar o cliente");
+                }
+
+                return false;
+            }
+        });
+
+        sv_Clientes.setOnSearchViewListener(new MaterialSearchView.SearchViewListener() {
 
+            @Override
+            public void onSearchViewShown() {
+                //Do some magic
+                me_BuscarCliente.setVisible(false);
+                lb_TituloClientes.setWidth(0);
+
+            }
+
+            @Override
+            public void onSearchViewClosed() {
+                //Do some magic
+
+                me_BuscarCliente.setVisible(true);
+                lb_TituloClientes.setWidth(550);
+            }
+        });
 
     }
 
@@ -176,6 +246,11 @@ public class HomeActivity extends AppCompatActivity
     public boolean onCreateOptionsMenu(Menu menu) {
         // Inflate the menu; this adds items to the action bar if it is present.
         getMenuInflater().inflate(R.menu.home, menu);
+        MenuItem item = menu.findItem(R.id.buscar_cliente);
+
+        sv_Clientes.setMenuItem(item);
+
+        me_BuscarCliente = menu.findItem(R.id.buscar_cliente);
         return true;
     }
 
@@ -202,35 +277,34 @@ public class HomeActivity extends AppCompatActivity
         // Handle navigation view item clicks here.
         int id = item.getItemId();
 
-        if (id == R.id.nav_camara) {
+        if (id == R.id.nav_clientes) {
             Intent secondActivity;
             secondActivity = new Intent(HomeActivity.this, HomeActivity.class);
             startActivity(secondActivity);
             // Handle the camera action
-        } else if (id == R.id.nav_gallery) {
+        } else if (id == R.id.nav_pedidos) {
             Intent secondActivity;
             secondActivity = new Intent(HomeActivity.this, Pedidos.class);
             startActivity(secondActivity);
 
 
-        }
-        else if (id == R.id.nav_slideshow) {
+        } else if (id == R.id.nav_produtos) {
             Intent secondActivity;
             secondActivity = new Intent(HomeActivity.this, Produtos.class);
             secondActivity.putExtra("selecaoProdutos", "N");
             startActivity(secondActivity);
 
-        } else if (id == R.id.nav_share) {
+        } else if (id == R.id.nav_opcoes) {
             Intent secondActivity;
             secondActivity = new Intent(HomeActivity.this, Opcoes.class);
             startActivity(secondActivity);
 
-        } /*else if (id == R.id.nav_send) {
+        } else if (id == R.id.nav_visaogeral) {
             Intent secondActivity;
-            secondActivity = new Intent(HomeActivity.this, Sincronizar.class);
+            secondActivity = new Intent(HomeActivity.this, VisaoGeralNova.class);
             startActivity(secondActivity);
 
-        }*/
+        }
 
         DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
         drawer.closeDrawer(GravityCompat.START);
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/ListaProdutosPedido.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/ListaProdutosPedido.java
index 4745d62..8901845 100644
--- a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/ListaProdutosPedido.java
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/ListaProdutosPedido.java
@@ -14,14 +14,12 @@ import java.util.List;
 public class ListaProdutosPedido extends BaseAdapter {
 
     private Context context;
-    private List<Integer> imagem;
     private List<String> descricao;
     private List<String> itensRestantes;
     private List<String> valorProdutos;
 
-    public ListaProdutosPedido(Context context, List<Integer> imagem, List<String> descricao, List<String> itensRestantes, List<String> valorProdutos){
+    public ListaProdutosPedido(Context context, List<String> descricao, List<String> itensRestantes, List<String> valorProdutos){
         this.context = context;
-        this.imagem = imagem;
         this.descricao = descricao;
         this.itensRestantes = itensRestantes;
         this.valorProdutos = valorProdutos;
@@ -36,12 +34,12 @@ public class ListaProdutosPedido extends BaseAdapter {
 
     @Override
     public int getCount() {
-        return imagem.size();
+        return descricao.size();
     }
 
     @Override
     public Object getItem(int position) {
-        return imagem.get(position);
+        return descricao.get(position);
     }
 
     @Override
@@ -73,11 +71,9 @@ public class ListaProdutosPedido extends BaseAdapter {
         try {
             if (Integer.parseInt(itensRestantes.get(position)) <= 0) {
                 holder.textoDescricao.setTextColor(Color.RED);
-            } else {
-                holder.textoDescricao.setTextColor(Color.GRAY);
             }
         }catch (Exception e){
-            holder.textoDescricao.setTextColor(Color.GRAY);
+            //holder.textoDescricao.setTextColor(Color.GRAY);
         }
 
         holder.textoDescricao.setText(descricao.get(position));
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/ManutencaoPedidos.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/ManutencaoPedidos.java
index a39f9d6..b644487 100755
--- a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/ManutencaoPedidos.java
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/ManutencaoPedidos.java
@@ -1,17 +1,27 @@
 package com.example.desenvolvimento.navigationdrawercomercioexpress;
 
+import android.annotation.SuppressLint;
 import android.app.AlertDialog;
 import android.app.ProgressDialog;
+import android.content.ActivityNotFoundException;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.database.Cursor;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.Drawable;
 import android.net.ConnectivityManager;
+import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Bundle;
+import android.os.Environment;
 import android.os.StrictMode;
 import android.support.design.widget.FloatingActionButton;
 import android.support.design.widget.Snackbar;
+import android.support.v4.app.ActivityCompat;
+import android.support.v4.app.ActivityOptionsCompat;
 import android.support.v4.app.NavUtils;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
@@ -34,6 +44,27 @@ import android.widget.SimpleCursorAdapter;
 import android.widget.TextView;
 import android.widget.Toast;
 
+import com.itextpdf.text.BadElementException;
+import com.itextpdf.text.BaseColor;
+import com.itextpdf.text.Chunk;
+import com.itextpdf.text.Document;
+import com.itextpdf.text.DocumentException;
+import com.itextpdf.text.Element;
+import com.itextpdf.text.Font;
+import com.itextpdf.text.Image;
+import com.itextpdf.text.PageSize;
+import com.itextpdf.text.Paragraph;
+import com.itextpdf.text.Phrase;
+import com.itextpdf.text.Rectangle;
+import com.itextpdf.text.Section;
+import com.itextpdf.text.pdf.BaseFont;
+import com.itextpdf.text.pdf.PdfContentByte;
+import com.itextpdf.text.pdf.PdfImportedPage;
+import com.itextpdf.text.pdf.PdfPCell;
+import com.itextpdf.text.pdf.PdfPTable;
+import com.itextpdf.text.pdf.PdfReader;
+import com.itextpdf.text.pdf.PdfWriter;
+
 import org.apache.http.HttpVersion;
 import org.apache.http.NameValuePair;
 import org.apache.http.client.ClientProtocolException;
@@ -59,7 +90,12 @@ import org.json.JSONArray;
 import org.json.JSONObject;
 import org.w3c.dom.Text;
 
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
 import java.io.IOException;
+import java.io.InputStream;
 import java.security.KeyStore;
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
@@ -69,20 +105,43 @@ import java.util.HashMap;
 import java.util.List;
 import java.util.Locale;
 
+import classes.CL_Clientes;
+import classes.CL_ItemPedido;
+import classes.CL_Pedidos;
+import classes.CL_Usuario;
+import controllers.CTL_Clientes;
+import controllers.CTL_ItemPedido;
+import controllers.CTL_Pedidos;
+import controllers.CTL_Usuario;
+import sync.SYNC_Pedidos;
+
 public class ManutencaoPedidos extends AppCompatActivity {
 
-    ImageView imagemProdutos;
-    TextView lb_descricaoProdutoPedidos, lb_descricaoProdutoPedidosTeste, lb_ocultarProdutos, lb_valorTotal;
-    EditText tb_percDesconto, tb_condPgto, tb_obsPedido, tb_vldesconto;
+    Funcoes funcoes = new Funcoes();
+
+    CL_Pedidos cl_Pedidos;
+    CTL_Pedidos ctl_Pedidos;
+
+    CL_Usuario cl_Usuario;
+    CTL_Usuario ctl_Usuario;
+
+    TextView lb_SelecionarClienteResultado, lb_SelecionarProdutoResultado, lb_ocultarProdutos, lb_valorTotalProdutos,
+            lb_qtdeTotalProdutos, lb_dtEmissao, lb_dtEmissaoResultado, lb_vlDesconto, lb_percDesconto, lb_condPgto,
+            lb_obsPedido, lb_valorTotal, lb_vlTotalResultado;
+
+    FloatingActionButton fab_SelecionarEmitente, fab_AdicionarProduto;
+
+    ListView lv_ItensPedido;
+
+    EditText tb_vlDesconto, tb_percDesconto, tb_vlFrete, tb_condPgto, tb_obsPedido;
 
-    String operacao, numpedido, fgcancelado, fgenviado;
-    int VA_ContProdutos;
-    double VL_valorTotal;
-    public String nmcliente;
+    String vc_Operacao;
 
     private AlertDialog alerta;
     AlertDialog.Builder builder;
 
+    FloatingActionButton fab_SalvarPedidos;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -92,243 +151,97 @@ public class ManutencaoPedidos extends AppCompatActivity {
 
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
+        fab_SalvarPedidos = (FloatingActionButton) findViewById(R.id.fab_SalvarPedido);
+        fab_SalvarPedidos.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                suSalvarPedido();
+            }
+        });
+
         if (android.os.Build.VERSION.SDK_INT > 9) {
             StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
             StrictMode.setThreadPolicy(policy);
         }
 
-        if(savedInstanceState != null){
-            EstadoPedido estadoPedido = (EstadoPedido) savedInstanceState.getSerializable(EstadoPedido.KEY);
-            TextView tb_rzsocial = (TextView) findViewById(R.id.lb_rzsocialClientePedidosTeste);
-            tb_rzsocial.setText(estadoPedido.cliente);
-        }
-
-        FU_VisibilidadeProdutos(false);
-
-        operacao = this.getIntent().getStringExtra("operacao");
+        suInstanciarCampos();
 
-        if(operacao.equals("A")){
-            numpedido = this.getIntent().getStringExtra("codigo");
-            FU_CarregaPedido();
-            FU_CarregaItemPedido();
-            FU_CalcularValorPedido();
-        }else{
-            fgcancelado = "N";
-            fgenviado = "N";
+        if (vc_Operacao.equals("A")) {
+            suCarregarPedido();
+            suCarregaItemPedido();
+            suCalcularValorPedido();
         }
-        BancoController crud = new BancoController(getBaseContext());
-
-        //----------------------------- Comandos para o botao de clientes, para seleção ou alteração do cliente do pedido---------
-        Button sc_selecionarCliente = (Button) findViewById(R.id.sc_selecionarcliente);
-        TextView lb_rzsocialClientePedidos = (TextView)findViewById(R.id.lb_rzsocialClientePedidos);
-
-        lb_rzsocialClientePedidos.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent secondActivity;
-                secondActivity = new Intent(ManutencaoPedidos.this, SelecaoCliente.class);
-                //secondActivity.putExtra("codigo", "0");
-                startActivityForResult(secondActivity, 1);
-            }
-        });
 
-        lb_ocultarProdutos = (TextView)findViewById(R.id.lb_ocultarProdutos);
-
-        TextView sc_selecionarProduto = (TextView)findViewById(R.id.lb_descricaoProdutoPedidosTeste);
-
-        sc_selecionarProduto.setOnClickListener(new View.OnClickListener() {
-                                                    @Override
-                                                    public void onClick(View v) {
-                                                        BancoController crud = new BancoController(getBaseContext());
-                                                        TextView tb_cdcliente = (TextView) findViewById(R.id.lb_rzsocialClientePedidos);
-                                                        TextView tb_rzsocial = (TextView) findViewById(R.id.lb_rzsocialClientePedidosTeste);
-                                                        TextView tb_dtemissao = (TextView) findViewById(R.id.tb_dtemissaoResultado);
-                                                        EditText tb_condpgto = (EditText) findViewById(R.id.tb_condPgto);
-                                                        EditText tb_percdesconto = (EditText)findViewById(R.id.tb_percdescontoPedido);
-                                                        EditText tb_vldesconto = (EditText) findViewById(R.id.tb_vldescontoPedido);
-                                                        EditText tb_obs = (EditText) findViewById(R.id.tb_obsPedido);
-                                                        if(operacao.equals("I")) {
-                                                            numpedido = crud.carregaNumPedido();
-
-                                                        }
-                                                        FU_CalcularValorPedido();
-                                                        crud.alteraPedido(numpedido, tb_cdcliente.getText().toString(), tb_rzsocial.getText().toString().toUpperCase(), tb_condpgto.getText().toString().toUpperCase(), lb_valorTotal.getText().toString().substring(0, 27), tb_percdesconto.getText().toString(), tb_vldesconto.getText().toString(), tb_obs.getText().toString().toUpperCase(), "ABERTO");
-
-                                                        if(lb_ocultarProdutos.getText().toString().equals("Ocultar Produtos")) {
-                                                        /*---------------- É necessário ocultar a listview quando clica em adicionar produtos ------------------*/
-                                                            ListView lista = (ListView) findViewById(R.id.listViewItemPedidos);
-                                                            lista.setVisibility(View.INVISIBLE);
-                                                            lb_ocultarProdutos.setText("Mostrar Produtos");
-
-                                                            TextView lb_dtemissao = (TextView) findViewById(R.id.tb_dtemissao);
-                                                            RelativeLayout.LayoutParams p_endereco = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                                                                    ViewGroup.LayoutParams.WRAP_CONTENT);
-                                                            p_endereco.addRule(RelativeLayout.BELOW, R.id.lb_fundoOcultarProdutos);
-                                                            p_endereco.setMargins(0, 25, 0, 0);
-                                                            lb_dtemissao.setLayoutParams(p_endereco);
-                                                        }
-
-                                                        Intent secondActivity;
-                                                        secondActivity = new Intent(ManutencaoPedidos.this, AdicionarProdutosCustomizada.class);
-                                                        secondActivity.putExtra("numpedido", numpedido);
-                                                        secondActivity.putExtra("selecaoProdutos", "S");
-                                                        startActivityForResult(secondActivity, 2);
-            }
+        if (cl_Pedidos.getFgSituacao().equals("E") || cl_Pedidos.getFgSituacao().equals("C")) {
+            suBloqueiaCampos(false);
         }
-        );
-
-
-
-        lb_ocultarProdutos.setOnClickListener(new View.OnClickListener() {
-                                                    @Override
-                                                    public void onClick(View v) {
-                    ListView lista = (ListView) findViewById(R.id.listViewItemPedidos);
-                    if(lb_ocultarProdutos.getText().toString().equals("Mostrar Produtos")) {
-                        lista.setVisibility(View.VISIBLE);
-                        lb_ocultarProdutos.setText("Ocultar Produtos");
-
-                        TextView lb_dtemissao = (TextView) findViewById(R.id.tb_dtemissao);
-                        RelativeLayout.LayoutParams p_endereco = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                                ViewGroup.LayoutParams.WRAP_CONTENT);
-                        p_endereco.addRule(RelativeLayout.BELOW, R.id.listViewItemPedidos);
-                        p_endereco.setMargins(0, 25, 0, 0);
-                        lb_dtemissao.setLayoutParams(p_endereco);
-
-                        calculeHeightListView();
-                    }else{
-                        lista.setVisibility(View.INVISIBLE);
-                        lb_ocultarProdutos.setText("Mostrar Produtos");
-
-                        TextView lb_dtemissao = (TextView) findViewById(R.id.tb_dtemissao);
-                        RelativeLayout.LayoutParams p_endereco = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                                ViewGroup.LayoutParams.WRAP_CONTENT);
-                        p_endereco.addRule(RelativeLayout.BELOW, R.id.lb_fundoOcultarProdutos);
-                        p_endereco.setMargins(0, 25, 0, 0);
-                        lb_dtemissao.setLayoutParams(p_endereco);
-
-                        calculeHeigthListViewReverse();
-                    }
-                }
-            }
-        );
-
-        //Fazer a mudança do valor do percentual de desconto também.
 
-        tb_vldesconto = (EditText)findViewById(R.id.tb_vldescontoPedido);
-        tb_percDesconto = (EditText)findViewById(R.id.tb_percdescontoPedido);
-        tb_vldesconto.addTextChangedListener(new TextWatcher() {
+        tb_vlDesconto.addTextChangedListener(new TextWatcher() {
             @Override
             public void onTextChanged(CharSequence s, int start, int before, int count) {
-
             }
 
             @Override
             public void beforeTextChanged(CharSequence s, int start, int count,
                                           int after) {
                 // TODO Auto-generated method stub
-
-
             }
 
             @Override
             public void afterTextChanged(Editable s) {
                 try {
-                    if(tb_vldesconto.getText().toString().trim().equals("")){
+                    if (tb_vlDesconto.getText().toString().trim().equals("")) {
                         tb_percDesconto.setText("");
-                    }else {
-                        BancoController crud = new BancoController(getBaseContext());
-
-
-                        if (crud.verificaItemPedido(numpedido).equals("S")) {
-                            TextView lb_valorTotalProdutos = (TextView) findViewById(R.id.lb_valorTotalProdutos);
-                            //String.format("%.2f", vltotal);
+                    } else {
 
-                            //lb_valorTotalProdutos.setText("Total: R$" + String.format("%.2f", VL_valorTotal));
-                            double valorBruto = Double.parseDouble(lb_valorTotalProdutos.getText().toString().replace("Total: R$", "").replace(",", "."));
-                            double valorLiquido = valorBruto - Double.parseDouble(tb_vldesconto.getText().toString().replace(",", "."));
+                        if (!cl_Pedidos.getQtdeItens().trim().equals("") || !cl_Pedidos.getQtdeItens().equals("0")) {
+                            double vf_VlBruto = Double.parseDouble(cl_Pedidos.getVlTotalItens());
+                            double vf_VlLiquido = vf_VlBruto - Double.parseDouble(tb_vlDesconto.getText().toString().replace(",", "."));
 
-                            double porcentagem = ((valorBruto - valorLiquido) / valorBruto) * 100;
-                            tb_percDesconto.setText(String.format("%.5f", porcentagem).replace(",", "."));
+                            double vf_Porcentagem = ((vf_VlBruto - vf_VlLiquido) / vf_VlBruto) * 100;
+                            tb_percDesconto.setText(String.format("%.5f", vf_Porcentagem).replace(",", "."));
 
+                            suCalcularValorPedido();
                         }
                     }
-                }catch (Exception e){
+                } catch (Exception e) {
                     e.printStackTrace();
                 }
             }
         });
 
-
-        /*tb_percDesconto.addTextChangedListener(new TextWatcher() {
+        tb_vlFrete.addTextChangedListener(new TextWatcher() {
             @Override
             public void onTextChanged(CharSequence s, int start, int before, int count) {
-
             }
 
             @Override
             public void beforeTextChanged(CharSequence s, int start, int count,
                                           int after) {
                 // TODO Auto-generated method stub
-
-
             }
 
             @Override
             public void afterTextChanged(Editable s) {
                 try {
-                    if(tb_percDesconto.getText().toString().trim().equals("")){
-                        tb_vldesconto.setText("");
-                    }else {
-                        BancoController crud = new BancoController(getBaseContext());
-
-
-                        if (crud.verificaItemPedido(numpedido).equals("S")) {
-                            TextView lb_valorTotalProdutos = (TextView) findViewById(R.id.lb_valorTotalProdutos);
-                            //String.format("%.2f", vltotal);
+                    /*if (tb_vlFrete.getText().toString().trim().equals("")) {
+                        cl_Pedidos.setVlFrete("0.00");
+                    } else {
+                        /*cl_Pedidos.setVlFrete(String.valueOf(Double.parseDouble(tb_vlFrete.getText().toString().replace(".", "").replace(",", "."))));
 
-                            //lb_valorTotalProdutos.setText("Total: R$" + String.format("%.2f", VL_valorTotal));
-                            double valorBruto = Double.parseDouble(lb_valorTotalProdutos.getText().toString().replace("Total: R$", "").replace(",", "."));
-                            double valorPercDesconto = Double.parseDouble(tb_percDesconto.getText().toString().replace(",", "."));
+                        double vf_VlBruto = Double.parseDouble(cl_Pedidos.getVlTotalItens());
+                        double vf_VlLiquido = vf_VlBruto - Double.parseDouble(tb_vlDesconto.getText().toString().replace(",", "."));
 
-                            double porcentagem = valorPercDesconto / 100;
-                            double resultado = VL_valorTotal * porcentagem;
-                            double resultadoTotal = VL_valorTotal - resultado;
-                            resultado = Double.valueOf(String.format(Locale.US, "%.2f", resultadoTotal));
-                            String valor = String.format("%.2f", resultadoTotal);
+                        double vf_VltTotalPedido = vf_VlLiquido + Double.parseDouble(cl_Pedidos.getVlFrete());
 
-                            tb_vldesconto.setText(String.format("%.2f", resultado));
 
-                        }
-                    }
-                }catch (Exception e){
+                    }*/
+                    suCalcularValorPedido();
+                } catch (Exception e) {
                     e.printStackTrace();
                 }
             }
-        });*/
-
-        if(fgenviado.equals("S") || fgcancelado.equals("S")){
-            FU_BloqueiaCampos(false);
-
-            imagemProdutos = (ImageView) findViewById(R.id.imageViewProduto);
-
-            lb_descricaoProdutoPedidos = (TextView) findViewById(R.id.lb_descricaoProdutoPedidos);
-            lb_descricaoProdutoPedidosTeste = (TextView) findViewById(R.id.lb_descricaoProdutoPedidosTeste);
-
-            tb_percDesconto = (EditText) findViewById(R.id.tb_percdescontoPedido);
-            tb_vldesconto = (EditText) findViewById(R.id.tb_vldescontoPedido);
-            tb_condPgto = (EditText) findViewById(R.id.tb_condPgto);
-            tb_obsPedido = (EditText) findViewById(R.id.tb_obsPedido);
-
-            imagemProdutos.setEnabled(false);
-
-            lb_descricaoProdutoPedidos.setEnabled(false);
-            lb_descricaoProdutoPedidosTeste.setEnabled(false);
-
-            tb_percDesconto.setEnabled(false);
-            tb_vldesconto.setEnabled(false);
-            tb_condPgto.setEnabled(false);
-            tb_obsPedido.setEnabled(false);
-        }
+        });
     }
 
     @Override
@@ -338,1553 +251,1069 @@ public class ManutencaoPedidos extends AppCompatActivity {
         return true;
     }
 
-    public boolean FU_ConsistePedido(){
-        TextView tb_rzsocial = (TextView) findViewById(R.id.lb_rzsocialClientePedidosTeste);
-        if(tb_rzsocial.getText().equals("Toque para selecionar um cliente...")) {
-            MensagemUtil.addMsg(ManutencaoPedidos.this, "Favor selecionar um cliente para abertura do pedido!");
-            return false;
-        }
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
 
-        EditText tb_vldesconto = (EditText) findViewById(R.id.tb_vldescontoPedido);
-        if (!tb_percDesconto.getText().toString().trim().equals("") && Double.parseDouble(tb_percDesconto.getText().toString()) > 99) {
-            MensagemUtil.addMsg(ManutencaoPedidos.this, "Não é permitido um desconto superior a 99%!");
-            return false;
+        int id = item.getItemId();
+
+        if(id == android.R.id.home){
+            finish();
+            return true;
+        }else if (id == R.id.action_salvarpedido) {
+            suSalvarPedido();
+            return true;
+        }else if(id == R.id.action_enviaronline){
+            suEnviarOnline();
+            return true;
+        }else if(id == R.id.action_cancelarpedido){
+            suCancelarPedido();
+            return true;
+        }else if(id == R.id.action_duplicarpedido) {
+            suDuplicarPedido();
+            return true;
+        }else if(id == R.id.action_gerarpdf){
+            suCriarPDF();
+            return true;
+        }else if(id == R.id.action_excluirpedido){
+            suExcluirPedido();
+            return true;
         }
 
+        return super.onOptionsItemSelected(item);
+    }
+
+    @Override
+    protected void onActivityResult(int codigo, int resultado, Intent intent) {
         BancoController crud = new BancoController(getBaseContext());
-        String VA_possuiItemPedido = crud.verificaItemPedido(numpedido);
+        if(codigo == 1) {
+            if(resultado == 0) {
 
-        if(VA_possuiItemPedido.equals("N")){
-            if(!tb_vldesconto.getText().toString().trim().equals("") && Double.parseDouble(tb_vldesconto.getText().toString()) > 0){
-                MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi adicionado nenhum produto no pedido. Não é permitido informar nenhum desconto para este pedido!");
-                return  false;
-            }
-        }else {
-            if (!tb_percDesconto.getText().toString().trim().equals("") && Double.parseDouble(tb_vldesconto.getText().toString()) > 0) {
-                Cursor cursor = crud.carregaItemPedido(numpedido);
-                double VA_VlMaxDescPermitido = 0;
-                double VA_VlDescontoItens = 0;
-                try {
-                    VA_VlMaxDescPermitido += Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)));
-                    VA_VlDescontoItens += Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)));
-                    while (cursor.moveToNext()) {
-                        VA_VlMaxDescPermitido += Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)));
-                        VA_VlDescontoItens += Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)));
-                    }
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-                double VA_vlDesconto = Double.parseDouble(tb_percDesconto.getText().toString());
-                double porcentagem = VA_vlDesconto / 100;
-                double resultado = VL_valorTotal * porcentagem;
-                if ((resultado + VA_VlDescontoItens) > VA_VlMaxDescPermitido) {
-                    MensagemUtil.addMsg(ManutencaoPedidos.this, "Desconto informado é maior que o permitido!");
-                    return false;
-                }
-            }
-            if (!tb_vldesconto.getText().toString().trim().equals("") && Double.parseDouble(tb_vldesconto.getText().toString()) > 0) {
-                Cursor cursor = crud.carregaItemPedido(numpedido);
-                double VA_VlMaxDescPermitido = 0;
-                double VA_VlDescontoItens = 0;
+            }else if(resultado == 2){
                 try {
-                    VA_VlMaxDescPermitido += Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)));
-                    VA_VlDescontoItens += Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)));
-                    while (cursor.moveToNext()) {
-                        VA_VlMaxDescPermitido += Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)));
-                        VA_VlDescontoItens += Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)));
-                    }
-                } catch (Exception e) {
-                    e.printStackTrace();
+                    suCarregaItemPedido();
+                    suCalcularValorPedido();
+                }catch (Exception e) {
+                    MensagemUtil.addMsg(ManutencaoPedidos.this, e.getMessage().toString());
                 }
-                tb_vldesconto = (EditText) findViewById(R.id.tb_vldescontoPedido);
-                double resultado = Double.parseDouble(tb_vldesconto.getText().toString());
-
-                if ((resultado + VA_VlDescontoItens) > VA_VlMaxDescPermitido) {
-                    MensagemUtil.addMsg(ManutencaoPedidos.this, "Desconto informado é maior que o permitido!");
-                    return false;
-                }
-            }
-
-        }
-
-
+            }else {
+                CL_Clientes cl_Cliente = new CL_Clientes();
+                cl_Cliente.setId(String.valueOf(resultado));
 
-        return true;
-    }
+                CTL_Clientes ctl_Clientes = new CTL_Clientes(getApplicationContext(), cl_Cliente);
 
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
+                if(ctl_Clientes.fuCarregarClienteId()) {
+                    try {
+                        cl_Pedidos.setNomeRzSocial(cl_Cliente.getNomeRzSocial().toUpperCase());
+                        cl_Pedidos.setCdCliente(cl_Cliente.getCdCliente());
 
-        int id = item.getItemId();
+                        lb_SelecionarClienteResultado.setText(cl_Pedidos.getNomeRzSocial());
 
-        switch (item.getItemId()) {
+                        if (cl_Pedidos.getDtEmissao().trim().equals("")) {
 
-            // Id correspondente ao botão Up/Home da actionbar
-            case R.id.action_salvarpedido:
-                if (fgenviado.equals("S")) {
-                    MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido já foi enviado para o sistema online.");
-                } else if(fgcancelado.equals("S")) {
-                    MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido não pode ser salvo, pois o pedido foi cancelado!");
-                }else {
-                    if (FU_ConsistePedido()) {
-                        TextView tb_rzsocial = (TextView) findViewById(R.id.lb_rzsocialClientePedidosTeste);
-                        EditText tb_vldesconto = (EditText) findViewById(R.id.tb_percdescontoPedido);
+                            cl_Pedidos.setDtEmissao(funcoes.getDateTime().substring(0, 16));
+                            lb_dtEmissaoResultado.setText(cl_Pedidos.getDtEmissao());
 
-                        BancoController crud = new BancoController(getBaseContext());
-                        try {
-                            TextView tb_cdcliente = (TextView) findViewById(R.id.lb_rzsocialClientePedidos);
-                            tb_rzsocial = (TextView) findViewById(R.id.lb_rzsocialClientePedidosTeste);
-                            TextView tb_dtemissao = (TextView) findViewById(R.id.tb_dtemissaoResultado);
-                            EditText tb_condpgto = (EditText) findViewById(R.id.tb_condPgto);
-                            tb_percDesconto = (EditText) findViewById(R.id.tb_percdescontoPedido);
-                            tb_vldesconto = (EditText) findViewById(R.id.tb_vldescontoPedido);
-                            EditText tb_obs = (EditText) findViewById(R.id.tb_obsPedido);
-                            if (operacao.equals("I")) {
-                                numpedido = crud.carregaNumPedido();
-                            }
-                            if (fgcancelado.equals("N") && fgenviado.equals("N")) {
+                            suBloqueiaCampos(true);
 
-                                if (crud.verificaItemPedido(numpedido).equals("S")) {
+                            cl_Pedidos.setCdVendedor(ctl_Usuario.fuSelecionarVendedor());
+                            cl_Pedidos.setFgSituacao("A");
 
-                                    crud.alteraPedido(numpedido, tb_cdcliente.getText().toString(), tb_rzsocial.getText().toString().toUpperCase(), tb_condpgto.getText().toString().toUpperCase(), lb_valorTotal.getText().toString().substring(0, 27), tb_percDesconto.getText().toString(), tb_vldesconto.getText().toString(), tb_obs.getText().toString().toUpperCase(), "ABERTO");
-                                    MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido salvo com sucesso!");
+                            ctl_Pedidos = new CTL_Pedidos(getApplicationContext(), cl_Pedidos);
 
-                                } else {
-                                    crud.alteraPedido(numpedido, tb_cdcliente.getText().toString(), tb_rzsocial.getText().toString().toUpperCase(), tb_condpgto.getText().toString().toUpperCase(), "", tb_percDesconto.getText().toString(), tb_vldesconto.getText().toString(), tb_obs.getText().toString().toUpperCase(), "ABERTO");
-                                    MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido salvo com sucesso!");
-                                }
-                            } else {
-                                MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido não pode ser alterado, pois o pedido foi cancelado!");
+                            if(ctl_Pedidos.fuAbrirPedido())
+                            {
+                                cl_Pedidos.setNumPedido(ctl_Pedidos.fuCarregaNumPedido());
+                                MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido aberto com sucesso");
+                            }else{
+                                MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possível abrir o pedido");
                             }
-                            Intent intent = new Intent(ManutencaoPedidos.this, Pedidos.class);
-                            startActivity(intent);
-                        } catch (Exception e) {
-                            MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possivel salvar o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
                         }
+                    } catch (Exception e) {
+                        cl_Pedidos.setCdCliente("");
+                        cl_Pedidos.setNomeRzSocial("");
+                        cl_Pedidos.setDtEmissao("");
                     }
-
                 }
-                return true;
-            case R.id.action_enviaronline:
-
-                if (fgenviado.equals("S")) {
-                    MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido já foi enviado para o sistema online.");
-                } else if(fgcancelado.equals("S")) {
-                    MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido não pode ser enviado, pois o pedido foi cancelado!");
-                }else {
-                    if(FU_ConsistePedido()) {
-                        TextView tb_rzsocial = (TextView) findViewById(R.id.lb_rzsocialClientePedidosTeste);
-                        EditText tb_vldesconto = (EditText) findViewById(R.id.tb_percdescontoPedido);
-
-                        BancoController crud = new BancoController(getBaseContext());
-                        try {
-                            TextView tb_cdcliente = (TextView) findViewById(R.id.lb_rzsocialClientePedidos);
-                            tb_rzsocial = (TextView) findViewById(R.id.lb_rzsocialClientePedidosTeste);
-                            TextView tb_dtemissao = (TextView) findViewById(R.id.tb_dtemissaoResultado);
-                            EditText tb_condpgto = (EditText) findViewById(R.id.tb_condPgto);
-                            tb_percDesconto = (EditText) findViewById(R.id.tb_percdescontoPedido);
-                            tb_vldesconto = (EditText)findViewById(R.id.tb_vldescontoPedido);
-                            EditText tb_obs = (EditText) findViewById(R.id.tb_obsPedido);
-                            if (operacao.equals("I")) {
-                                numpedido = crud.carregaNumPedido();
-                            }
-                            crud.alteraPedido(numpedido, tb_cdcliente.getText().toString(), tb_rzsocial.getText().toString().toUpperCase(), tb_condpgto.getText().toString().toUpperCase(), lb_valorTotal.getText().toString().substring(0, 27), tb_percDesconto.getText().toString(), tb_vldesconto.getText().toString(), tb_obs.getText().toString().toUpperCase(), "ABERTO");
+            }
+        }else{
+            try {
+                suCarregaItemPedido();
+                suCalcularValorPedido();
+            }catch (Exception e) {
+                MensagemUtil.addMsg(ManutencaoPedidos.this, e.getMessage().toString());
+            }
+        }
+    }
 
-                            if (FU_ConsisteEnviarOnline()) {
-                                if (verificaConexao()) {
-                                    new LoadingAsyncOpcoes().execute();
+    @SuppressLint("RestrictedApi")
+    protected void suInstanciarCampos() {
 
-                                } else {
-                                    MensagemUtil.addMsg(ManutencaoPedidos.this, "É necessário ter conexão com a internet para o envio do pedido!");
-                                }
-                            }
 
-                        } catch (Exception e) {
-                            MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possivel enviar o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
-                        }
-                    }
+        cl_Pedidos = new CL_Pedidos();
+        cl_Usuario = new CL_Usuario();
+        ctl_Usuario = new CTL_Usuario(getApplicationContext(), cl_Usuario);
 
-                }
+        vc_Operacao = this.getIntent().getStringExtra("operacao");
+
+        if (vc_Operacao.equals("A")) {
+            cl_Pedidos.setNumPedido(this.getIntent().getStringExtra("codigo"));
+        } else {
+            cl_Pedidos.setNumPedido("0");
+            cl_Pedidos.setFgSituacao("A");
+        }
 
-                return true;
-            case R.id.action_cancelarpedido:
+        lb_SelecionarClienteResultado = (TextView) findViewById(R.id.lb_SelecionarClienteResultado);
+        lb_SelecionarProdutoResultado = (TextView) findViewById(R.id.lb_SelecionarProdutoResultado);
+        lb_ocultarProdutos = (TextView) findViewById(R.id.lb_ocultarProdutos);
+        lb_valorTotalProdutos = (TextView) findViewById(R.id.lb_valorTotalProdutos);
+        lb_qtdeTotalProdutos = (TextView) findViewById(R.id.lb_qtdeTotalProdutos);
+        lb_dtEmissao = (TextView) findViewById(R.id.lb_dtEmissao);
+        lb_dtEmissaoResultado = (TextView) findViewById(R.id.lb_dtEmissaoResultado);
+        lb_vlDesconto = (TextView) findViewById(R.id.lb_vlDesconto);
+        lb_percDesconto = (TextView) findViewById(R.id.lb_percDesconto);
+        lb_condPgto = (TextView) findViewById(R.id.lb_condPgto);
+        lb_obsPedido = (TextView) findViewById(R.id.lb_obsPedido);
+        lb_valorTotal = (TextView) findViewById(R.id.lb_valorTotal);
+        lb_vlTotalResultado = (TextView) findViewById(R.id.lb_vlTotalResultado);
+
+        fab_SelecionarEmitente = (FloatingActionButton) findViewById(R.id.fab_AddClienteVenda);
+        fab_SelecionarEmitente.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                Intent intent = new Intent(ManutencaoPedidos.this, SelecaoCliente.class);
+                startActivityForResult(intent, 1);
+            }
+        });
 
-                TextView tb_rzsocial = (TextView) findViewById(R.id.lb_rzsocialClientePedidosTeste);
+        fab_AdicionarProduto = (FloatingActionButton) findViewById(R.id.fab_AddProdutoVenda);
+        fab_AdicionarProduto.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
 
-                if(tb_rzsocial.getText().toString().equals("Toque para selecionar um cliente...")) {
-                    MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido não foi aberto. Não será possivel realizar o cancelamento sem que o pedido seja aberto!");
-                    return false;
-                }else {
+                Intent intent = new Intent(ManutencaoPedidos.this, AdicionarProdutosCustomizada.class);
+                intent.putExtra("numpedido", cl_Pedidos.getNumPedido());
+                intent.putExtra("selecaoProdutos", "S");
+                startActivityForResult(intent, 1);
 
-                    if (fgenviado.equals("S")) {
-                        MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido não pode ser cancelado, pois já foi enviado para o sistema online.");
-                    } else {
-                        builder = new AlertDialog.Builder(this);
-
-                        //define o titulo
-                        builder.setTitle("Cancelar Pedido");
-                        //define a mensagem
-                        builder.setMessage("Deseja mesmo cancelar o pedido " + numpedido + "?");
-
-                        //define um botão como positivo
-                        builder.setPositiveButton("Sim", new DialogInterface.OnClickListener() {
-                            public void onClick(DialogInterface arg0, int arg1) {
-                                //Toast.makeText(ManutencaoProdutoPedido.this, "positivo=" + arg1, Toast.LENGTH_SHORT).show();
-                                BancoController crud = new BancoController(getBaseContext());
-                                try {
-                                    crud.alteraSituacaoPedido(numpedido, "CANCELADO");
-                                    MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido cancelado com sucesso!");
-                                    Intent intent = new Intent(ManutencaoPedidos.this, Pedidos.class);
-                                    startActivity(intent);
-                                } catch (Exception e) {
-                                    MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possivel cancelar o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
-                                }
+            }
+        });
 
+        lv_ItensPedido = (ListView) findViewById(R.id.listViewItemPedidos);
 
-                            }
-                        });
-                        //define um botão como negativo.
-                        builder.setNegativeButton("Não", new DialogInterface.OnClickListener() {
-                            public void onClick(DialogInterface arg0, int arg1) {
-                                //Toast.makeText(ManutencaoProdutoPedido.this, "negativo=" + arg1, Toast.LENGTH_SHORT).show();
+        lb_ocultarProdutos.setOnClickListener(new View.OnClickListener() {
+                                                  @Override
+                                                  public void onClick(View v) {
+                  if (lb_ocultarProdutos.getText().toString().equals("Mostrar Produtos")) {
+                      lv_ItensPedido.setVisibility(View.VISIBLE);
+                      lb_ocultarProdutos.setText("Ocultar Produtos");
+                      calculeHeightListView();
+                  } else {
+                      lv_ItensPedido.setVisibility(View.GONE);
+                      lb_ocultarProdutos.setText("Mostrar Produtos");
+                      calculeHeigthListViewReverse();
+                  }
+              }
+          }
+        );
 
-                            }
-                        });
-                        //cria o AlertDialog
-                        alerta = builder.create();
-                        //Exibe
-                        alerta.show();
-                    }
-                }
-                return true;
-            case R.id.action_excluirpedido:
-                tb_rzsocial = (TextView) findViewById(R.id.lb_rzsocialClientePedidosTeste);
-
-                if(tb_rzsocial.getText().toString().equals("Toque para selecionar um cliente...")) {
-                    MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido não foi aberto. Não será possivel realizar a exclusão sem que o pedido seja aberto!");
-                    return false;
-                }else {
-                    builder = new AlertDialog.Builder(this);
-
-                    //define o titulo
-                    builder.setTitle("Excluir Pedido");
-                    //define a mensagem
-                    builder.setMessage("Deseja mesmo excluir o pedido " + numpedido + "?");
-
-                    //define um botão como positivo
-                    builder.setPositiveButton("Sim", new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface arg0, int arg1) {
-                            //Toast.makeText(ManutencaoProdutoPedido.this, "positivo=" + arg1, Toast.LENGTH_SHORT).show();
-                            BancoController crud = new BancoController(getBaseContext());
-                            try {
-                                crud.deletaPedido(Integer.parseInt(numpedido));
-                                MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido excluido com sucesso!");
-                                Intent intent = new Intent(ManutencaoPedidos.this, Pedidos.class);
-                                startActivity(intent);
-                            } catch (Exception e) {
-                                MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possivel excluir o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
-                            }
+        tb_vlDesconto = (EditText) findViewById(R.id.tb_vlDesconto);
 
+        Locale mLocale = new Locale("pt", "BR");
+        tb_vlDesconto.addTextChangedListener(new MoneyTextWatcher(tb_vlDesconto, mLocale));
 
-                        }
-                    });
-                    //define um botão como negativo.
-                    builder.setNegativeButton("Não", new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface arg0, int arg1) {
-                            //Toast.makeText(ManutencaoProdutoPedido.this, "negativo=" + arg1, Toast.LENGTH_SHORT).show();
+        tb_percDesconto = (EditText) findViewById(R.id.tb_percDesconto);
+        tb_vlFrete = (EditText)findViewById(R.id.tb_vlFrete);
+        tb_vlFrete.addTextChangedListener(new MoneyTextWatcher(tb_vlFrete, mLocale));
 
-                        }
-                    });
-                    //cria o AlertDialog
-                    alerta = builder.create();
-                    //Exibe
-                    alerta.show();
-                }
+        tb_condPgto = (EditText) findViewById(R.id.tb_condPgto);
+        tb_obsPedido = (EditText) findViewById(R.id.tb_obsPedido);
 
-                return true;
+        if(vc_Operacao.equals("I")){
+            suBloqueiaCampos(false);
+            fab_SelecionarEmitente.setVisibility(View.VISIBLE);
         }
-
-        return super.onOptionsItemSelected(item);
     }
 
-    public boolean FU_ConsisteEnviarOnline(){
-        tb_condPgto = (EditText)findViewById(R.id.tb_condPgto);
-        TextView tb_rzsocial = (TextView) findViewById(R.id.lb_rzsocialClientePedidosTeste);
+    protected boolean fuInstanciarPedido() {
 
-        String VA_possuiItemPedido = "N";
-        BancoController crud = new BancoController(getBaseContext());
-        VA_possuiItemPedido = crud.verificaItemPedido(numpedido);
+        try {
+            cl_Pedidos.setQtdeItens(lb_qtdeTotalProdutos.getText().toString().replace("Qtde: ", ""));
+            cl_Pedidos.setCondPgto(tb_condPgto.getText().toString().toUpperCase());
+            //String.format("%.5f", vf_Porcentagem)
+            double vf_VlDesconto = 0.0;
+            if(!tb_vlDesconto.getText().toString().trim().equals("")){
+                vf_VlDesconto = Double.parseDouble(tb_vlDesconto.getText().toString().replace(".", "").replace(",", "."));
+            }
+            cl_Pedidos.setVlDesconto(String.format("%.2f", vf_VlDesconto).replace(".", "").replace(",", "."));
+            cl_Pedidos.setPercDesconto(tb_percDesconto.getText().toString());
+            double vf_VlFrete = 0.0;
+            if(!tb_vlFrete.getText().toString().trim().equals("")){
+                vf_VlFrete = Double.parseDouble(tb_vlFrete.getText().toString().replace(".", "").replace(",", "."));
+            }
+            cl_Pedidos.setVlFrete(String.format("%.2f", vf_VlFrete).replace(".", "").replace(",", "."));
+            cl_Pedidos.setVlTotal(lb_vlTotalResultado.getText().toString().replace("R$", "").replace(".", "").replace(",", "."));
+            cl_Pedidos.setObsPedido(tb_obsPedido.getText().toString().toUpperCase());
 
-        if(tb_rzsocial.getText().toString().equals("Toque para selecionar um cliente...")) {
-            MensagemUtil.addMsg(ManutencaoPedidos.this, "Favor selecionar um cliente no pedido!");
+            ctl_Pedidos = new CTL_Pedidos(getApplicationContext(), cl_Pedidos);
+
+            return true;
+
+        } catch (Exception e) {
             return false;
         }
-        if(!VA_possuiItemPedido.equals("S")) {
-            MensagemUtil.addMsg(ManutencaoPedidos.this, "Deve ser informado ao menos um produto no pedido.");
-            return  false;
-        }
-        if(tb_condPgto.getText().toString().trim().equals("")){
-            MensagemUtil.addMsg(ManutencaoPedidos.this, "Deve ser informada a forma de pagamento do pedido.");
-            return false;
+    }
+
+    @SuppressLint("RestrictedApi")
+    public void suBloqueiaCampos(boolean habilitar){
+
+
+        lb_SelecionarClienteResultado.setEnabled(habilitar);
+        lb_SelecionarProdutoResultado.setEnabled(habilitar);
+        //lb_ocultarProdutos.setEnabled(habilitar);
+        lb_valorTotalProdutos.setEnabled(habilitar);
+        lb_qtdeTotalProdutos.setEnabled(habilitar);
+        lb_dtEmissao.setEnabled(habilitar);
+        lb_dtEmissaoResultado.setEnabled(habilitar);
+        lb_vlDesconto.setEnabled(habilitar);
+        lb_percDesconto.setEnabled(habilitar);
+        lb_vlDesconto.setEnabled(habilitar);
+        lb_percDesconto.setEnabled(habilitar);
+        lb_condPgto.setEnabled(habilitar);
+        lb_obsPedido.setEnabled(habilitar);
+        lb_valorTotal.setEnabled(habilitar);
+        lb_vlTotalResultado.setEnabled(habilitar);
+
+        if(habilitar) {
+            fab_SelecionarEmitente.setVisibility(View.VISIBLE);
+            fab_AdicionarProduto.setVisibility(View.VISIBLE);
+        }else{
+            fab_SelecionarEmitente.setVisibility(View.INVISIBLE);
+            fab_AdicionarProduto.setVisibility(View.INVISIBLE);
         }
-        return true;
+
+        lv_ItensPedido.setEnabled(habilitar);
+
+        tb_vlDesconto.setEnabled(habilitar);
+        tb_percDesconto.setEnabled(habilitar);
+        tb_vlFrete.setEnabled(habilitar);
+        tb_condPgto.setEnabled(habilitar);
+        tb_obsPedido.setEnabled(habilitar);
+
     }
 
-    @Override
-    protected void onActivityResult(int codigo, int resultado, Intent intent) {
-        BancoController crud = new BancoController(getBaseContext());
-        if(codigo == 1) {
-            if(resultado == 0){
+    public boolean fuConsistePedido() {
+        if (cl_Pedidos.getCdCliente().trim().equals("")) {
+            MensagemUtil.addMsg(ManutencaoPedidos.this, "Favor selecionar um cliente para abertura do pedido!");
+            return false;
+        }
 
-            }else {
-                Cursor cursor = crud.carregaClienteById(resultado);
-                TextView tb_cdcliente = (TextView) findViewById(R.id.lb_rzsocialClientePedidos);
-                tb_cdcliente.setText(String.valueOf(resultado));
-                TextView tb_rzsocial = (TextView) findViewById(R.id.lb_rzsocialClientePedidosTeste);
-                try {
-                    if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.RZSOCIAL)).equals("null")) {
-                        tb_rzsocial.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.RZSOCIAL)).toUpperCase());
-                        nmcliente = tb_rzsocial.getText().toString();
-                        TextView lb_dtemissao = (TextView) findViewById(R.id.tb_dtemissaoResultado);
-                        String cdcliente = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDCLIENTE));
-                        tb_cdcliente.setText(cdcliente);
-                        if (lb_dtemissao.getText().toString().trim().equals("")) {
-                            lb_dtemissao.setText(getDateTime().substring(0, 16));
+        if (!cl_Pedidos.getPercDesconto().trim().equals("") && Double.parseDouble(cl_Pedidos.getPercDesconto()) > 99) {
+            MensagemUtil.addMsg(ManutencaoPedidos.this, "Não é permitido um desconto superior a 99%!");
+            return false;
+        }
 
-                            imagemProdutos = (ImageView) findViewById(R.id.imageViewProduto);
+        if (!cl_Pedidos.getQtdeItens().trim().equals("")) {
+            if (!cl_Pedidos.getVlDesconto().trim().equals("") && Double.parseDouble(cl_Pedidos.getVlDesconto()) > 0) {
 
-                            lb_descricaoProdutoPedidos = (TextView) findViewById(R.id.lb_descricaoProdutoPedidos);
-                            lb_descricaoProdutoPedidosTeste = (TextView) findViewById(R.id.lb_descricaoProdutoPedidosTeste);
 
-                            tb_percDesconto = (EditText) findViewById(R.id.tb_percdescontoPedido);
-                            tb_vldesconto = (EditText) findViewById(R.id.tb_vldescontoPedido);
-                            tb_condPgto = (EditText) findViewById(R.id.tb_condPgto);
-                            tb_obsPedido = (EditText) findViewById(R.id.tb_obsPedido);
+                CL_ItemPedido cl_ItemPedido = new CL_ItemPedido();
+                cl_ItemPedido.setNumPedido(cl_Pedidos.getNumPedido());
 
-                            imagemProdutos.setEnabled(true);
+                CTL_ItemPedido ctl_ItemPedido = new CTL_ItemPedido(getApplicationContext(), cl_ItemPedido);
 
-                            lb_descricaoProdutoPedidos.setEnabled(true);
-                            lb_descricaoProdutoPedidosTeste.setEnabled(true);
 
-                            tb_percDesconto.setEnabled(true);
-                            tb_vldesconto.setEnabled(true);
-                            tb_condPgto.setEnabled(true);
-                            tb_obsPedido.setEnabled(true);
+                try {
+                    double vf_VlMaxDescPermitido = 0;
+                    double vf_VlDescontoItens = 0;
 
-                            String cdVendedor = crud.selecionaVendedor();
-                            crud.abrirPedido(cdcliente, nmcliente, lb_dtemissao.getText().toString(), cdVendedor, "ABERTO");
+                    if (ctl_ItemPedido.fuCarregaTodosItensPedido()) {
 
+                        Cursor rs_ItemPedido = ctl_ItemPedido.rs_ItemPedido;
+                        while (!rs_ItemPedido.isAfterLast()) {
+                            vf_VlMaxDescPermitido += Double.parseDouble(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)));
+                            vf_VlDescontoItens += Double.parseDouble(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)));
 
+                            rs_ItemPedido.moveToNext();
                         }
                     }
+
+
+                    double VA_vlDesconto = Double.parseDouble(tb_percDesconto.getText().toString());
+                    double porcentagem = VA_vlDesconto / 100;
+                    double resultado = Double.parseDouble(cl_Pedidos.getVlTotal()) * porcentagem;
+                    if ((resultado + vf_VlDescontoItens) > vf_VlMaxDescPermitido) {
+                        MensagemUtil.addMsg(ManutencaoPedidos.this, "Desconto informado é maior que o permitido!");
+                        return false;
+                    }
                 } catch (Exception e) {
-                    tb_rzsocial.setText("");
+                    e.printStackTrace();
                 }
+
             }
-        }else{
-            try {
-                FU_CarregaItemPedido();
-                FU_CalcularValorPedido();
-            }catch (Exception e) {
-                MensagemUtil.addMsg(ManutencaoPedidos.this, e.getMessage().toString());
+
+        } else {
+            if (!cl_Pedidos.getVlDesconto().equals("") && Double.parseDouble(cl_Pedidos.getVlDesconto()) > 0) {
+                MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi adicionado nenhum produto no pedido. Não é permitido informar nenhum desconto para este pedido!");
+                return false;
             }
         }
-    }
 
-    private String getDateTime() {
-        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
-        Date date = new Date();
-        return dateFormat.format(date);
+        return true;
     }
 
-    @Override
-    protected void onSaveInstanceState(Bundle bundle){
-        super.onSaveInstanceState(bundle);
+    public void suSalvarPedido() {
+        if (cl_Pedidos.getFgSituacao().equals("E")) {
+            MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido já foi enviado para o sistema online.");
+        } else if (cl_Pedidos.getFgSituacao().equals("C")) {
+            MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido não pode ser salvo, pois o pedido foi cancelado!");
+        } else {
+            if (fuInstanciarPedido()) {
+                if (fuConsistePedido()) {
+                    try {
 
-        bundle.putSerializable(EstadoPedido.KEY, new EstadoPedido(nmcliente));
+                        if (vc_Operacao.equals("I")) {
+                            cl_Pedidos.setNumPedido(ctl_Pedidos.fuCarregaNumPedido());
+                        }
+                        if (ctl_Pedidos.fuAlterarPedido()) {
+                            MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido salvo com sucesso!");
+                            Intent intent = new Intent();
+                            setResult(1, intent);
+                            finish();
+                        } else {
+                            MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi ´possível salvar o pedido");
+                        }
+
+                    } catch (Exception e) {
+                        MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possivel salvar o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
+                    }
+                }
+            }
+        }
     }
 
-    protected void FU_VisibilidadeProdutos(Boolean visibilidade){
-        TextView lb_fundoOcultarProdutos = (TextView)findViewById(R.id.lb_fundoOcultarProdutos);
-        TextView lb_ocultarProdutos = (TextView)findViewById(R.id.lb_ocultarProdutos);
-        TextView lb_valorTotalProdutos = (TextView)findViewById(R.id.lb_valorTotalProdutos);
-        TextView lb_qtdeTotalProdutos = (TextView)findViewById(R.id.lb_qtdeTotalProdutos);
+    public void suEnviarOnline() {
 
-        TextView tb_dtemissao = (TextView)findViewById(R.id.tb_dtemissao);
+        try {
+            suSalvarPedido();
 
+            if (fuConsisteEnviarOnline()) {
+                if (verificaConexao()) {
+                    LoadingAsyncEnviarPedido async_EnviarPedido = new LoadingAsyncEnviarPedido();
+                    async_EnviarPedido.execute();
 
-        if(visibilidade == true){
-            lb_fundoOcultarProdutos.setVisibility(View.VISIBLE);
-            lb_ocultarProdutos.setVisibility(View.VISIBLE);
-            lb_valorTotalProdutos.setVisibility(View.VISIBLE);
-            lb_qtdeTotalProdutos.setVisibility(View.VISIBLE);
+                } else {
+                    MensagemUtil.addMsg(ManutencaoPedidos.this, "É necessário ter conexão com a internet para o envio do pedido!");
+                }
+            }
 
-            RelativeLayout.LayoutParams p_endereco = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                    ViewGroup.LayoutParams.WRAP_CONTENT);
-            p_endereco.addRule(RelativeLayout.BELOW, R.id.lb_fundoOcultarProdutos);
-            p_endereco.setMargins(0, 25, 0, 0);
-            tb_dtemissao.setLayoutParams(p_endereco);
-        }else{
-            lb_fundoOcultarProdutos.setVisibility(View.INVISIBLE);
-            lb_ocultarProdutos.setVisibility(View.INVISIBLE);
-            lb_valorTotalProdutos.setVisibility(View.INVISIBLE);
-            lb_qtdeTotalProdutos.setVisibility(View.INVISIBLE);
-
-            RelativeLayout.LayoutParams p_endereco = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                    ViewGroup.LayoutParams.WRAP_CONTENT);
-            p_endereco.addRule(RelativeLayout.BELOW, R.id.lb_descricaoProdutoPedidos);
-            p_endereco.setMargins(0, 25, 0, 0);
-            tb_dtemissao.setLayoutParams(p_endereco);
+        } catch (Exception e) {
+            MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possivel enviar o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
         }
     }
 
-    protected void FU_CalcularValorPedido(){
+    protected void suCancelarPedido(){
+        if(cl_Pedidos.getCdCliente().trim().equals("")) {
+            MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido não foi aberto. Não será possivel realizar o cancelamento sem que o pedido seja aberto!");
+        }else {
+            if (cl_Pedidos.getFgSituacao().equals("E")) {
+                MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido não pode ser cancelado, pois já foi enviado para o sistema online.");
+            } else {
+                builder = new AlertDialog.Builder(this);
 
-        tb_percDesconto = (EditText)findViewById(R.id.tb_percdescontoPedido);
-        lb_valorTotal = (TextView)findViewById(R.id.lb_valorTotal);
-        double VA_vlDesconto = 0;
-        if(tb_percDesconto.getText().toString().trim().equals("") || tb_percDesconto.getText().toString().equals("0")){
-            String valor = String.format("%.2f", VL_valorTotal);
-                lb_valorTotal.setText("Total Liquido do Pedido: R$" + valor);
-            //lb_valorTotal.setText("Total Liquido do Pedido: R$" + String.valueOf(VL_valorTotal));
-        }else{
-            VA_vlDesconto = Double.parseDouble(tb_percDesconto.getText().toString());
-            double porcentagem = VA_vlDesconto / 100;
-            double resultado = VL_valorTotal * porcentagem;
-            double resultadoTotal = VL_valorTotal - resultado;
-            resultadoTotal = Double.valueOf(String.format(Locale.US, "%.2f", resultadoTotal));
-            String valor = String.format("%.2f", resultadoTotal);
-            lb_valorTotal.setText("Total Liquido do Pedido: R$" + valor);
-        }
+                //define o titulo
+                builder.setTitle("Cancelar Pedido");
+                //define a mensagem
+                builder.setMessage("Deseja mesmo cancelar o pedido " + cl_Pedidos.getNumPedido() + "?");
 
+                //define um botão como positivo
+                builder.setPositiveButton("Sim", new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface arg0, int arg1) {
 
-    }
+                        cl_Pedidos.setFgSituacao("C");
+                        ctl_Pedidos =  new CTL_Pedidos(getApplicationContext(), cl_Pedidos);
 
-    protected void FU_CarregaPedido(){
-        BancoController crud = new BancoController(getBaseContext());
-        Cursor cursor = crud.carregaDadosPedido(numpedido);
+                        try {
+                            if(ctl_Pedidos.fuAlterarSituacaoPedido()){
+                                MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido cancelado com sucesso!");
+                                Intent intent = new Intent();
+                                setResult(1, intent);
+                                finish();
+                            }else{
+                                MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possivel cancelar o pedido devido à seguinte situação: " + ctl_Pedidos.vc_Mensagem + ".");
+                            }
 
-        TextView tb_cdcliente = (TextView) findViewById(R.id.lb_rzsocialClientePedidos);
-        TextView tb_rzsocial = (TextView) findViewById(R.id.lb_rzsocialClientePedidosTeste);
-        TextView lb_dtemissao = (TextView) findViewById(R.id.tb_dtemissaoResultado);
+                        } catch (Exception e) {
+                            MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possivel cancelar o pedido devido à seguinte situação: " + ctl_Pedidos.vc_Mensagem + ".");
+                        }
 
-        imagemProdutos = (ImageView)findViewById(R.id.imageViewProduto);
+                    }
+                });
+                //define um botão como negativo.
+                builder.setNegativeButton("Não", new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface arg0, int arg1) {
+                        //Toast.makeText(ManutencaoProdutoPedido.this, "negativo=" + arg1, Toast.LENGTH_SHORT).show();
 
-        lb_descricaoProdutoPedidos = (TextView)findViewById(R.id.lb_descricaoProdutoPedidos);
-        lb_descricaoProdutoPedidosTeste = (TextView)findViewById(R.id.lb_descricaoProdutoPedidosTeste);
-        lb_valorTotal = (TextView)findViewById(R.id.lb_valorTotal);
+                    }
+                });
+                //cria o AlertDialog
+                alerta = builder.create();
+                //Exibe
+                alerta.show();
+            }
+        }
+    }
 
-        tb_percDesconto = (EditText)findViewById(R.id.tb_percdescontoPedido);
-        tb_vldesconto = (EditText)findViewById(R.id.tb_vldescontoPedido);
-        tb_condPgto = (EditText)findViewById(R.id.tb_condPgto);
-        tb_obsPedido = (EditText)findViewById(R.id.tb_obsPedido);
+    protected void suDuplicarPedido(){
+        AlertDialog al_DuplicarPedido;
+        AlertDialog.Builder bu_DuplicarPedido;
 
-        imagemProdutos.setEnabled(true);
+        bu_DuplicarPedido = new AlertDialog.Builder(ManutencaoPedidos.this);
 
-        lb_descricaoProdutoPedidos.setEnabled(true);
-        lb_descricaoProdutoPedidosTeste.setEnabled(true);
+        //define o titulo
+        bu_DuplicarPedido.setTitle("Duplicar pedido " + cl_Pedidos.getNumPedido());
+        //define a mensagem
+        bu_DuplicarPedido.setMessage("Deseja mesmo duplicar o pedido " + cl_Pedidos.getNumPedido() + "?");
 
-        tb_percDesconto.setEnabled(true);
-        tb_vldesconto.setEnabled(true);
-        tb_condPgto.setEnabled(true);
-        tb_obsPedido.setEnabled(true);
+        //define um botão como positivo
+        bu_DuplicarPedido.setPositiveButton("Sim", new DialogInterface.OnClickListener() {
+            public void onClick(DialogInterface arg0, int arg1) {
 
-        try {
-            if(!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDEMITENTE)).equals("null")) {
-                tb_cdcliente.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDEMITENTE)));
-            }
-        }catch (Exception e){
-            tb_cdcliente.setText("");
-        }
+                ctl_Pedidos = new CTL_Pedidos(getApplicationContext(), cl_Pedidos);
 
-        try {
-            if(!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.RZSOCIAL)).equals("null")) {
-                tb_rzsocial.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.RZSOCIAL)));
-            }
-        }catch (Exception e){
-            tb_rzsocial.setText("");
-        }
+                if(ctl_Pedidos.fuCarregarPedido()){
+                    try {
+                        String vf_NumPedidoOriginal = cl_Pedidos.getNumPedido();
+                        if(ctl_Pedidos.fuDuplicarPedido()){
 
-        try {
-            if(!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CONDPGTO)).equals("null")) {
-                tb_condPgto.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CONDPGTO)));
-            }
-        }catch (Exception e){
-            tb_condPgto.setText("");
-        }
+                            CL_ItemPedido cl_ItemPedido = new CL_ItemPedido();
+                            cl_ItemPedido.setNumPedido(cl_Pedidos.getNumPedido());
 
-        try {
-            if(!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).equals("null")) {
-                tb_percDesconto.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)));
-            }
-        }catch (Exception e){
-            tb_percDesconto.setText("");
-        }
+                            CTL_ItemPedido ctl_ItemPedido = new CTL_ItemPedido(getApplicationContext(), cl_ItemPedido);
 
-        try {
-            if(!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).equals("null")) {
-                tb_vldesconto.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)));
-            }
-        }catch (Exception e){
-            tb_vldesconto.setText("");
-        }
+                            if(ctl_ItemPedido.fuDuplicarItensPedidoDuplicado(vf_NumPedidoOriginal)) {
+                                MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido duplicado com sucesso!");
+                                finish();
+                            }else{
+                                MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possível duplicar os itens do pedido!");
+                            }
+                        }else{
+                            MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possível duplicar o pedido!");
+                        }
+                    }catch (Exception e){
+                        MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possivel duplicar o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
+                    }
 
-        try {
-            if(!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.OBS)).equals("null")) {
-                tb_obsPedido.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.OBS)));
+                }
             }
-        }catch (Exception e){
-            tb_obsPedido.setText("");
-        }
+        });
+        //define um botão como negativo.
+        bu_DuplicarPedido.setNegativeButton("Não", new DialogInterface.OnClickListener() {
+            public void onClick(DialogInterface arg0, int arg1) {
 
-        try {
-            if(!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DTEMISSAO)).equals("null")) {
-                lb_dtemissao.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DTEMISSAO)));
             }
-        }catch (Exception e){
-            lb_dtemissao.setText("");
-        }
+        });
+        //cria o AlertDialog
+        al_DuplicarPedido = bu_DuplicarPedido.create();
+        //Exibe
+        al_DuplicarPedido.show();
+    }
 
-        try {
-            if(!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).equals("null")) {
-                lb_valorTotal.setText("Total Liquido do Pedido: R$" + cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLTOTAL)));
-                //lb_dtemissao.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DTEMISSAO)));
-            }
-        }catch (Exception e){
-            lb_valorTotal.setText("Total Liquido do Pedido: R$0,00");
+    protected void suExcluirPedido(){
+        if(cl_Pedidos.getCdCliente().trim().equals("")) {
+            MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido não foi aberto. Não será possivel realizar a exclusão sem que o pedido seja aberto!");
+        }else {
+            builder = new AlertDialog.Builder(this);
+
+            //define o titulo
+            builder.setTitle("Excluir Pedido");
+            //define a mensagem
+            builder.setMessage("Deseja mesmo excluir o pedido " + cl_Pedidos.getNumPedido() + "?");
+
+            //define um botão como positivo
+            builder.setPositiveButton("Sim", new DialogInterface.OnClickListener() {
+                public void onClick(DialogInterface arg0, int arg1) {
+
+                    ctl_Pedidos = new CTL_Pedidos(getApplicationContext(), cl_Pedidos);
+
+                    try {
+                        if(ctl_Pedidos.fuDeletarPedido()){
+                            MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido excluido com sucesso!");
+                            finish();
+                        }else{
+                            MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possivel excluir o pedido devido à seguinte situação: " + ctl_Pedidos.vc_Mensagem + ".");
+                        }
+
+                    } catch (Exception e) {
+                        MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possivel excluir o pedido devido à seguinte situação: " + ctl_Pedidos.vc_Mensagem + ".");
+                    }
+
+
+                }
+            });
+            //define um botão como negativo.
+            builder.setNegativeButton("Não", new DialogInterface.OnClickListener() {
+                public void onClick(DialogInterface arg0, int arg1) {
+                    //Toast.makeText(ManutencaoProdutoPedido.this, "negativo=" + arg1, Toast.LENGTH_SHORT).show();
+
+                }
+            });
+            //cria o AlertDialog
+            alerta = builder.create();
+            //Exibe
+            alerta.show();
         }
+    }
 
-        if(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.FGSITUACAO)).equals("CANCELADO")) {
-            FU_BloqueiaCampos(false);
-            fgcancelado = "S";
-            fgenviado = "N";
-        }else if(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.FGSITUACAO)).equals("ENVIADO")) {
-            fgenviado = "S";
-            fgcancelado = "N";
-        }else{
-            fgcancelado = "N";
-            fgenviado = "N";
+    public boolean fuConsisteEnviarOnline(){
+
+        if(cl_Pedidos.getCdCliente().trim().equals("")) {
+            MensagemUtil.addMsg(ManutencaoPedidos.this, "Favor selecionar um cliente no pedido!");
+            return false;
         }
+        if(cl_Pedidos.getQtdeItens().trim().equals("")) {
+            MensagemUtil.addMsg(ManutencaoPedidos.this, "Deve ser informado ao menos um produto no pedido.");
+            return  false;
+        }
+        if(cl_Pedidos.getCondPgto().trim().equals("")){
+            MensagemUtil.addMsg(ManutencaoPedidos.this, "Deve ser informada a forma de pagamento do pedido.");
+            return false;
+        }
+        return true;
+    }
+
+    protected void suCalcularValorPedido(){
 
+        double vf_vlDesconto = 0;
+        if(tb_percDesconto.getText().toString().trim().equals("") || tb_percDesconto.getText().toString().equals("0")){
+            if(tb_vlFrete.getText().toString().trim().equals("")){
+                cl_Pedidos.setVlFrete("0.00");
+            }else{
+                cl_Pedidos.setVlFrete(String.valueOf(Double.parseDouble(tb_vlFrete.getText().toString().replace(".", "").replace(",", "."))));
+            }
+            double vf_VlTotalFrete = Double.parseDouble(cl_Pedidos.getVlTotalItens()) + Double.parseDouble(cl_Pedidos.getVlFrete());
+            String vf_Valor = String.format("%.2f", vf_VlTotalFrete);
+            cl_Pedidos.setVlTotal(vf_Valor.replace(",", "."));
+            lb_vlTotalResultado.setText("R$" + vf_Valor);
+        }else{
+            vf_vlDesconto = Double.parseDouble(tb_vlDesconto.getText().toString().replace(".", "").replace(",", "."));
+            if(tb_vlFrete.getText().toString().trim().equals("")){
+                cl_Pedidos.setVlFrete("0.00");
+            }else{
+                cl_Pedidos.setVlFrete(String.valueOf(Double.parseDouble(tb_vlFrete.getText().toString().replace(".", "").replace(",", "."))));
+            }
+            double resultadoTotal = (Double.parseDouble(cl_Pedidos.getVlTotalItens()) - vf_vlDesconto) + Double.parseDouble(cl_Pedidos.getVlFrete());
+            resultadoTotal = Double.valueOf(String.format(Locale.US, "%.2f", resultadoTotal));
+            String valor = String.format("%.2f", resultadoTotal);
+            cl_Pedidos.setVlTotal(valor.replace(",", "."));
+            lb_vlTotalResultado.setText("R$" + valor);
+        }
 
 
     }
 
-    protected void FU_CarregaItemPedido(){
-        BancoController crud = new BancoController(getBaseContext());
-        String VA_possuiItemPedido = "N";
-        VA_possuiItemPedido = crud.verificaItemPedido(numpedido);
-        VL_valorTotal = 0;
-        if(VA_possuiItemPedido.equals("S")) {
-            final Cursor cursorItemPedido = crud.carregaItemPedido(numpedido);
-
-            VL_valorTotal = 0;
-            double VA_quantidadeTotal = 0;
-            String VA_ValorProduto = "";
-            String VA_ValorAtacado = "";
-            VA_ContProdutos = 0;
-            List<String> descricaoPedidos = new ArrayList<>();
-            List<String> itensRestantesPedidos = new ArrayList<>();
-            List<String> valorProdutos = new ArrayList<>();
-            List<String> valorAtacado = new ArrayList<>();
-            if (cursorItemPedido != null) {
-                descricaoPedidos.add(cursorItemPedido.getString(cursorItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)));
-                itensRestantesPedidos.add(cursorItemPedido.getString(cursorItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)));
-                valorProdutos.add(cursorItemPedido.getString(cursorItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)));
-                VA_quantidadeTotal = VA_quantidadeTotal + Double.parseDouble(cursorItemPedido.getString(cursorItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)));
-                VL_valorTotal = VL_valorTotal + Double.parseDouble(cursorItemPedido.getString(cursorItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).replace(",", "."));
-                VA_ContProdutos = VA_ContProdutos + 1;
-                while (cursorItemPedido.moveToNext()) {
-                    descricaoPedidos.add(cursorItemPedido.getString(cursorItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)));
-                    itensRestantesPedidos.add(cursorItemPedido.getString(cursorItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)));
-                    valorProdutos.add(cursorItemPedido.getString(cursorItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)));
-                    VA_quantidadeTotal = VA_quantidadeTotal + Double.parseDouble(cursorItemPedido.getString(cursorItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)));
-                    VL_valorTotal = VL_valorTotal + Double.parseDouble(cursorItemPedido.getString(cursorItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).replace(",", "."));
-                    VA_ContProdutos = VA_ContProdutos + 1;
+    protected void suCarregarPedido(){
 
-                }
+        ctl_Pedidos = new CTL_Pedidos(getApplicationContext(), cl_Pedidos);
 
+        if(ctl_Pedidos.fuCarregarPedido()){
+            try {
+                lb_SelecionarClienteResultado.setText(cl_Pedidos.getNomeRzSocial().toUpperCase());
+            }catch (Exception e){
+                lb_SelecionarClienteResultado.setText("");
             }
 
-            FU_VisibilidadeProdutos(true);
-                /*descricaoPedidos.add("CATAFLAM PARA HEMATOMAS");
-                itensRestantesPedidos.add("10");
-                VA_ContProdutos = VA_ContProdutos + 1;
-
-                descricaoPedidos.add("PRODUTO PARA TESTE DE LISTVIEW NO ANDROID");
-                itensRestantesPedidos.add("5");
-                VA_ContProdutos = VA_ContProdutos + 1;
+            try {
+                tb_condPgto.setText(cl_Pedidos.getCondPgto().toUpperCase());
+            }catch (Exception e){
+                tb_condPgto.setText("");
+            }
 
+            try {
+                tb_percDesconto.setText(cl_Pedidos.getPercDesconto());
+            }catch (Exception e){
+                tb_percDesconto.setText("");
+            }
 
-                descricaoPedidos.add("PRODUTO PARA TESTE DE LISTVIEW NO ANDROID PARA VER SE ELE COLOCA MAIS LINHAS");
-                itensRestantesPedidos.add("5");
-                VA_ContProdutos = VA_ContProdutos + 1;*/
+            try {
+                tb_vlDesconto.setText(cl_Pedidos.getVlDesconto());
+            }catch (Exception e){
+                tb_vlDesconto.setText("");
+            }
 
-            TextView lb_valorTotalProdutos = (TextView) findViewById(R.id.lb_valorTotalProdutos);
-            TextView lb_qtdeTotalProdutos = (TextView) findViewById(R.id.lb_qtdeTotalProdutos);
-            //String.format("%.2f", vltotal);
+            try {
+                tb_vlFrete.setText(cl_Pedidos.getVlFrete());
+            }catch (Exception e){
+                tb_vlFrete.setText("");
+            }
 
-            lb_valorTotalProdutos.setText("Total: R$" +  String.format("%.2f", VL_valorTotal));
-            lb_qtdeTotalProdutos.setText("Qtde: " + String.valueOf(VA_quantidadeTotal) + " item(ns)");
+            try {
+                tb_obsPedido.setText(cl_Pedidos.getObsPedido().toUpperCase());
+            }catch (Exception e){
+                tb_obsPedido.setText("");
+            }
 
-            List<Integer> icones = new ArrayList<>();
+            try {
+                lb_dtEmissaoResultado.setText(cl_Pedidos.getDtEmissao());
+            }catch (Exception e){
+                lb_dtEmissaoResultado.setText("");
+            }
 
+            try {
+                lb_vlTotalResultado.setText("R$" + cl_Pedidos.getVlTotal().replace(".", ","));
+            }catch (Exception e){
+                lb_vlTotalResultado.setText("R$0,00");
+            }
 
-            for (int i = 0; i < VA_ContProdutos; i++) {
-                icones.add(R.drawable.sem_foto);
+            if(cl_Pedidos.getFgSituacao().equals("ABERTO")){
+                suBloqueiaCampos(true);
+            }else if(cl_Pedidos.getFgSituacao().equals("CANCELADO")){
+                suBloqueiaCampos(false);
+            }else if(cl_Pedidos.getFgSituacao().equals("ENVIADO")){
+                suBloqueiaCampos(false);
             }
+        }
+    }
 
-            View.OnClickListener myhandler = new View.OnClickListener() {
-                public void onClick(View v) {
-                    // MY QUESTION STARTS HERE!!!
-                    // IF b1 do this
-                    // IF b2 do this
-                    // MY QUESTION ENDS HERE!!!
-                }
-            };
+    protected void suCarregaItemPedido(){
+
+        CL_ItemPedido cl_ItemPedido = new CL_ItemPedido();
+        cl_ItemPedido.setNumPedido(cl_Pedidos.getNumPedido());
+
+        CTL_ItemPedido ctl_ItemPedido = new CTL_ItemPedido(getApplicationContext(), cl_ItemPedido);
+        View vw_ListaProdutos = findViewById(R.id.la_ListaProdutos);
+
+        if(ctl_ItemPedido.fuCarregaTodosItensPedido()){
+
+            //la_ListaProdutos
+            lv_ItensPedido.setAdapter(null);
+
+            vw_ListaProdutos.setVisibility(View.VISIBLE);
 
-            ListView lista = (ListView) findViewById(R.id.listViewItemPedidos);
+            final Cursor rs_ItemPedido = ctl_ItemPedido.rs_ItemPedido;
 
-            ListaProdutosPedido adapter = new ListaProdutosPedido(this, icones, descricaoPedidos, itensRestantesPedidos, valorProdutos);
-            lista.setAdapter(adapter);
+            List<String> descricaoPedidos = new ArrayList<>();
+            List<String> itensRestantesPedidos = new ArrayList<>();
+            List<String> valorProdutos = new ArrayList<>();
+            List<String> valorAtacado = new ArrayList<>();
+
+            double vf_VlTotalItens = 0.0;
+            int vf_QtdeItens = 0;
 
+            while (!rs_ItemPedido.isAfterLast()){
 
+                descricaoPedidos.add(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)));
+                itensRestantesPedidos.add(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)));
+                valorProdutos.add(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)));
+                vf_QtdeItens += Double.parseDouble(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)));
+                vf_VlTotalItens += Double.parseDouble(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).replace(",", "."));
 
+                rs_ItemPedido.moveToNext();
+            }
 
+            lb_valorTotalProdutos.setText("Total: R$" +  String.format("%.2f", vf_VlTotalItens));
+            lb_qtdeTotalProdutos.setText("Qtde: " + String.valueOf(vf_QtdeItens));
 
-            lista.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            cl_Pedidos.setQtdeItens(String.valueOf(vf_QtdeItens));
+            cl_Pedidos.setVlTotalItens(String.valueOf(vf_VlTotalItens));
+
+            ListaProdutosPedido adapter = new ListaProdutosPedido(this, descricaoPedidos, itensRestantesPedidos, valorProdutos);
+            lv_ItensPedido.setAdapter(adapter);
+
+            lv_ItensPedido.setOnItemClickListener(new AdapterView.OnItemClickListener() {
 
                 @Override
                 public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                     String codigo;
                     try {
-                        ListView listaProdutos = (ListView) findViewById(R.id.listViewItemPedidos);
-                        listaProdutos.setVisibility(View.   INVISIBLE);
-                        lb_ocultarProdutos.setText("Mostrar Produtos");
-
-                        TextView lb_dtemissao = (TextView) findViewById(R.id.tb_dtemissao);
-                        RelativeLayout.LayoutParams p_endereco = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                                ViewGroup.LayoutParams.WRAP_CONTENT);
-                        p_endereco.addRule(RelativeLayout.BELOW, R.id.lb_fundoOcultarProdutos);
-                        p_endereco.setMargins(0, 25, 0, 0);
-                        lb_dtemissao.setLayoutParams(p_endereco);
-
-                        calculeHeigthListViewReverse();
-                        ListAdapter adapter2 = listaProdutos.getAdapter();
+                        ListAdapter adapter2 = lv_ItensPedido.getAdapter();
                         int lenght = adapter2.getCount();
                         if(position == 0){
-                            cursorItemPedido.moveToPosition(position);
+                            rs_ItemPedido.moveToPosition(position);
                         }else if(position < lenght - 1) {
-                            cursorItemPedido.moveToPosition(position);
+                            rs_ItemPedido.moveToPosition(position);
                         }else{
-                            cursorItemPedido.moveToPosition(position + 1);
+                            rs_ItemPedido.moveToPosition(position + 1);
                         }
 
-                        codigo = cursorItemPedido.getString(cursorItemPedido.getColumnIndexOrThrow(CriaBanco.ID));
+                        codigo = rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID));
                         Intent intent = new Intent(ManutencaoPedidos.this, ManutencaoProdutoPedido.class);
                         intent.putExtra("codigo", codigo);
-                        intent.putExtra("numpedido", numpedido);
+                        intent.putExtra("numpedido", cl_Pedidos.getNumPedido());
                         intent.putExtra("alteracao", "S");
                         //startActivity(intent);
                         startActivityForResult(intent, 2);
                     } catch (Exception e) {
-                        ListView listaProdutos = (ListView) findViewById(R.id.listViewItemPedidos);
-                        listaProdutos.setVisibility(View.   INVISIBLE);
-                        lb_ocultarProdutos.setText("Mostrar Produtos");
-
-                        TextView lb_dtemissao = (TextView) findViewById(R.id.tb_dtemissao);
-                        RelativeLayout.LayoutParams p_endereco = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                                ViewGroup.LayoutParams.WRAP_CONTENT);
-                        p_endereco.addRule(RelativeLayout.BELOW, R.id.lb_fundoOcultarProdutos);
-                        p_endereco.setMargins(0, 25, 0, 0);
-                        lb_dtemissao.setLayoutParams(p_endereco);
-
-                        calculeHeigthListViewReverse();
-
-                        cursorItemPedido.moveToPosition(position);
-                        codigo = cursorItemPedido.getString(cursorItemPedido.getColumnIndexOrThrow(CriaBanco.ID));
+                        rs_ItemPedido.moveToPosition(position);
+                        codigo = rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID));
                         Intent intent = new Intent(ManutencaoPedidos.this, ManutencaoProdutoPedido.class);
                         intent.putExtra("codigo", codigo);
-                        intent.putExtra("numpedido", numpedido);
+                        intent.putExtra("numpedido", cl_Pedidos.getNumPedido());
                         intent.putExtra("alteracao", "S");
                         //startActivity(intent);
                         startActivityForResult(intent, 2);
                     }
                 }
             });
-        }else{
-            TextView lb_valorTotalProdutos = (TextView) findViewById(R.id.lb_valorTotalProdutos);
-            TextView lb_qtdeTotalProdutos = (TextView) findViewById(R.id.lb_qtdeTotalProdutos);
 
+            calculeHeightListView();
+
+        }else{
+            vw_ListaProdutos.setVisibility(View.GONE);
 
             lb_valorTotalProdutos.setText("Total: R$0,00");
-            lb_qtdeTotalProdutos.setText("Qtde: 0 item(ns)");
+            lb_qtdeTotalProdutos.setText("Qtde: 0");
 
-            FU_VisibilidadeProdutos(false);
         }
     }
 
     private void calculeHeightListView() {
-        ListView lista = (ListView) findViewById(R.id.listViewItemPedidos);
+
         int totalHeight = 0;
-        ListAdapter adapter2 = lista.getAdapter();
+        ListAdapter adapter2 = lv_ItensPedido.getAdapter();
         int lenght = adapter2.getCount();
         for (int i = 0; i < lenght; i++) {
-            View listItem = adapter2.getView(i, null, lista);
+            View listItem = adapter2.getView(i, null, lv_ItensPedido);
             listItem.measure(0, 0);
             totalHeight += listItem.getMeasuredHeight();
         }
-        ViewGroup.LayoutParams params = lista.getLayoutParams();
+        ViewGroup.LayoutParams params = lv_ItensPedido.getLayoutParams();
 
         params.height = totalHeight
-                + (lista.getDividerHeight() * (adapter2.getCount() - 1)) + (120);
-        lista.setLayoutParams(params);
-        lista.requestLayout();
+                + (lv_ItensPedido.getDividerHeight() * (adapter2.getCount() - 1));
+        lv_ItensPedido.setLayoutParams(params);
+        lv_ItensPedido.requestLayout();
     }
 
     private void calculeHeigthListViewReverse(){
-        ListView lista = (ListView) findViewById(R.id.listViewItemPedidos);
         int totalHeight = 0;
-        ListAdapter adapter2 = lista.getAdapter();
+        ListAdapter adapter2 = lv_ItensPedido.getAdapter();
         int lenght = adapter2.getCount();
         for (int i = 0; i < lenght; i++) {
-            View listItem = adapter2.getView(i, null, lista);
+            View listItem = adapter2.getView(i, null, lv_ItensPedido);
             listItem.measure(0, 0);
             totalHeight += listItem.getMeasuredHeight();
         }
-        ViewGroup.LayoutParams params = lista.getLayoutParams();
+        ViewGroup.LayoutParams params = lv_ItensPedido.getLayoutParams();
 
-        params.height = lista.getDividerHeight() * (adapter2.getCount() - 1);
-        lista.setLayoutParams(params);
-        lista.requestLayout();
+        params.height = lv_ItensPedido.getDividerHeight() * (adapter2.getCount() - 1);
+        lv_ItensPedido.setLayoutParams(params);
+        lv_ItensPedido.requestLayout();
     }
 
-    public void FU_BloqueiaCampos(boolean bloqueia){
-        TextView tb_cdcliente = (TextView) findViewById(R.id.lb_rzsocialClientePedidos);
-        TextView tb_rzsocial = (TextView) findViewById(R.id.lb_rzsocialClientePedidosTeste);
-        TextView lb_dtemissao = (TextView) findViewById(R.id.tb_dtemissaoResultado);
-
-        imagemProdutos = (ImageView)findViewById(R.id.imageViewProduto);
-
-        lb_descricaoProdutoPedidos = (TextView)findViewById(R.id.lb_descricaoProdutoPedidos);
-        lb_descricaoProdutoPedidosTeste = (TextView)findViewById(R.id.lb_descricaoProdutoPedidosTeste);
-        lb_valorTotal = (TextView)findViewById(R.id.lb_valorTotal);
-
-        tb_percDesconto = (EditText)findViewById(R.id.tb_percdescontoPedido);
-        tb_vldesconto = (EditText)findViewById(R.id.tb_vldescontoPedido);
-        tb_condPgto = (EditText)findViewById(R.id.tb_condPgto);
-        tb_obsPedido = (EditText)findViewById(R.id.tb_obsPedido);
-
-        imagemProdutos.setEnabled(bloqueia);
-
-        lb_descricaoProdutoPedidos.setEnabled(bloqueia);
-        lb_descricaoProdutoPedidosTeste.setEnabled(bloqueia);
-
-        tb_percDesconto.setEnabled(bloqueia);
-        tb_vldesconto.setEnabled(bloqueia);
-        tb_condPgto.setEnabled(bloqueia);
-        tb_obsPedido.setEnabled(bloqueia);
-        tb_cdcliente.setEnabled(bloqueia);
-        tb_rzsocial.setEnabled(bloqueia);
-
-        ListView lista = (ListView) findViewById(R.id.listViewItemPedidos);
-        lista.setEnabled(bloqueia);
-
+    public  boolean verificaConexao() {
+        boolean conectado;
+        ConnectivityManager conectivtyManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
+        if (conectivtyManager.getActiveNetworkInfo() != null
+                && conectivtyManager.getActiveNetworkInfo().isAvailable()
+                && conectivtyManager.getActiveNetworkInfo().isConnected()) {
+            conectado = true;
+        } else {
+            conectado = false;
+        }
+        return conectado;
     }
 
-    public boolean FU_EnviarPedido() {
-
+    private class LoadingAsyncEnviarPedido extends AsyncTask<Void, Void, Void> {
+        ProgressDialog progressDialog = new ProgressDialog(ManutencaoPedidos.this);
         BancoController crud = new BancoController(getBaseContext());
-        Cursor cursor = crud.carregaDadosPedido(numpedido);
-
-        String vltotal = "", dtemissao = "", cdvendedor = "", cdemitente = "", rzsocial = "", percdesconto = "", vldesconto = "", condpgto = "", obs = "";
-
-        String numpedidoSistema = "";
-
-        if (cursor != null) {
-            try {
-                if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).trim().equals("")) {
-                    vltotal = lb_valorTotal.getText().toString().replace("Total Liquido do Pedido: R$", "");
-                    //vltotal = "100,00";
-                }
-            } catch (Exception e) {
-                vltotal = "0";
-            }
-
-            try {
-                if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DTEMISSAO)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DTEMISSAO)).trim().equals("")) {
-                    dtemissao = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DTEMISSAO)).replace(" ", "espaco");
-                }
-            } catch (Exception e) {
-                dtemissao = getDateTime();
-            }
-
-            try {
-                if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDVENDEDOR)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDVENDEDOR)).trim().equals("")) {
-                    cdvendedor = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDVENDEDOR));
-                }
-            } catch (Exception e) {
-                cdvendedor = "0";
-            }
+        String validou = "N";
 
-            try {
-                if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDEMITENTE)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDEMITENTE)).trim().equals("")) {
-                    cdemitente = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDEMITENTE));
-                }
-            } catch (Exception e) {
-                cdemitente = "0";
-            }
+        @Override
+        protected void onPreExecute() {
+            progressDialog.setMessage("Enviando o pedido online...");
+            progressDialog.show();
+        }
 
-            try {
-                if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.RZSOCIAL)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.RZSOCIAL)).trim().equals("")) {
-                    rzsocial = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.RZSOCIAL)).replace(" ", "espaco");
-                }
-            } catch (Exception e) {
-                rzsocial = "";
-            }
+        @Override
+        protected Void doInBackground(Void... params) {
 
-            try {
-                if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).trim().equals("")) {
-                    percdesconto = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO));
-                }else{
-                    percdesconto = "0";
-                }
-            } catch (Exception e) {
-                percdesconto = "0";
+            if(fuEnviarPedido()) {
+                validou = "S";
+            }else{
+                validou = "N";
             }
+            return null;
+        }
 
-            try {
-                if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).trim().equals("")) {
-                    vldesconto = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLDESCONTO));
-                }else{
-                    vldesconto = "0";
-                }
-            } catch (Exception e) {
-                vldesconto = "0";
-            }
+        @Override
+        protected void onPostExecute(Void aVoid) {
 
-            try {
-                if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CONDPGTO)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CONDPGTO)).trim().equals("")) {
-                    condpgto = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CONDPGTO)).replace(" ", "espaco");
-                }
-            } catch (Exception e) {
-                condpgto = "DINHEIRO";
-            }
+            progressDialog.dismiss();
 
-            try {
-                if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.OBS)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.OBS)).trim().equals("")) {
-                    obs = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.OBS)).replace(" ", "espaco");
+            if(validou.equals("S")){
+                cl_Pedidos.setFgSituacao("E");
+                if(ctl_Pedidos.fuAlterarSituacaoPedido()){
+                    MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido enviado com sucesso!");
+                    finish();
                 }else{
-                    obs = "espaco";
+                    MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possivel realizar a sincronização do pedido. Favor verificar a conexão com a internet.");
                 }
-            } catch (Exception e) {
-                obs = "espaco";
-            }
-
-            obs += "  CONDIÇÃO DE PAGAMENTO INFORMADA: " + condpgto + "";
-            obs = obs.replace(" ", "espaco");
-
-            try {
-                Cursor cursor_cliente = crud.carregaClienteByCdClienteNovoCliente(cdemitente);
-                if(cursor_cliente.getString(cursor_cliente.getColumnIndexOrThrow(CriaBanco.FGSINCRONIZADO)).equals("N")){
-                    cdemitente = FU_SincronizarCliente(cdemitente);
-                }
-            }catch (Exception e){
-                e.printStackTrace();
-            }
-            int TIMEOUT_MILLISEC = 10000;
-            try {
-                KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());
-                trustStore.load(null, null);
-
-                MySSLSocketFactory sf = new MySSLSocketFactory(trustStore);
-                sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
-
-                HttpParams p = new BasicHttpParams();
-
-                HttpProtocolParams.setVersion(p, HttpVersion.HTTP_1_1);
-                HttpProtocolParams.setContentCharset(p, HTTP.UTF_8);
-
-                SchemeRegistry registry = new SchemeRegistry();
-                registry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
-                registry.register(new Scheme("https", sf, 443));
-
-                ClientConnectionManager ccm = new ThreadSafeClientConnManager(p, registry);
-
-
-                HttpConnectionParams.setConnectionTimeout(p,
-                        TIMEOUT_MILLISEC);
-                HttpConnectionParams.setSoTimeout(p, TIMEOUT_MILLISEC);
-
-                HttpClient httpclient = new DefaultHttpClient(ccm, p);
-                String url = "http://www.planosistemas.com.br/" +
-                        "WebService2.php?user=" + crud.selecionarCdClienteBanco() + "&format=json&num=10&method=inserirpedido&vltotal=" + vltotal + "&dtemissao=" + dtemissao + ""
-                        + "&cdvendedor=" + cdvendedor + "&cdemitente=" + cdemitente + "&rzsocial=" + rzsocial.replace("\t", "") + "&percdesconto=" + percdesconto + "&vldesconto=" + vldesconto + ""
-                        + "&condpgto=" + condpgto + "&obs=" + obs.replace("\n", "pulalinha") + "&filial=" + crud.buscaFilialSelecionada() + "";
-                HttpPost httppost = new HttpPost(url);
-
-                // Instantiate a GET HTTP method
-                try {
-                    Log.i(getClass().getSimpleName(), "send  task - start");
-                    //
-                    List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(
-                            2);
-                    nameValuePairs.add(new BasicNameValuePair("user", "1"));
-                    httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
-                    ResponseHandler<String> responseHandler = new BasicResponseHandler();
-                    String responseBody = httpclient.execute(httppost, responseHandler);
-                    // Parse
-                    JSONObject json = new JSONObject(responseBody);
-                    JSONArray jArray = json.getJSONArray("posts");
-                    ArrayList<HashMap<String, String>> mylist = new ArrayList<HashMap<String, String>>();
-
-                    for (int i = 0; i < jArray.length(); i++) {
-                        HashMap<String, String> map = new HashMap<String, String>();
-                        JSONObject e = jArray.getJSONObject(i);
-                        String s = e.getString("post");
-                        JSONObject jObject = new JSONObject(s);
-
-                        /*map.put("idusers", jObject.getString("RzSocial"));
-                        map.put("UserName", jObject.getString("Endereco"));
-                        map.put("FullName", jObject.getString("Telefone"));*/
-
-                        /*map.put("idusers", jObject.getString("idusers"));
-                        map.put("UserName", jObject.getString("UserName"));
-                        map.put("FullName", jObject.getString("FullName"));*/
-
-                        //mylist.add(map);
-
-                        if (!jObject.getString("NumPedido").equals("null")) {
-                            String NumPedido = jObject.getString("NumPedido");
-                            if(FU_SincronizaItemPedido(NumPedido, dtemissao)){
-                                FU_AlteraSituacaoPedido(NumPedido);
-
-                            }else{
-                                return false;
-                            }
-                        }
-
-                    }
-
-                } catch (ClientProtocolException e) {
-                    // TODO Auto-generated catch block
-                    return false;
-                } catch (IOException e) {
-                    // TODO Auto-generated catch block
-                    return false;
-                }
-            } catch (Throwable t) {
-                return false;
+            }else {
+                MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possivel realizar a sincronização do pedido. Favor verificar a conexão com a internet.");
             }
         }
-        return true;
     }
 
-    public boolean FU_SincronizaItemPedido(String NumPedido, String DtEmissao){
-        BancoController crud = new BancoController(getBaseContext());
-
-                /*String ultdtsincronizacao = crud.carregaDtSincronizacao();
-                ultdtsincronizacao += "";*/
-        Cursor cursor = crud.carregaItemPedido(numpedido);
-
-        String cdproduto = "", qtde = "", vlunitario = "",  vltotal = "", descricao = "", percdesconto = "", vldesconto = "";
-        int id = 0;
-
-        if(cursor!=null) {
-
-            while (!cursor.isAfterLast()) {
-                id += 1;
-                try {
-                    if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).trim().equals("")) {
-                        cdproduto = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).replace(",", ".");
-                        //vltotal = "100,00";
-                    }
-                } catch (Exception e) {
-                    cdproduto = "0";
-                }
-
-                try {
-                    if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.QTDE)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.QTDE)).trim().equals("")) {
-                        qtde = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.QTDE)).replace(",", ".");
-                        //vltotal = "100,00";
-                    }
-                } catch (Exception e) {
-                    qtde = "0";
-                }
-
-                try {
-                    if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).trim().equals("")) {
-                        vlunitario = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).replace(",", ".");
-                        //vltotal = "100,00";
-                    }
-                } catch (Exception e) {
-                    vlunitario = "0";
-                }
-
-                try {
-                    if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).trim().equals("")) {
-                        vltotal = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).replace(",", ".");
-                        //vltotal = "100,00";
-                    }
-                } catch (Exception e) {
-                    vltotal = "0";
-                }
-
-                try {
-                    if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).trim().equals("")) {
-                        descricao = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).replace(",", ".");
-                        //vltotal = "100,00";
-                    }
-                } catch (Exception e) {
-                    descricao = "";
-                }
-                try {
-                    if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).trim().equals("")) {
-                        percdesconto = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).replace(",", ".");
-                        //vltotal = "100,00";
-                    }
-                } catch (Exception e) {
-                    percdesconto = "0";
-                }
-                try {
-                    if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).equals("null") && !cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).trim().equals("")) {
-                        vldesconto = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).replace(",", ".");
-                        //vltotal = "100,00";
-                    }
-                } catch (Exception e) {
-                    vldesconto = "0";
-                }
-
-                if(percdesconto.trim().equals("")){
-                    percdesconto = "0";
-                }
-
-
-                int TIMEOUT_MILLISEC = 10000;
-                try {
-                    KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());
-                    trustStore.load(null, null);
-
-                    MySSLSocketFactory sf = new MySSLSocketFactory(trustStore);
-                    sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
-
-                    HttpParams p = new BasicHttpParams();
-
-                    HttpProtocolParams.setVersion(p, HttpVersion.HTTP_1_1);
-                    HttpProtocolParams.setContentCharset(p, HTTP.UTF_8);
-
-                    SchemeRegistry registry = new SchemeRegistry();
-                    registry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
-                    registry.register(new Scheme("https", sf, 443));
+    public boolean fuEnviarPedido() {
 
-                    ClientConnectionManager ccm = new ThreadSafeClientConnManager(p, registry);
-
-
-                    HttpConnectionParams.setConnectionTimeout(p,
-                            TIMEOUT_MILLISEC);
-                    HttpConnectionParams.setSoTimeout(p, TIMEOUT_MILLISEC);
-
-                    HttpClient httpclient = new DefaultHttpClient(ccm, p);
-                    String url = "http://www.planosistemas.com.br/" +
-                            "WebService2.php?user=" + crud.selecionarCdClienteBanco() + "&format=json&num=10&method=inseriritempedido&numpedido=" + NumPedido + "&cdproduto="
-                            + cdproduto.replace(" ", "espaco") + "&id=" + id + "&qtde=" + qtde + "&vlunitario=" + vlunitario + "&vltotal=" + vltotal + "&dtemissao=" + DtEmissao + "&descricao=" +
-                            descricao.replace(" ", "espaco") + "&vldesconto=" + vldesconto + "&percdesconto=" + percdesconto + "&filial=" + crud.buscaFilialSelecionada() + "";
-                    HttpPost httppost = new HttpPost(url);
-
-                    // Instantiate a GET HTTP method
-                    try {
-                        Log.i(getClass().getSimpleName(), "send  task - start");
-                        List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2) ;
-                        nameValuePairs.add(new BasicNameValuePair("user", "1"));
-                        httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
-                        ResponseHandler<String> responseHandler = new BasicResponseHandler();
-                        String responseBody = httpclient.execute(httppost, responseHandler);
-
-                    } catch (ClientProtocolException e) {
-                        // TODO Auto-generated catch block
-                        return  false;
-                        //e.printStackTrace();
-                        //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do item do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();
-
-                    } catch (IOException e) {
-                        // TODO Auto-generated catch block
-                        return false;
-                        //e.printStackTrace();
-                        //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do item do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();
-
-                    }
-                    // Log.i(getClass().getSimpleName(), "send  task - end");
-
-                } catch (Throwable t) {
-                    return false;
-                    //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do item do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();
-                    //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a conexão com o servidor. Favor verificar a conexão com a internet. Request failed: " + t.toString(), Toast.LENGTH_LONG).show();
-                }
-
-                cursor.moveToNext();
-
-            }
+        SYNC_Pedidos sync_Pedidos = new SYNC_Pedidos(getApplicationContext());
+        if(sync_Pedidos.FU_EnviarPedido(cl_Pedidos)){
+            return true;
+        }else{
+            return false;
         }
-        return true;
-
     }
 
-    public boolean FU_AlteraSituacaoPedido(String NumPedido){
-        BancoController crud = new BancoController(getBaseContext());
-
-        String dataRegistro = getDateTime().substring(0, 16);
-        int TIMEOUT_MILLISEC = 10000;
-        try {
-            KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());
-            trustStore.load(null, null);
+    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
+            Font.BOLD);
+    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
+            Font.NORMAL, BaseColor.RED);
+    private static Font normalFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
+            Font.NORMAL);
+    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
+            Font.BOLD);
 
-            MySSLSocketFactory sf = new MySSLSocketFactory(trustStore);
-            sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
+    private static Font negritoMenor = new Font(Font.FontFamily.TIMES_ROMAN, 12,
+            Font.BOLD);
+    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
+            Font.BOLD);
 
-            HttpParams p = new BasicHttpParams();
+    private void suCriarPDF() {
 
-            HttpProtocolParams.setVersion(p, HttpVersion.HTTP_1_1);
-            HttpProtocolParams.setContentCharset(p, HTTP.UTF_8);
+        Document document = new Document();
 
-            SchemeRegistry registry = new SchemeRegistry();
-            registry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
-            registry.register(new Scheme("https", sf, 443));
+        try {
 
-            ClientConnectionManager ccm = new ThreadSafeClientConnManager(p, registry);
 
 
-            HttpConnectionParams.setConnectionTimeout(p,
-                    TIMEOUT_MILLISEC);
-            HttpConnectionParams.setSoTimeout(p, TIMEOUT_MILLISEC);
+            String filename = "pedido_" + cl_Pedidos.getNumPedido() + ".pdf";
 
-            HttpClient httpclient = new DefaultHttpClient(ccm, p);
-            String url = "http://www.planosistemas.com.br/" +
-                    "WebService2.php?user=" + crud.selecionarCdClienteBanco() + "&format=json&num=10&method=alteraSituacaoPedidoNovo&numpedido=" + NumPedido + "&filial=" + crud.buscaFilialSelecionada() + "&dtregistro=" + dataRegistro.replace(" ", "espaco") + "&usuario=" + crud.selecionarNmUsuarioSistema().replace(" ", "espaco") + "";
-            HttpPost httppost = new HttpPost(url);
+            document = new Document(PageSize.A4);
 
-            try {
-                Log.i(getClass().getSimpleName(), "send  task - start");
-                List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2) ;
-                nameValuePairs.add(new BasicNameValuePair("user", "1"));
-                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
-                ResponseHandler<String> responseHandler = new BasicResponseHandler();
-                String responseBody = httpclient.execute(httppost, responseHandler);
-
-            } catch (ClientProtocolException e) {
-                // TODO Auto-generated catch block
-                return  false;
-                //e.printStackTrace();
-                //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do item do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();
-
-            } catch (IOException e) {
-                // TODO Auto-generated catch block
-                return false;
-                //e.printStackTrace();
-                //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do item do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();
+            String path = Environment.getExternalStorageDirectory() + "/PedidosPDF/";
 
+            File dir = new File(path, filename);
+            if (!dir.exists()) {
+                dir.getParentFile().mkdirs();
             }
-            // Log.i(getClass().getSimpleName(), "send  task - end");
 
-        } catch (Throwable t) {
-            return false;
-            //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do item do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();
-            //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a conexão com o servidor. Favor verificar a conexão com a internet. Request failed: " + t.toString(), Toast.LENGTH_LONG).show();
-        }
-        return true;
-    }
-
-    public boolean FU_CancelaPedido(String NumPedido) {
-
-        BancoController crud = new BancoController(getBaseContext());
-
-        int TIMEOUT_MILLISEC = 10000;
-        try {
-            KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());
-            trustStore.load(null, null);
-
-            MySSLSocketFactory sf = new MySSLSocketFactory(trustStore);
-            sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
-
-            HttpParams p = new BasicHttpParams();
-
-            HttpProtocolParams.setVersion(p, HttpVersion.HTTP_1_1);
-            HttpProtocolParams.setContentCharset(p, HTTP.UTF_8);
-
-            SchemeRegistry registry = new SchemeRegistry();
-            registry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
-            registry.register(new Scheme("https", sf, 443));
+            FileOutputStream fOut = new FileOutputStream(dir);
+            fOut.flush();
 
-            ClientConnectionManager ccm = new ThreadSafeClientConnManager(p, registry);
+            PdfWriter.getInstance(document, fOut);
+            document.open();
 
+            try {
+                Drawable d = getResources().getDrawable(R.drawable.logo_expres_mobile);
+                BitmapDrawable bitDw = ((BitmapDrawable) d);
+                Bitmap bmp = bitDw.getBitmap();
+                Bitmap resized = Bitmap.createScaledBitmap(bmp, (int)(bmp.getWidth()*0.25), (int)(bmp.getHeight()*0.25), true);
+                ByteArrayOutputStream stream = new ByteArrayOutputStream();
+                resized.compress(Bitmap.CompressFormat.PNG, 100, stream);
+                //bmp.setWidth(200);
+                //bmp.setHeight(50);
+                Image image = Image.getInstance(stream.toByteArray());
+
+                document.add(image);
 
-            HttpConnectionParams.setConnectionTimeout(p,
-                    TIMEOUT_MILLISEC);
-            HttpConnectionParams.setSoTimeout(p, TIMEOUT_MILLISEC);
-
-            HttpClient httpclient = new DefaultHttpClient(ccm, p);
-            String url = "http://www.planosistemas.com.br/" +
-                    "WebService2.php?user=" + crud.selecionarCdClienteBanco() + "&format=json&num=10&method=cancelarPedido&numpedido=" + NumPedido + "";
-            HttpPost httppost = new HttpPost(url);
+            }
+            catch(IOException ex)
+            {
 
-            try {
-                Log.i(getClass().getSimpleName(), "send  task - start");
-                List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2) ;
-                nameValuePairs.add(new BasicNameValuePair("user", "1"));
-                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
-                ResponseHandler<String> responseHandler = new BasicResponseHandler();
-                String responseBody = httpclient.execute(httppost, responseHandler);
-
-            } catch (ClientProtocolException e) {
-                // TODO Auto-generated catch block
-                return  false;
-                //e.printStackTrace();
-                //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do item do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();
-
-            } catch (IOException e) {
-                // TODO Auto-generated catch block
-                return false;
-                //e.printStackTrace();
-                //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do item do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();
+            }
 
+            Paragraph preface = new Paragraph();
+            // We add one empty line
+            addEmptyLine(preface, 1);
+            // Lets write a big header
+            Paragraph pa_Titulo = new Paragraph();
+            pa_Titulo.setAlignment(Element.ALIGN_CENTER);
+            pa_Titulo.setFont(catFont);
+            pa_Titulo.add("PEDIDO Nº" + cl_Pedidos.getNumPedido());
+            preface.add(pa_Titulo);
+            //preface.add(new Paragraph("PEDIDO Nº" + cl_Pedidos.getNumPedido(), catFont));
+
+            addEmptyLine(preface, 2);
+            // Will create: Report generated by: _name, _date
+            preface.setFont(normalFont);
+            preface.add("Data de emissão: ");
+            preface.setFont(subFont);
+            preface.add(cl_Pedidos.getDtEmissao());
+            addEmptyLine(preface, 1);
+            preface.setFont(normalFont);
+            preface.add("Cliente: ");
+            preface.setFont(subFont);
+            preface.add(cl_Pedidos.getNomeRzSocial());
+            addEmptyLine(preface, 1);
+            preface.setFont(normalFont);
+            preface.add("Quantidade de produtos: ");
+            preface.setFont(subFont);
+            preface.add(cl_Pedidos.getQtdeItens());
+            addEmptyLine(preface, 1);
+            preface.setFont(normalFont);
+            preface.add("Valor dos produtos: ");
+            preface.setFont(subFont);
+            preface.add("R$" + String.format("%.2f", Double.parseDouble(cl_Pedidos.getVlTotalItens())));
+            addEmptyLine(preface, 1);
+
+            CL_ItemPedido cl_ItemPedido = new CL_ItemPedido();
+            cl_ItemPedido.setNumPedido(cl_Pedidos.getNumPedido());
+
+            CTL_ItemPedido ctl_ItemPedido = new CTL_ItemPedido(getApplicationContext(), cl_ItemPedido);
+
+            if(ctl_ItemPedido.fuCarregaTodosItensPedido()) {
+
+                addEmptyLine(preface, 1);
+                preface.setFont(subFont);
+                preface.add("PRODUTOS DO PEDIDO:");
+                addEmptyLine(preface, 2);
+
+                createTable(preface, ctl_ItemPedido.rs_ItemPedido);
+
+                addEmptyLine(preface, 2);
             }
-            // Log.i(getClass().getSimpleName(), "send  task - end");
 
-        } catch (Throwable t) {
-            return false;
-            //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do item do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();
-            //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a conexão com o servidor. Favor verificar a conexão com a internet. Request failed: " + t.toString(), Toast.LENGTH_LONG).show();
+
+            preface.setFont(normalFont);
+            preface.add("Valor do desconto: ");
+            preface.setFont(subFont);
+            preface.add("R$" + cl_Pedidos.getVlDesconto());
+            addEmptyLine(preface, 1);
+            preface.setFont(normalFont);
+            preface.add("Valor do frete: ");
+            preface.setFont(subFont);
+            //double resultadoTotal = (Double.parseDouble(cl_Pedidos.getVlTotalItens()) - vf_vlDesconto) + Double.parseDouble(cl_Pedidos.getVlFrete());
+            //            resultadoTotal = Double.valueOf(String.format(Locale.US, "%.2f", resultadoTotal));
+            //            String valor = String.format("%.2f", resultadoTotal);
+            preface.add("R$" + String.format("%.2f", Double.parseDouble(cl_Pedidos.getVlFrete())));
+            addEmptyLine(preface, 1);
+            preface.setFont(normalFont);
+            preface.add("Condição do pagamento: ");
+            preface.setFont(subFont);
+            preface.add(cl_Pedidos.getCondPgto());
+            addEmptyLine(preface, 1);
+            preface.setFont(normalFont);
+            preface.add("Observação do pedido: ");
+            preface.setFont(subFont);
+            preface.add(cl_Pedidos.getObsPedido());
+            addEmptyLine(preface, 1);
+            preface.setFont(normalFont);
+            preface.add("Valor total do pedido: ");
+            preface.setFont(subFont);
+            preface.add("R$" + cl_Pedidos.getVlTotal().replace(".", ","));
+
+            //createTable(preface);
+
+
+
+           /* preface.add(new Paragraph("Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
+                    smallBold));
+            preface.add(new Paragraph("This document describes something which is very important ",
+                    smallBold));
+
+            addEmptyLine(preface, 8);
+
+            preface.add(new Paragraph("This document is a preliminary version and not subject to your license agreement or any other agreement with vogella.com ;-).",
+                    redFont));*/
+
+
+            document.add(preface);
+
+
+
+
+        } catch (DocumentException e) {
+            e.printStackTrace();
+            MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possível gerar o PDF");
+        } catch (FileNotFoundException e) {
+            e.printStackTrace();
+            MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possível gerar o PDF");
+        } catch (IOException e) {
+            e.printStackTrace();
+            MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possível gerar o PDF");
+        } finally {
+            document.close();
+            MensagemUtil.addMsg(ManutencaoPedidos.this, "PDF do pedido gerado com sucesso na pasta " + Environment.getExternalStorageDirectory() + "/PedidosPDF/");
         }
-        return true;
     }
 
-    public String FU_SincronizarCliente(String cdemitente){
-        String VA_CdCliente = "";
-
-        int TIMEOUT_MILLISEC = 10000;
-
-        BancoController crud = new BancoController(getBaseContext());
+    private static void addEmptyLine(Paragraph paragraph, int number) {
+        for (int i = 0; i < number; i++) {
+            paragraph.add(new Paragraph(" "));
+        }
+    }
 
-                /*String ultdtsincronizacao = crud.carregaDtSincronizacao();
-                ultdtsincronizacao += "";*/
-        Cursor cursor = crud.carregaClienteByCdClienteNovoCliente(cdemitente);
-
-        if(cursor!=null){
-            cursor.moveToFirst();
-
-            while(!cursor.isAfterLast()) {
-
-                String idString = "";
-                String rzsocialString = "";
-                String nmfantasiaString = "";
-                String cepString = "";
-                String enderecoString = "";
-                String classificacaoString = "";
-                String numeroString = "";
-                String complementoString = "";
-                String bairroString = "";
-                String estadoString = "";
-                String cidadeString = "";
-                String cnpjString = "";
-                String telefoneString = "";
-                String telefoneAdicionalString = "";
-                String faxString = "";
-                String nmcontatoString = "";
-                String emailString = "";
-                String tipopessoaString = "";
-                String tipoclienteString = "";
-                String obsclienteString = "";
-                String inscestadual = "";
-                String vendedorString = "99";
-                String dtultalteracao = "";
-                String dtcadastro = "";
-                String resultado = "";
-
-                if(!cursor.getString(cursor.getColumnIndex(CriaBanco.ID)).equals("null") && !cursor.getString(cursor.getColumnIndex(CriaBanco.ID)).trim().equals("")) {
-                    idString = cursor.getString(cursor.getColumnIndex(CriaBanco.ID));
-                }
-                if(!cursor.getString(cursor.getColumnIndex("rzsocial")).equals("null") && !cursor.getString(cursor.getColumnIndex("rzsocial")).trim().equals("")) {
-                    rzsocialString = cursor.getString(cursor.getColumnIndex("rzsocial")).replace("'", "");
-                }else{
-                    rzsocialString = "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("nmfantasia")).equals("null") && !cursor.getString(cursor.getColumnIndex("nmfantasia")).trim().equals("")) {
-                    nmfantasiaString = cursor.getString(cursor.getColumnIndex("nmfantasia")).replace("'", "");
-                }else{
-                    nmfantasiaString = "espaco";
-                }
-                //nmfantasiaString = "Guilherme";
-                if(!cursor.getString(cursor.getColumnIndex("cep")).equals("null")  && !cursor.getString(cursor.getColumnIndex("cep")).trim().equals("")) {
-                    cepString = cursor.getString(cursor.getColumnIndex("cep")).replace(".", "").replace("-", "");
-                }else{
-                    cepString = "0";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("endereco")).equals("null")  && !cursor.getString(cursor.getColumnIndex("endereco")).trim().equals("")) {
-                    enderecoString = cursor.getString(cursor.getColumnIndex("endereco")).replace("'", "");
-                }else{
-                    enderecoString = "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("classificacao")).equals("null")  && !cursor.getString(cursor.getColumnIndex("classificacao")).trim().equals("")) {
-                    classificacaoString = cursor.getString(cursor.getColumnIndex("classificacao")).replace("'", "");
-                }else{
-                    classificacaoString= "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("numero")).equals("null")  && !cursor.getString(cursor.getColumnIndex("numero")).trim().equals("")) {
-                    numeroString = cursor.getString(cursor.getColumnIndex("numero"));
-                }else{
-                    numeroString = "0";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("complemento")).equals("null")  && !cursor.getString(cursor.getColumnIndex("complemento")).trim().equals("")) {
-                    complementoString = cursor.getString(cursor.getColumnIndex("complemento")).replace("'", "");
-                }else{
-                    complementoString = "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("bairro")).equals("null")  && !cursor.getString(cursor.getColumnIndex("bairro")).trim().equals("")) {
-                    bairroString = cursor.getString(cursor.getColumnIndex("bairro")).replace("'", "");
-                }else{
-                    bairroString = "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("uf")).equals("null")  && !cursor.getString(cursor.getColumnIndex("uf")).trim().equals("")) {
-                    estadoString = cursor.getString(cursor.getColumnIndex("uf"));
-                }else{
-                    estadoString = "PR";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("cidade")).equals("null")  && !cursor.getString(cursor.getColumnIndex("cidade")).trim().equals("")) {
-                    cidadeString = cursor.getString(cursor.getColumnIndex("cidade")).replace("'", "");
-                }else{
-                    cidadeString = "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("cgc")).equals("null")  && !cursor.getString(cursor.getColumnIndex("cgc")).trim().equals("")) {
-                    cnpjString = cursor.getString(cursor.getColumnIndex("cgc")).replace(".", "").replace("-", "").replace("/", "");
-                }else{
-                    cnpjString = "0";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("telefone")).equals("null")  && !cursor.getString(cursor.getColumnIndex("telefone")).trim().equals("")) {
-                    telefoneString = cursor.getString(cursor.getColumnIndex("telefone")).replace("(", "").replace("-", "").replace(")", "");
-                }else{
-                    telefoneString = "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("telefoneadicional")).equals("null")  && !cursor.getString(cursor.getColumnIndex("telefoneadicional")).trim().equals("")) {
-                    telefoneAdicionalString = cursor.getString(cursor.getColumnIndex("telefoneadicional")).replace("(", "").replace("-", "").replace(")", "");;
-                }else{
-                    telefoneAdicionalString = "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("fax")).equals("null")  && !cursor.getString(cursor.getColumnIndex("fax")).trim().equals("")) {
-                    faxString = cursor.getString(cursor.getColumnIndex("fax")).replace("(", "").replace("-", "").replace(")", "");;
-                }else{
-                    faxString = "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("nmcontatocliente")).equals("null")  && !cursor.getString(cursor.getColumnIndex("nmcontatocliente")).trim().equals("")) {
-                    nmcontatoString = cursor.getString(cursor.getColumnIndex("nmcontatocliente")).replace("'", "");
-                }else{
-                    nmcontatoString = "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("email")).equals("null")  && !cursor.getString(cursor.getColumnIndex("email")).trim().equals("")) {
-                    emailString = cursor.getString(cursor.getColumnIndex("email")).replace("'", "");
-                }else{
-                    emailString = "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("tipopessoa")).equals("null")  && !cursor.getString(cursor.getColumnIndex("tipopessoa")).trim().equals("")) {
-                    tipopessoaString = cursor.getString(cursor.getColumnIndex("tipopessoa"));
-                }else{
-                    tipopessoaString = "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("tipcliente")).equals("null")  && !cursor.getString(cursor.getColumnIndex("tipcliente")).trim().equals("")) {
-                    tipoclienteString = cursor.getString(cursor.getColumnIndex("tipcliente"));
-                }else{
-                    tipoclienteString = "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("obscliente")).equals("null")  && !cursor.getString(cursor.getColumnIndex("obscliente")).trim().equals("")) {
-                    obsclienteString = cursor.getString(cursor.getColumnIndex("obscliente")).replace("'", "");
-                }else{
-                    obsclienteString = "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("inscestadual")).equals("null")  && !cursor.getString(cursor.getColumnIndex("inscestadual")).trim().equals("")) {
-                    inscestadual = cursor.getString(cursor.getColumnIndex("inscestadual")).replace("'", "");
-                }else{
-                    inscestadual = "espaco";
-                }
-                //tipoclienteString = "EXPRESSPLANO";
-                if(!cursor.getString(cursor.getColumnIndex("dtultalteracao")).equals("null")  && !cursor.getString(cursor.getColumnIndex("dtultalteracao")).trim().equals("")) {
-                    dtultalteracao = cursor.getString(cursor.getColumnIndex("dtultalteracao"));
-                }else{
-                    dtultalteracao = "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("dtcadastro")).equals("null")  && !cursor.getString(cursor.getColumnIndex("dtcadastro")).trim().equals("")) {
-                    dtcadastro = cursor.getString(cursor.getColumnIndex("dtcadastro"));
-                }else{
-                    dtcadastro = "espaco";
-                }
-                if(!cursor.getString(cursor.getColumnIndex("vendedor")).equals("null")  && !cursor.getString(cursor.getColumnIndex("vendedor")).trim().equals("")) {
-                    vendedorString = cursor.getString(cursor.getColumnIndex("vendedor"));
-                }else{
-                    vendedorString = "espaco";
-                }
+    private static void createTable(Paragraph paragraph, Cursor rs_ItemPedido)
+            throws BadElementException {
+        PdfPTable table = new PdfPTable(3);
 
+        // t.setBorderColor(BaseColor.GRAY);
+        // t.setPadding(4);
+        // t.setSpacing(4);
+        // t.setBorderWidth(1);
 
-                try {
-                    KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());
-                    trustStore.load(null, null);
-
-                    MySSLSocketFactory sf = new MySSLSocketFactory(trustStore);
-                    sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
-
-                    HttpParams p = new BasicHttpParams();
-
-                    HttpProtocolParams.setVersion(p, HttpVersion.HTTP_1_1);
-                    HttpProtocolParams.setContentCharset(p, HTTP.UTF_8);
-
-                    SchemeRegistry registry = new SchemeRegistry();
-                    registry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
-                    registry.register(new Scheme("https", sf, 443));
-
-                    ClientConnectionManager ccm = new ThreadSafeClientConnManager(p, registry);
-
-
-                    HttpConnectionParams.setConnectionTimeout(p,
-                            TIMEOUT_MILLISEC);
-                    HttpConnectionParams.setSoTimeout(p, TIMEOUT_MILLISEC);
-
-                    HttpClient httpclient = new DefaultHttpClient(ccm, p);
-
-                    String url = "http://www.planosistemas.com.br/" +
-                            "WebService2.php?user=" + crud.selecionarCdClienteBanco() + "&format=json&num=10&method=inserirClienteNovo&rzsocial=" +
-                            rzsocialString.replace(" ", "espaco") +
-                            "&nmfantasia=" + nmfantasiaString.replace(" ", "espaco") +
-                            "&cep=" + cepString +
-                            "&endereco=" + enderecoString.replace(" ", "espaco") +
-                            "&classificacao=" + classificacaoString.replace(" ", "espaco") +
-                            "&numero=" + numeroString +
-                            "&complemento=" + complementoString.replace(" ", "espaco") +
-                            "&bairro=" + bairroString.replace(" ", "espaco") +
-                            "&uf=" + estadoString +
-                            "&cidade=" + cidadeString.replace(" ", "espaco") +
-                            "&tipopessoa=" + tipopessoaString +
-                            "&cgc=" + cnpjString +
-                            "&telefone=" + telefoneString +
-                            "&telefoneadicional=" + telefoneAdicionalString +
-                            "&fax=" + faxString +
-                            "&contato=" + nmcontatoString.replace(" ", "espaco") +
-                            "&email=" + emailString +
-                            "&vendedor=" + vendedorString +
-                            "&tipocliente=" + tipoclienteString.replace(" ", "espaco") +
-                            "&dtcadastro=" + dtcadastro.replace(" ", "espaco") +
-                            "" +
-                            "&obscliente=" + obsclienteString.replace(" ", "espaco") + "" +
-                            "&inscestadual=" + inscestadual.replace("", "espaco");
-                    HttpPost httppost = new HttpPost(url);
-
-                    // Instantiate a GET HTTP method
-                    try {
-                        Log.i(getClass().getSimpleName(), "send  task - start");
-                        //
-                        List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(
-                                2);
-                        nameValuePairs.add(new BasicNameValuePair("user", "1"));
-                        httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
-                        ResponseHandler<String> responseHandler = new BasicResponseHandler();
-                        String responseBody = httpclient.execute(httppost, responseHandler);
-                        // Parse
-                        JSONObject json = new JSONObject(responseBody);
-                        JSONArray jArray = json.getJSONArray("posts");
-                        ArrayList<HashMap<String, String>> mylist = new ArrayList<HashMap<String, String>>();
-
-                        for (int i = 0; i < jArray.length(); i++) {
-                            HashMap<String, String> map = new HashMap<String, String>();
-                            JSONObject e = jArray.getJSONObject(i);
-                            String s = e.getString("post");
-                            JSONObject jObject = new JSONObject(s);
-
-                            /*map.put("idusers", jObject.getString("RzSocial"));
-                            map.put("UserName", jObject.getString("Endereco"));
-                            map.put("FullName", jObject.getString("Telefone"));*/
-
-                            /*map.put("idusers", jObject.getString("idusers"));
-                            map.put("UserName", jObject.getString("UserName"));
-                            map.put("FullName", jObject.getString("FullName"));*/
-
-                            //mylist.add(map);
-
-                            if (!jObject.getString("CdCliente").equals("null")) {
-
-                                crud.alteraClientePedido(jObject.getString("CdCliente"), Integer.parseInt(idString));
-                                cdemitente =  jObject.getString("CdCliente");
+        while (!rs_ItemPedido.isAfterLast()) {
 
-                            }
-                        }
+            Phrase ph_Descricao = new Phrase();
+            ph_Descricao.setFont(negritoMenor);
+            ph_Descricao.add(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)));
 
 
-                    } catch (ClientProtocolException e) {
-                        // TODO Auto-generated catch block
-                        e.printStackTrace();
-                    } catch (IOException e) {
-                        // TODO Auto-generated catch block
-                        e.printStackTrace();
-                    }
-                    // Log.i(getClass().getSimpleName(), "send  task - end");
+            PdfPCell c1 = new PdfPCell(ph_Descricao);
+            c1.setHorizontalAlignment(Element.ALIGN_LEFT);
+            ///c1.setPaddingTop(5);
+            c1.setPadding(10);
+            table.addCell(c1);
 
-                } catch (Throwable t) {
-                    Toast.makeText(getApplicationContext(), "Request failed: " + t.toString(), Toast.LENGTH_LONG).show();
-                }
+            Phrase ph_QtdeProdutos = new Phrase();
+            ph_QtdeProdutos.setFont(negritoMenor);
+            ph_QtdeProdutos.add("Quantidade: " + rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)));
 
-                cursor.moveToNext();
-            }
-        }
+            PdfPCell c2 = new PdfPCell(ph_QtdeProdutos);
+            c2.setHorizontalAlignment(Element.ALIGN_LEFT);
+            ///c1.setPaddingTop(5);
+            c2.setPadding(10);
+            table.addCell(c2);
 
-        return cdemitente;
-    }
+            Phrase ph_VlTotal = new Phrase();
+            ph_VlTotal.setFont(negritoMenor);
+            ph_VlTotal.add("Valor total: " + "R$" + String.format("%.2f", Double.parseDouble(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).replace(",", "."))));
 
-    public  boolean verificaConexao() {
-        boolean conectado;
-        ConnectivityManager conectivtyManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
-        if (conectivtyManager.getActiveNetworkInfo() != null
-                && conectivtyManager.getActiveNetworkInfo().isAvailable()
-                && conectivtyManager.getActiveNetworkInfo().isConnected()) {
-            conectado = true;
-        } else {
-            conectado = false;
-        }
-        return conectado;
-    }
+            PdfPCell c3 = new PdfPCell(ph_VlTotal);
+            c3.setHorizontalAlignment(Element.ALIGN_LEFT);
+            ///c1.setPaddingTop(5);
+            c3.setPadding(10);
+            table.addCell(c3);
 
-    private class LoadingAsyncOpcoes extends AsyncTask<Void, Void, Void> {
-        ProgressDialog progressDialog = new ProgressDialog(ManutencaoPedidos.this);
-        BancoController crud = new BancoController(getBaseContext());
-        String validou = "N";
+            //table.addCell("Quantidade: " + rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)));
+            //table.addCell("Valor total: " + "R$" + String.format("%.2f", Double.parseDouble(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).replace(",", "."))));
 
-        @Override
-        protected void onPreExecute() {
-            progressDialog.setMessage("Enviando o pedido online...");
-            progressDialog.show();
+            rs_ItemPedido.moveToNext();
         }
 
-        @Override
-        protected Void doInBackground(Void... params) {
 
-            if(FU_EnviarPedido() == true) {
+        /*PdfPCell c1 = new PdfPCell(new Phrase("Table Header 1"));
+        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
+        table.addCell(c1);
 
-                validou = "S";
+        c1 = new PdfPCell(new Phrase("Table Header 2"));
+        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
+        table.addCell(c1);
 
-            }
+        c1 = new PdfPCell(new Phrase("Table Header 3"));
+        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
+        table.addCell(c1);
+        table.setHeaderRows(1);
 
+        table.addCell("1.0");
+        table.addCell("1.1");
+        table.addCell("1.2");
+        table.addCell("2.1");
+        table.addCell("2.2");
+        table.addCell("2.3");*/
 
-            return null;
-        }
-
-        @Override
-        protected void onPostExecute(Void aVoid) {
-
-            progressDialog.dismiss();
+        paragraph.add(table);
 
-            if(validou.equals("S")){
-                crud = new BancoController(getBaseContext());
-                crud.alteraSituacaoPedido(numpedido, "ENVIADO");
-                MensagemUtil.addMsg(ManutencaoPedidos.this, "Pedido enviado com sucesso!");
-                Intent intent = new Intent(ManutencaoPedidos.this, Pedidos.class);
-                startActivity(intent);
-            }else {
-                MensagemUtil.addMsg(ManutencaoPedidos.this, "Não foi possivel realizar a sincronização do pedido. Favor verificar a conexão com a internet.");
-            }
-        }
     }
 
 }
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/ManutencaoProdutoPedido.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/ManutencaoProdutoPedido.java
index a2f5138..0a1d3fe 100755
--- a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/ManutencaoProdutoPedido.java
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/ManutencaoProdutoPedido.java
@@ -23,12 +23,30 @@ import java.text.DecimalFormat;
 import java.text.NumberFormat;
 import java.util.Locale;
 
+import classes.CL_Clientes;
+import classes.CL_ItemPedido;
+import classes.CL_Pedidos;
+import classes.CL_Produtos;
+import controllers.CTL_Clientes;
+import controllers.CTL_ItemPedido;
+import controllers.CTL_Pedidos;
+import controllers.CTL_Produtos;
+import models.MDL_Produtos;
+
 public class ManutencaoProdutoPedido extends AppCompatActivity {
 
-    TextView lb_descricaoProduto;
+    CL_Pedidos cl_Pedidos;
+    CTL_Pedidos ctl_Pedidos;
+
+    CL_ItemPedido cl_ItemPedido;
+    CTL_ItemPedido ctl_ItemPedido;
+
+    CL_Produtos cl_Produto;
+
+    TextView lb_descricaoProduto, lb_produtoAdicionado;
     EditText tb_codigoProduto, tb_quantidadeProduto, tb_descontoProduto, tb_valorUnitarioProduto;
 
-    String codigo, numpedido, operacao, alteracao;
+    String vc_CdProduto, vc_NumPedido, vc_Operacao, vc_Alteracao;
 
     double percdescmaxvendedor;
     double percDescontoClassificacao = 0; //19429
@@ -38,6 +56,9 @@ public class ManutencaoProdutoPedido extends AppCompatActivity {
     AlertDialog.Builder builder;
     boolean validou;
 
+    FloatingActionButton fab_SalvarProdutosPedido;
+
+    MenuItem me_Salvar, me_Excluir;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -46,398 +67,104 @@ public class ManutencaoProdutoPedido extends AppCompatActivity {
         Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
 
-        codigo = this.getIntent().getStringExtra("codigo");
-        numpedido = this.getIntent().getStringExtra("numpedido");
-        alteracao = this.getIntent().getStringExtra("alteracao");
-
-        if(alteracao.equals("N")) {
-            getSupportActionBar().setDisplayHomeAsUpEnabled(true);
-        }
-
-        lb_descricaoProduto = (TextView)findViewById(R.id.lb_descricaoProdutoManutencao);
-        tb_codigoProduto = (EditText)findViewById(R.id.tb_cdProdutoManutencao);
-        tb_quantidadeProduto = (EditText)findViewById(R.id.tb_qtdeProdutoManutencao);
-        tb_descontoProduto = (EditText)findViewById(R.id.tb_descontoProdutoManutencao);
-        tb_valorUnitarioProduto = (EditText)findViewById(R.id.tb_valorUnitarioManutencao);
-
-        Button sc_excluirProduto = (Button)findViewById(R.id.sc_excluirProduto);
-        Button sc_cancelar = (Button)findViewById(R.id.sc_cancelar);
-
-
-
-        BancoController crud = new BancoController(getBaseContext());
-        Cursor cursor;
-        if(alteracao.equals("S")){
-            cursor = crud.carregaItemPedidoAlteracao(numpedido, codigo);
-            //cursor.moveToPosition(Integer.parseInt(codigo));
-
-            try {
-                if(!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).equals("null")) {
-                    lb_descricaoProduto.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCRICAO)));
-                }
-            }catch (Exception e){
-                lb_descricaoProduto.setText("");
-            }
-            try {
-                if(!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).equals("null")) {
-                    tb_codigoProduto.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)));
-                }
-            }catch (Exception e){
-                tb_codigoProduto.setText("0");
-            }
-            try {
-                if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.QTDE)).equals("null")) {
-                    tb_quantidadeProduto.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.QTDE)));
-                }
-            } catch (Exception e) {
-                tb_quantidadeProduto.setText("0");
-            }
-
-            try {
-                if(!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).equals("null")) {
-                    tb_valorUnitarioProduto.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).replace(",", "."));
-                    VL_valorBruto = Double.parseDouble(tb_valorUnitarioProduto.getText().toString());
-                    String valorUnitario = String.format("%.2f", Double.parseDouble(tb_valorUnitarioProduto.getText().toString()));
-                    tb_valorUnitarioProduto.setText(valorUnitario.replace(",", "."));
-                }
-
-            }catch (Exception e){
-                tb_valorUnitarioProduto.setText("0");
-            }
-
-            try {
-                if(!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)).equals("null")) {
-                    tb_valorUnitarioProduto.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)).replace(",", "."));
-                    String valorLiquido = String.format("%.2f", Double.parseDouble(tb_valorUnitarioProduto.getText().toString()));
-                    tb_valorUnitarioProduto.setText(valorLiquido.replace(",", "."));
-                }
-
-            }catch (Exception e){
-                tb_valorUnitarioProduto.setText("0");
-            }
-
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
+        suInstanciarCampos();
 
-            try {
-                if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).equals("null")) {
-                    tb_descontoProduto.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)));
-                }
-            } catch (Exception e) {
-                tb_descontoProduto.setText("0");
-            }
+        if (vc_Alteracao.equals("S")) {
+            cl_ItemPedido.setId(vc_CdProduto);
+            ctl_ItemPedido = new CTL_ItemPedido(getApplicationContext(), cl_ItemPedido);
 
-            sc_excluirProduto.setVisibility(View.VISIBLE);
-            sc_cancelar.setVisibility(View.VISIBLE);
-            operacao = "A";
-
-            TextView lb_produtoAdicionado = (TextView)findViewById(R.id.lb_produtoAdicionado);
-            lb_produtoAdicionado.setVisibility(View.VISIBLE);
-
-            String VA_CdCliente = crud.buscaClientePedido(numpedido);
-            String VA_ClassificacaoCliente = crud.buscaClassificacaoCliente(VA_CdCliente);
-            String VA_Fidelidade = crud.buscaFidelidadeCliente(VA_CdCliente);
-
-            if(VA_Fidelidade.equals("S")){
-                cursor = crud.buscaDescontoFidelidade(tb_codigoProduto.getText().toString());
+            if(ctl_ItemPedido.fuCarregaItemPedidoAlteracaoId()){
                 try {
-                    if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOFIDELIDADE)).equals("null")) {
-                        percdescmaxvendedor = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOFIDELIDADE)));
-                    }
+                    lb_descricaoProduto.setText(cl_ItemPedido.getDescricao());
                 } catch (Exception e) {
-                    percdescmaxvendedor = 0;
+                    lb_descricaoProduto.setText("");
                 }
-            }else if(VA_ClassificacaoCliente.equals("N")){
-                cursor = crud.carregaDadosProdutosByCdProduto(tb_codigoProduto.getText().toString());
                 try {
-                    if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDO)).equals("null")) {
-                        percdescmaxvendedor = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDO)));
-                    }
+                    tb_codigoProduto.setText(cl_ItemPedido.getCdProduto());
                 } catch (Exception e) {
-                    percdescmaxvendedor = 0;
+                    tb_codigoProduto.setText("0");
                 }
-            }else{
-                cursor = crud.buscaDescontos(tb_codigoProduto.getText().toString());
-                if(VA_ClassificacaoCliente.equals("A")){
-                    percdescmaxvendedor = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOA)));
-                    percDescontoClassificacao = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOA)));
-                }else if(VA_ClassificacaoCliente.equals("B")){
-                    percdescmaxvendedor = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOB)));
-                    percDescontoClassificacao = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOB)));
-                }else if(VA_ClassificacaoCliente.equals("C")){
-                    percdescmaxvendedor = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOC)));
-                    percDescontoClassificacao = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOC)));
-                }else if(VA_ClassificacaoCliente.equals("D")){
-                    percdescmaxvendedor = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOD)));
-                    percDescontoClassificacao = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOD)));
-                }else if(VA_ClassificacaoCliente.equals("E")){
-                    percdescmaxvendedor = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOE)));
-                    percDescontoClassificacao = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOE)));
+                try {
+                    tb_quantidadeProduto.setText(cl_ItemPedido.getQtde());
+                } catch (Exception e) {
+                    tb_quantidadeProduto.setText("0");
                 }
-            }
-
-            try {
-                BancoController crud2 = new BancoController(getBaseContext());
-
-                Cursor cursor_temp;
-                cursor_temp = crud2.carregaDadosProdutosByCdProduto(tb_codigoProduto.getText().toString());
 
-                String valorUnitario = cursor_temp.getString(cursor_temp.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO));
-                if (Double.parseDouble(valorUnitario) == 0) {
-                    tb_valorUnitarioProduto.setEnabled(true);
-                } else {
-                    tb_valorUnitarioProduto.setEnabled(true);
+                try {
+                        tb_valorUnitarioProduto.setText(cl_ItemPedido.getVlUnitario().replace(",", "."));
+                        VL_valorBruto = Double.parseDouble(tb_valorUnitarioProduto.getText().toString());
+                        String valorUnitario = String.format("%.2f", Double.parseDouble(tb_valorUnitarioProduto.getText().toString()));
+                        tb_valorUnitarioProduto.setText(valorUnitario);
+                } catch (Exception e) {
+                    tb_valorUnitarioProduto.setText("0");
                 }
-                cursor_temp.close();
-
-            }catch (Exception e){
-                MensagemUtil.addMsg(ManutencaoProdutoPedido.this, e.getMessage());
-            }
-
-        }else {
-            cursor = crud.carregaProdutosById(Integer.parseInt(codigo));
 
-            try {
-                if(!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).equals("null")) {
-                    lb_descricaoProduto.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCRICAO)));
-                }
-            }catch (Exception e){
-                lb_descricaoProduto.setText("");
-            }
-            try {
-                if(!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).equals("null")) {
-                    tb_codigoProduto.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)));
+                try {
+                        tb_valorUnitarioProduto.setText(cl_ItemPedido.getVlLiquido().replace(",", "."));
+                        String valorLiquido = String.format("%.2f", Double.parseDouble(tb_valorUnitarioProduto.getText().toString()));
+                        tb_valorUnitarioProduto.setText(valorLiquido);
+                } catch (Exception e) {
+                    tb_valorUnitarioProduto.setText("0");
                 }
-            }catch (Exception e){
-                tb_codigoProduto.setText("0");
-            }
-            tb_quantidadeProduto.setText("1");
-            try {
-                if(!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)).equals("null")) {
-                    tb_valorUnitarioProduto.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)));
 
-                    String valorProduto = tb_valorUnitarioProduto.getText().toString();
-                    String valor = String.format("%.2f", Double.parseDouble(valorProduto));
-                    tb_valorUnitarioProduto.setText(valor.replace(",", "."));
-                    VL_valorBruto = Double.parseDouble(tb_valorUnitarioProduto.getText().toString());
 
+                vc_Operacao = "A";
 
+                try {
+                    tb_descontoProduto.setText(cl_ItemPedido.getPercDesconto());
+                } catch (Exception e) {
+                    tb_descontoProduto.setText("0");
                 }
-            }catch (Exception e){
-                tb_valorUnitarioProduto.setText("0.00");
-            }
-
 
+                lb_produtoAdicionado.setVisibility(View.VISIBLE);
 
-            if(Double.parseDouble(tb_valorUnitarioProduto.getText().toString()) == 0) {
-                tb_valorUnitarioProduto.setEnabled(true);
-            }else{
-                tb_valorUnitarioProduto.setEnabled(true);
+                suBuscaPrecosCliente("S");
             }
 
-            String VA_CdCliente = crud.buscaClientePedido(numpedido);
-            String VA_ClassificacaoCliente = crud.buscaClassificacaoCliente(VA_CdCliente);
-            String VA_Fidelidade = crud.buscaFidelidadeCliente(VA_CdCliente);
+        } else {
+            cl_Produto = new CL_Produtos();
+            cl_Produto.setId(vc_CdProduto);
+
+            CTL_Produtos ctl_Produtos = new CTL_Produtos(getApplicationContext(), cl_Produto);
+            if(ctl_Produtos.fuCarregaProduto()){
 
-            if(VA_Fidelidade.equals("S")){
-                cursor = crud.buscaDescontoFidelidade(tb_codigoProduto.getText().toString());
                 try {
-                    if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOFIDELIDADE)).equals("null")) {
-                        percdescmaxvendedor = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOFIDELIDADE)));
-                    }
+                    lb_descricaoProduto.setText(cl_Produto.getDescricao().toUpperCase());
                 } catch (Exception e) {
-                    percdescmaxvendedor = 0;
+                    lb_descricaoProduto.setText("");
                 }
-            }else if(VA_ClassificacaoCliente.equals("N")){
-                cursor = crud.carregaDadosProdutosByCdProduto(tb_codigoProduto.getText().toString());
                 try {
-                    if (!cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDO)).equals("null")) {
-                        percdescmaxvendedor = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDO)));
-                    }
+                    tb_codigoProduto.setText(cl_Produto.getCdProduto());
                 } catch (Exception e) {
-                    percdescmaxvendedor = 0;
+                    tb_codigoProduto.setText("0");
                 }
-            }else{
-                try {
-                    String VA_CdProduto = tb_codigoProduto.getText().toString();
-                    cursor = crud.buscaDescontos(tb_codigoProduto.getText().toString());
-                    VA_CdProduto = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDPRODUTO));
-                    if (VA_ClassificacaoCliente.equals("A")) {
-                        percdescmaxvendedor = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOA)));
-                        percDescontoClassificacao = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOA)));
-                    } else if (VA_ClassificacaoCliente.equals("B")) {
-                        percdescmaxvendedor = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOB)));
-                        percDescontoClassificacao = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOB)));
-                    } else if (VA_ClassificacaoCliente.equals("C")) {
-                        percdescmaxvendedor = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOC)));
-                        percDescontoClassificacao = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOC)));
-                    } else if (VA_ClassificacaoCliente.equals("D")) {
-                        percdescmaxvendedor = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOD)));
-                        percDescontoClassificacao = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOD)));
-                    } else if (VA_ClassificacaoCliente.equals("E")) {
-                        percdescmaxvendedor = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOE)));
-                        percDescontoClassificacao = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOE)));
-                    }
-                }catch (Exception e){
-                    percdescmaxvendedor = 0;
-                    percDescontoClassificacao = 0;
-                }
-            }
-
-            tb_descontoProduto.setText(String.valueOf(percDescontoClassificacao));
 
-            if(crud.buscaTipoPrecoCliente(VA_CdCliente).equals("A")){
-                String vlAtacado = crud.buscaValorAtacado(tb_codigoProduto.getText().toString());
+                tb_quantidadeProduto.setText("1");
 
                 try {
-                    if(!vlAtacado.equals("null")) {
-                        tb_valorUnitarioProduto.setText(vlAtacado);
+                    tb_valorUnitarioProduto.setText(cl_Produto.getVlUnitario());
 
-                        String valorProduto = tb_valorUnitarioProduto.getText().toString();
-                        String valor = String.format("%.2f", Double.parseDouble(valorProduto));
-                        tb_valorUnitarioProduto.setText(valor.replace(",", "."));
-                        VL_valorBruto = Double.parseDouble(tb_valorUnitarioProduto.getText().toString());
-                    }
-                }catch (Exception e){
+                    String valorProduto = tb_valorUnitarioProduto.getText().toString();
+                    String valor = String.format("%.2f", Double.parseDouble(valorProduto));
+                    tb_valorUnitarioProduto.setText(valor.replace(",", "."));
+                    VL_valorBruto = Double.parseDouble(tb_valorUnitarioProduto.getText().toString());
+                } catch (Exception e) {
                     tb_valorUnitarioProduto.setText("0.00");
                 }
-            }
 
-            String codigoProduto = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDPRODUTO));
-            String VA_CdProduto = "N";
-            try {
-                VA_CdProduto = crud.verificaProdutoItemPedido(numpedido, codigoProduto);
-            }catch (Exception e){
-                MensagemUtil.addMsg(ManutencaoProdutoPedido.this, e.getMessage().toString());
-            }
-            if(VA_CdProduto.equals("S")){
-                cursor.close();
-                Cursor cursor_itempedido;
-                try {
-                    cursor_itempedido = crud.carregaProdutoItemPedido(numpedido, codigoProduto);
+                suBuscaPrecosCliente("N");
 
-                    try {
-                        if (!cursor_itempedido.getString(cursor_itempedido.getColumnIndexOrThrow(CriaBanco.QTDE)).equals("null")) {
-                            tb_quantidadeProduto.setText(cursor_itempedido.getString(cursor_itempedido.getColumnIndexOrThrow(CriaBanco.QTDE)));
-                        }
-                    } catch (Exception e) {
-                        tb_quantidadeProduto.setText("0");
-                    }
-                    try {
-                        if (!cursor_itempedido.getString(cursor_itempedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).equals("null")) {
-                            tb_descontoProduto.setText(cursor_itempedido.getString(cursor_itempedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)));
-                        }
-                    } catch (Exception e) {
-                        tb_descontoProduto.setText("0");
-                    }
-                    try {
-                        if (!cursor_itempedido.getString(cursor_itempedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).equals("null")) {
-                            tb_valorUnitarioProduto.setText(cursor_itempedido.getString(cursor_itempedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)));
-
-                            String valorProduto = tb_valorUnitarioProduto.getText().toString();
-                            String valor = String.format("%.2f", Double.parseDouble(valorProduto));
-                            tb_valorUnitarioProduto.setText(valor.replace(",", "."));
-                        }
-                    } catch (Exception e) {
-                        tb_valorUnitarioProduto.setText("0.00");
-                    }
-
-                    try {
-                        if(!cursor_itempedido.getString(cursor_itempedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)).equals("null")) {
-                            tb_valorUnitarioProduto.setText(cursor_itempedido.getString(cursor_itempedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)).replace(",", "."));
-                            String valorLiquido = String.format("%.2f", Double.parseDouble(tb_valorUnitarioProduto.getText().toString()));
-                            tb_valorUnitarioProduto.setText(valorLiquido.replace(",", "."));
-                        }
-
-                    }catch (Exception e){
-                        tb_valorUnitarioProduto.setText("0");
-                    }
-
-                    sc_excluirProduto.setVisibility(View.VISIBLE);
-                    sc_cancelar.setVisibility(View.VISIBLE);
-                    operacao = "A";
+                tb_descontoProduto.setText(String.valueOf(percDescontoClassificacao));
 
-                    TextView lb_produtoAdicionado = (TextView)findViewById(R.id.lb_produtoAdicionado);
-                    lb_produtoAdicionado.setVisibility(View.VISIBLE);
-
-                }catch (Exception e){
-                    MensagemUtil.addMsg(ManutencaoProdutoPedido.this, e.getMessage().toString());
-                }
-            }else{
-                sc_excluirProduto.setVisibility(View.INVISIBLE);
-                sc_cancelar.setVisibility(View.INVISIBLE);
-                operacao = "I";
+                suVerificaItemPedido();
             }
-        }
-
-        builder = new AlertDialog.Builder(this);
-
-
-        sc_excluirProduto.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-
-                //define o titulo
-                builder.setTitle("Excluir Produto");
-                //define a mensagem
-                //builder.setMessage("Deseja mesmo excluir o produto " + lb_descricaoProduto.getText().toString() + "?");
-                builder.setMessage("Deseja mesmo excluir o produto ?");
-
-                //define um botão como positivo
-                builder.setPositiveButton("Sim", new DialogInterface.OnClickListener() {
-                    public void onClick(DialogInterface arg0, int arg1) {
-                        //Toast.makeText(ManutencaoProdutoPedido.this, "positivo=" + arg1, Toast.LENGTH_SHORT).show();
-                        try {
-                            tb_codigoProduto = (EditText) findViewById(R.id.tb_cdProdutoManutencao);
-                            BancoController crud = new BancoController(getBaseContext());
-                            crud.deletaItemPedido(numpedido, tb_codigoProduto.getText().toString());
-                            MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Produto excluido com sucesso!");
-                            Intent intent = new Intent();
-                            intent.putExtra("numpedido", numpedido);
-                            if (alteracao.equals("S")) {
-                                setResult(2, intent);
-                            } else {
-                                setResult(1, intent);
-                            }
-                            //intent.putExtra("codigo", codigo);
-                            //startActivity(intent);
-                            finish();
-                        } catch (Exception e) {
-                            MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Não foi possivel excluir o produto do pedido devido à seguinte situação:" + e.getMessage().toString());
-                        }
-                    }
-                });
-                //define um botão como negativo.
-                builder.setNegativeButton("Não", new DialogInterface.OnClickListener() {
-                    public void onClick(DialogInterface arg0, int arg1) {
-                        //Toast.makeText(ManutencaoProdutoPedido.this, "negativo=" + arg1, Toast.LENGTH_SHORT).show();
-                    }
-                });
-                //cria o AlertDialog
-                alerta = builder.create();
-                //Exibe
-                alerta.show();
-
-            }
-        });
-
-        sc_cancelar.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-
-                Intent intent = new Intent();
-                intent.putExtra("numpedido", numpedido);
-                if (alteracao.equals("S")) {
-                    setResult(2, intent);
-                } else {
-                    setResult(1, intent);
-                }
-                //intent.putExtra("codigo", codigo);
-                //startActivity(intent);
-                finish();
 
+        }
 
-            }
-        });
+        Locale mLocale = new Locale("pt", "BR");
+        tb_valorUnitarioProduto.addTextChangedListener(new MoneyTextWatcher(tb_valorUnitarioProduto, mLocale));
 
         tb_valorUnitarioProduto.setOnFocusChangeListener(new View.OnFocusChangeListener() {
             @Override
@@ -445,25 +172,29 @@ public class ManutencaoProdutoPedido extends AppCompatActivity {
                 if (!hasFocus) {
 
                     try {
-                        double VA_VlUnitarioNovo = Double.parseDouble(tb_valorUnitarioProduto.getText().toString().trim());
+                        double VA_VlUnitarioNovo = Double.parseDouble(tb_valorUnitarioProduto.getText().toString().trim().replace(",", "."));
                         if (VA_VlUnitarioNovo - VL_valorBruto < 0) {
 
                             try {
-                                BancoController crud = new BancoController(getBaseContext());
-                                Cursor cursor = crud.carregaProdutosById(Integer.parseInt(codigo));
 
+                                CL_Produtos cl_Produto = new CL_Produtos();
+                                cl_Produto.setId(vc_CdProduto);
 
-                                double valorBruto = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)).replace(",", "."));
-                                double valorLiquido = valorBruto - VA_VlUnitarioNovo;
+                                CTL_Produtos ctl_Produto = new CTL_Produtos(getApplicationContext(), cl_Produto);
 
+                                if(ctl_Produto.fuCarregaProduto()){
+                                    double valorBruto = Double.parseDouble(cl_Produto.getVlUnitario().replace(",", "."));
+                                    double valorLiquido = valorBruto - VA_VlUnitarioNovo;
 
-                                double porcentagem = ((valorBruto - valorLiquido) / valorBruto) * 100;
-                                porcentagem = 100 - porcentagem;
-                                if (porcentagem > percdescmaxvendedor) {
-                                    MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Desconto informado é maior que o permitido!");
-                                    tb_valorUnitarioProduto.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)));
-                                } else {
-                                    tb_descontoProduto.setText(String.format("%.5f", 100 - porcentagem).replace(",", "."));
+
+                                    double porcentagem = ((valorBruto - valorLiquido) / valorBruto) * 100;
+                                    porcentagem = 100 - porcentagem;
+                                    if (porcentagem > percdescmaxvendedor) {
+                                        MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Desconto informado é maior que o permitido!");
+                                        tb_valorUnitarioProduto.setText(cl_Produto.getVlUnitario());
+                                    } else {
+                                        tb_descontoProduto.setText(String.format("%.5f", 100 - porcentagem).replace(",", "."));
+                                    }
                                 }
 
 
@@ -471,148 +202,207 @@ public class ManutencaoProdutoPedido extends AppCompatActivity {
 
                             }
 
-
                             double valorLiquido = VL_valorBruto - Double.parseDouble(tb_valorUnitarioProduto.getText().toString().replace(",", "."));
                             tb_valorUnitarioProduto.setText(String.format("%.2f", VL_valorBruto).replace(".", "").replace(",", "."));
                             double porcentagem = ((VL_valorBruto - valorLiquido) / VL_valorBruto) * 100;
                             tb_descontoProduto.setText(String.format("%.5f", 100 - porcentagem).replace(",", "."));
                             tb_descontoProduto.setEnabled(true);
+
                         } else if (VA_VlUnitarioNovo - VL_valorBruto > 0) {
                             tb_descontoProduto.setEnabled(false);
                             tb_descontoProduto.setText("0.00000");
-                        }else {
+                        } else {
                             tb_descontoProduto.setEnabled(true);
                             //tb_descontoProduto.setText("0");
                         }
                         VA_VlUnitarioNovo = VL_valorBruto; //Realizado esse tratamento para que o sistema mantenha o valor incial do produto
 
-                }catch(Exception e){
-                    e.printStackTrace();
+                    } catch (Exception e) {
+                        e.printStackTrace();
+                    }
                 }
             }
+        });
+
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        // Inflate the menu; this adds items to the action bar if it is present.
+        getMenuInflater().inflate(R.menu.manutencaoproduto, menu);
+
+        me_Salvar = menu.findItem(R.id.menu_salvarprodutopedido);
+        me_Excluir = menu.findItem(R.id.menu_excluirprodutopedido);
+
+        if(vc_Operacao.equals("A")){
+            me_Excluir.setVisible(true);
+        }else{
+            me_Excluir.setVisible(false);
         }
-    });
 
-        tb_valorUnitarioProduto.addTextChangedListener(new TextWatcher() {
-            @Override
-            public void onTextChanged(CharSequence s, int start, int before, int count) {
 
-            }
+        return true;
+    }
 
-            @Override
-            public void beforeTextChanged(CharSequence s, int start, int count,
-                                          int after) {
-                // TODO Auto-generated method stub
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
 
+        int id = item.getItemId();
+
+        if(id == android.R.id.home){
 
+            if(vc_Alteracao.equals("N")){
+                Intent intent = new Intent();
+                intent.putExtra("numpedido", cl_Pedidos.getNumPedido());
+                if (vc_Alteracao.equals("S")) {
+                    setResult(2, intent);
+                } else {
+                    setResult(1, intent);
+                }
+                finish();
+            }else {
+                Intent intent2 = new Intent();
+                intent2.putExtra("numpedido", cl_Pedidos.getNumPedido());
+                setResult(1, intent2);
+                finish();
             }
 
-            @Override
-            public void afterTextChanged(Editable s) {
+            return true;
+        }
+
+        if(id == R.id.menu_salvarprodutopedido) {
+            suSalvarProduto();
+            return true;
+        }
+
+        if(id == R.id.menu_excluirprodutopedido){
+            suExcluirProduto();
+            return true;
+        }
+
+        return super.onOptionsItemSelected(item);
+    }
+
+    protected void suInstanciarCampos(){
+
+        cl_Pedidos = new CL_Pedidos();
+        cl_ItemPedido = new CL_ItemPedido();
 
+        vc_CdProduto = this.getIntent().getStringExtra("codigo");
+        vc_NumPedido = this.getIntent().getStringExtra("numpedido");
+        vc_Alteracao = this.getIntent().getStringExtra("alteracao");
+
+        cl_Pedidos.setNumPedido(vc_NumPedido);
+        cl_ItemPedido.setNumPedido(vc_NumPedido);
+
+        fab_SalvarProdutosPedido = (FloatingActionButton) findViewById(R.id.fab_SalvarManutencaoProdutoPedido);
+        fab_SalvarProdutosPedido.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                suSalvarProduto();
             }
         });
 
-    }
+        lb_descricaoProduto = (TextView) findViewById(R.id.lb_descricaoProdutoManutencao);
+        tb_codigoProduto = (EditText) findViewById(R.id.tb_cdProdutoManutencao);
+        tb_quantidadeProduto = (EditText) findViewById(R.id.tb_qtdeProdutoManutencao);
+        tb_descontoProduto = (EditText) findViewById(R.id.tb_descontoProdutoManutencao);
+        tb_valorUnitarioProduto = (EditText) findViewById(R.id.tb_valorUnitarioManutencao);
 
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        // Inflate the menu; this adds items to the action bar if it is present.
-        getMenuInflater().inflate(R.menu.manutencaoproduto, menu);
-        return true;
+        lb_produtoAdicionado = (TextView) findViewById(R.id.lb_produtoAdicionado);
     }
 
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        // Handle action bar item clicks here. The action bar will
-        // automatically handle clicks on the Home/Up button, so long
-        // as you specify a parent activity in AndroidManifest.xml.
+    protected void suSalvarProduto(){
+        if(fuConsisteItem()) {
+            if(vc_Operacao.equals("I")) {
+                if (fuIncluirItemPedido()) {
+                    MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Produto incluido com sucesso!");
+                    Intent intent = new Intent();
+                    intent.putExtra("numpedido", cl_Pedidos.getNumPedido());
+                    setResult(1, intent);
+                    finish();
+                }
+            }else{
 
+                if(fuAlteraItemPedido()){
+                    MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Produto alterado com sucesso!");
+                    Intent intent = new Intent();
+                    intent.putExtra("numpedido", cl_Pedidos.getNumPedido());
+                    setResult(1, intent);
+                    finish();
+                }
+            }
+        }
+    }
 
-        int id = item.getItemId();
+    protected void suExcluirProduto() {
+        builder = new AlertDialog.Builder(this);
 
-        //noinspection SimplifiableIfStatement
-        /*if (id == R.id.action_settings) {
-            return true;
-        }*/
 
-        switch (item.getItemId()) {
+        //define o titulo
+        builder.setTitle("Excluir Produto");
+        //define a mensagem
+        //builder.setMessage("Deseja mesmo excluir o produto " + lb_descricaoProduto.getText().toString() + "?");
+        builder.setMessage("Deseja mesmo excluir o produto do pedido?");
 
-            // Id correspondente ao botão Up/Home da actionbar
-            case android.R.id.home:
+        //define um botão como positivo
+        builder.setPositiveButton("Sim", new DialogInterface.OnClickListener() {
+            public void onClick(DialogInterface arg0, int arg1) {
+                //Toast.makeText(ManutencaoProdutoPedido.this, "positivo=" + arg1, Toast.LENGTH_SHORT).show();
+                try {
 
-                Intent intent2 = new Intent();
-                intent2.putExtra("numpedido", numpedido);
-                setResult(1, intent2);
-                //intent.putExtra("codigo", codigo);
-                //startActivity(intent);
-                finish();
+                    cl_ItemPedido.setCdProduto(tb_codigoProduto.getText().toString());
+                    ctl_ItemPedido = new CTL_ItemPedido(getApplicationContext(), cl_ItemPedido);
 
-               //NavUtils.navigateUpFromSameTask(this);
-               return true;
-            case R.id.action_settings:
-                if(FU_ConsisteItem()) {
-                    if(operacao.equals("I")) {
-                        if (FU_IncluirItemPedido()) {
-                            MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Produto incluido com sucesso!");
-                            Intent intent = new Intent();
-                            intent.putExtra("numpedido", numpedido);
+                    if(ctl_ItemPedido.fuDeletarItemPedido()){
+                        MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Produto excluido com sucesso!");
+                        Intent intent = new Intent();
+                        intent.putExtra("numpedido", cl_Pedidos.getNumPedido());
+                        if (vc_Alteracao.equals("S")) {
+                            setResult(2, intent);
+                        } else {
                             setResult(1, intent);
-                            //intent.putExtra("codigo", codigo);
-                            //startActivity(intent);
-                            finish();
-                            //Intent intent = new Intent(ManutencaoProdutoPedido.this, AdicionarProdutosCustomizada.class);
-                            //intent.putExtra("numpedido", numpedido);
-                            //startActivity(intent);
                         }
+                        //intent.putExtra("codigo", codigo);
+                        //startActivity(intent);
+                        finish();
                     }else{
-
-                        if(FU_AlteraItemPedido()){
-                            MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Produto alterado com sucesso!");
-                            Intent intent = new Intent();
-                            intent.putExtra("numpedido", numpedido);
-                            setResult(1, intent);
-                            //intent.putExtra("codigo", codigo);
-                            //startActivity(intent);
-                            finish();
-                        }
+                        MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Não foi possivel excluir o produto do pedido devido à seguinte situação:" + ctl_ItemPedido.vc_Mensagem);
                     }
+
+                } catch (Exception e) {
+                    MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Não foi possivel excluir o produto do pedido devido à seguinte situação:" + e.getMessage().toString());
                 }
-                return true;
-        }
+            }
+        });
+        //define um botão como negativo.
+        builder.setNegativeButton("Não", new DialogInterface.OnClickListener() {
+            public void onClick(DialogInterface arg0, int arg1) {
+                //Toast.makeText(ManutencaoProdutoPedido.this, "negativo=" + arg1, Toast.LENGTH_SHORT).show();
+            }
+        });
+        //cria o AlertDialog
+        alerta = builder.create();
+        //Exibe
+        alerta.show();
+
 
-        return super.onOptionsItemSelected(item);
     }
 
     @Override
     public void onBackPressed()
     {
-        //Seu código aqui dentro
-        //MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Foi clicado para voltar");
         Intent intent = new Intent();
-        intent.putExtra("numpedido", numpedido);
+        intent.putExtra("numpedido", cl_Pedidos.getNumPedido());
         setResult(0, intent);
-        //intent.putExtra("codigo", codigo);
-        //startActivity(intent);
         finish();
     }
 
-    public boolean FU_IncluirItemPedido(){
-
-        BancoController crud = new BancoController(getBaseContext());
+    protected boolean fuIntanciarItemPedido(){
 
         try {
-            lb_descricaoProduto = (TextView)findViewById(R.id.lb_descricaoProdutoManutencao);
-            tb_codigoProduto = (EditText) findViewById(R.id.tb_cdProdutoManutencao);
-            tb_quantidadeProduto = (EditText) findViewById(R.id.tb_qtdeProdutoManutencao);
-            tb_descontoProduto = (EditText) findViewById(R.id.tb_descontoProdutoManutencao);
-            tb_valorUnitarioProduto = (EditText) findViewById(R.id.tb_valorUnitarioManutencao);
-
-            Cursor cursorVlUnitario = crud.carregaDadosProdutosByCdProduto(tb_codigoProduto.getText().toString());
-            double vlunitariobruto = Double.parseDouble(cursorVlUnitario.getString(cursorVlUnitario.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)));
-
             double VA_vlUnitarioProduto = Double.parseDouble(tb_valorUnitarioProduto.getText().toString().replace(",", "."));
-            double vltotal = Double.parseDouble(tb_quantidadeProduto.getText().toString()) * Double.parseDouble(tb_valorUnitarioProduto.getText().toString());
+            double vltotal = Double.parseDouble(tb_quantidadeProduto.getText().toString()) * Double.parseDouble(tb_valorUnitarioProduto.getText().toString().replace(",", "."));
             double vldesconto = 0;
 
             String vlmaxdescpermitido = "0";
@@ -620,7 +410,7 @@ public class ManutencaoProdutoPedido extends AppCompatActivity {
             String valorTotalDesconto = String.format("%.2f", vldesconto);
 
             String valorPercDesconto = "0";
-            if(VA_vlUnitarioProduto < VL_valorBruto) {
+            if (VA_vlUnitarioProduto < VL_valorBruto) {
                 if (percdescmaxvendedor > 0) {
                     double VA_vlDesconto = percdescmaxvendedor;
                     double porcentagem = VA_vlDesconto / 100;
@@ -634,7 +424,7 @@ public class ManutencaoProdutoPedido extends AppCompatActivity {
                     valorPercDesconto = tb_descontoProduto.getText().toString();
                 }
 
-            }else {
+            } else {
 
                 if (percdescmaxvendedor > 0) {
                     double VA_vlDesconto = percdescmaxvendedor;
@@ -660,173 +450,329 @@ public class ManutencaoProdutoPedido extends AppCompatActivity {
             }
 
             String valorunitarioteste = String.format("%.2f", VA_vlUnitarioProduto);
-             crud.inserirItemPedido(numpedido, tb_codigoProduto.getText().toString(), lb_descricaoProduto.getText().toString(), tb_quantidadeProduto.getText().toString(), valorPercDesconto, valorTotalDesconto.replace(",", "."), vlmaxdescpermitido.replace(",", "."), valorunitarioteste, tb_valorUnitarioProduto.getText().toString(), valor);
+
+            cl_ItemPedido.setNumPedido(cl_Pedidos.getNumPedido());
+            cl_ItemPedido.setCdProduto(tb_codigoProduto.getText().toString());
+            cl_ItemPedido.setDescricao(lb_descricaoProduto.getText().toString());
+            cl_ItemPedido.setQtde(tb_quantidadeProduto.getText().toString());
+            cl_ItemPedido.setPercDesconto(valorPercDesconto);
+            cl_ItemPedido.setVlDesconto(valorTotalDesconto.replace(",", "."));
+            cl_ItemPedido.setVlMaxDescPermitido(vlmaxdescpermitido.replace(",", "."));
+            cl_ItemPedido.setVlUnitario(valorunitarioteste);
+            cl_ItemPedido.setVlLiquido(tb_valorUnitarioProduto.getText().toString());
+            cl_ItemPedido.setVlTotal(valor);
+
+            ctl_ItemPedido = new CTL_ItemPedido(getApplicationContext(), cl_ItemPedido);
 
             return true;
+
         }catch (Exception e){
             return false;
         }
-
     }
 
-    public boolean FU_AlteraItemPedido(){
-        BancoController crud = new BancoController(getBaseContext());
+    public boolean fuIncluirItemPedido(){
+
         try {
-            lb_descricaoProduto = (TextView)findViewById(R.id.lb_descricaoProdutoManutencao);
-            tb_codigoProduto = (EditText) findViewById(R.id.tb_cdProdutoManutencao);
-            tb_quantidadeProduto = (EditText) findViewById(R.id.tb_qtdeProdutoManutencao);
-            tb_descontoProduto = (EditText) findViewById(R.id.tb_descontoProdutoManutencao);
-            tb_valorUnitarioProduto = (EditText) findViewById(R.id.tb_valorUnitarioManutencao);
 
-            double VA_vlUnitarioProduto = Double.parseDouble(tb_valorUnitarioProduto.getText().toString());
+            if(fuIntanciarItemPedido()){
+                if(ctl_ItemPedido.fuInserirItemPedido()){
+                    return true;
+                }else{
+                    return false;
+                }
+            }else{
+                return false;
+            }
+        }catch (Exception e){
+            return false;
+        }
 
-            Cursor cursorVlUnitario = crud.carregaDadosProdutosByCdProduto(tb_codigoProduto.getText().toString());
-            double vlunitariobruto = Double.parseDouble(cursorVlUnitario.getString(cursorVlUnitario.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)));
-            double vltotal = Double.parseDouble(tb_quantidadeProduto.getText().toString()) * Double.parseDouble(tb_valorUnitarioProduto.getText().toString());
-            double vldesconto = 0;
-            double percdesconto = 0;
+    }
 
-            if(vlunitariobruto - VA_vlUnitarioProduto > 0 || vlunitariobruto - VA_vlUnitarioProduto == 0){
-                if (!tb_descontoProduto.getText().toString().trim().equals("") && !tb_descontoProduto.getText().toString().trim().equals("0")) {
+    public boolean fuAlteraItemPedido(){
+        try {
 
-                    double VA_vlDesconto = Double.parseDouble(tb_descontoProduto.getText().toString());
-                    double porcentagem = VA_vlDesconto / 100;
-                    vldesconto = (VL_valorBruto * Double.parseDouble(tb_quantidadeProduto.getText().toString())) * porcentagem;
-                    double resultadoTotal = (VL_valorBruto * Double.parseDouble(tb_quantidadeProduto.getText().toString())) - vldesconto;
-                    vltotal = Double.valueOf(String.format(Locale.US, "%.2f", resultadoTotal));
-                    percdesconto = Double.parseDouble(tb_descontoProduto.getText().toString());
+            if(fuIntanciarItemPedido()){
+                if(ctl_ItemPedido.fuAlterarItemPedido()){
+                    return true;
+                }else{
+                    return false;
                 }
             }else{
-
+                return false;
             }
 
-            String valor = String.format("%.2f", vltotal);
-            String valorTotalDesconto = String.format("%.2f", vldesconto);
-            String valorPercDesconto = String.format("%.5f", percdesconto);
-
-            String valorunitarioteste = String.format("%.2f", VA_vlUnitarioProduto);
-            crud.alteraItemPedido(numpedido, tb_codigoProduto.getText().toString(), tb_quantidadeProduto.getText().toString(), valorPercDesconto.replace(",", "."), valorTotalDesconto.replace(",", "."), valorunitarioteste, valor, valorunitarioteste);
-
-            return true;
         }catch (Exception e){
             return false;
         }
     }
 
-    public boolean FU_ConsisteItem() {
-        tb_quantidadeProduto = (EditText) findViewById(R.id.tb_qtdeProdutoManutencao);
-        tb_descontoProduto = (EditText) findViewById(R.id.tb_descontoProdutoManutencao);
-        tb_valorUnitarioProduto = (EditText) findViewById(R.id.tb_valorUnitarioManutencao);
-        tb_codigoProduto = (EditText) findViewById(R.id.tb_cdProdutoManutencao);
+    public boolean fuConsisteItem() {
 
-        double VA_quantidadeProduto;
-        double VA_descontoProduto, VA_vlUnitarioProduto;
+        try {
+            double vf_QuantidadeProduto;
+            double vf_DescontoProduto, vf_VlUnitarioProduto;
 
-        if (tb_quantidadeProduto.getText().toString().trim().equals("")) {
-            VA_quantidadeProduto = 0;
-        } else {
-            VA_quantidadeProduto = Double.parseDouble(tb_quantidadeProduto.getText().toString());
-        }
-        if (tb_descontoProduto.getText().toString().trim().equals("")) {
-            VA_descontoProduto = 0;
-        } else {
-            VA_descontoProduto = Double.parseDouble(tb_descontoProduto.getText().toString());
-        }
-        if (tb_valorUnitarioProduto.getText().toString().trim().equals("")) {
-            VA_vlUnitarioProduto = 0;
-        } else {
-            VA_vlUnitarioProduto = Double.parseDouble(tb_valorUnitarioProduto.getText().toString());
-        }
+            if (tb_quantidadeProduto.getText().toString().trim().equals("")) {
+                vf_QuantidadeProduto = 0;
+            } else {
+                vf_QuantidadeProduto = Double.parseDouble(tb_quantidadeProduto.getText().toString());
+            }
+            if (tb_descontoProduto.getText().toString().trim().equals("")) {
+                vf_DescontoProduto = 0;
+            } else {
+                vf_DescontoProduto = Double.parseDouble(tb_descontoProduto.getText().toString());
+            }
+            if (tb_valorUnitarioProduto.getText().toString().trim().equals("")) {
+                vf_VlUnitarioProduto = 0;
+            } else {
+                vf_VlUnitarioProduto = Double.parseDouble(tb_valorUnitarioProduto.getText().toString().replace(",", "."));
+            }
 
-        if (VA_quantidadeProduto == 0) {
-            MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Não é permitido incluir um produto com a quantidade igual a 0!");
-            return false;
-        }
+            if (vf_QuantidadeProduto == 0) {
+                MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Não é permitido incluir um produto com a quantidade igual a 0!");
+                return false;
+            }
+
+            if (tb_valorUnitarioProduto.getText().toString().trim().equals("")) {
+                MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Não é permitido incluir um produto com o valor unitário em branco!");
+                return false;
+            }
+
+            if (vf_VlUnitarioProduto == 0) {
+                MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Não é permitido incluir um produto com o valor unitário igual a 0!");
+                return false;
+            }
+
+            try {
+                BancoController crud = new BancoController(getBaseContext());
+                Cursor cursorVlUnitario = crud.carregaDadosProdutosByCdProduto(tb_codigoProduto.getText().toString());
+
+                VL_valorBruto = Double.parseDouble(cursorVlUnitario.getString(cursorVlUnitario.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)).replace(",", "."));
+                if (VL_valorBruto != 0) {
+                    DecimalFormat fmt = new DecimalFormat("0.00");   //limita o número de casas decimais
+                    String string = fmt.format(VL_valorBruto);
+                    //String[] part = string.split("[,]");
+                    //String preco = part[0]+"."+part[1];
+                    VL_valorBruto = Double.parseDouble(string.replace(",", "."));
+                }
+                if (vf_VlUnitarioProduto < VL_valorBruto) {
+
+                    try {
+                        double VA_VlUnitarioNovo = Double.parseDouble(tb_valorUnitarioProduto.getText().toString().trim());
+                        if (VA_VlUnitarioNovo - VL_valorBruto < 0) {
 
-        if (tb_valorUnitarioProduto.getText().toString().trim().equals("")) {
-            MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Não é permitido incluir um produto com o valor unitário em branco!");
+                            try {
+                                Cursor cursor = crud.carregaProdutosById(Integer.parseInt(vc_CdProduto));
+
+                                double valorBruto = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)).replace(",", "."));
+                                double valorLiquido = valorBruto - VA_VlUnitarioNovo;
+
+                                double porcentagem = ((valorBruto - valorLiquido) / valorBruto) * 100;
+                                porcentagem = 100 - porcentagem;
+
+                                if (porcentagem > percdescmaxvendedor) {
+                                    MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Desconto informado é maior que o permitido!");
+                                    tb_valorUnitarioProduto.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)));
+                                    return false;
+                                } else {
+                                    tb_descontoProduto.setText(String.format("%.5f", 100 - porcentagem).replace(",", "."));
+                                }
+
+                            } catch (Exception e) {
+
+                            }
+
+                        } else {
+                            tb_descontoProduto.setText("");
+                        }
+
+                        double valorLiquido = VL_valorBruto - Double.parseDouble(tb_valorUnitarioProduto.getText().toString().replace(",", "."));
+
+                        double porcentagem = ((VL_valorBruto - valorLiquido) / VL_valorBruto) * 100;
+                        tb_descontoProduto.setText(String.format("%.5f", 100 - porcentagem).replace(",", "."));
+                        vf_DescontoProduto = 100 - porcentagem;
+                        tb_valorUnitarioProduto.setText(String.format("%.2f", VL_valorBruto).replace(".", "").replace(",", "."));
+
+                    } catch (Exception e) {
+                        e.printStackTrace();
+                    }
+                } else if (vf_VlUnitarioProduto > VL_valorBruto) {
+                    tb_descontoProduto.setText("0");
+                    vf_DescontoProduto = 0;
+                } else {
+                    //tb_descontoProduto.setText("0");
+                }
+            } catch (Exception e) {
+                MensagemUtil.addMsg(ManutencaoProdutoPedido.this, e.getMessage());
+            }
+
+        /*if (VA_descontoProduto > 99) {
+            MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Não é permitido incluir um produto com o desconto superior a 99%!");
             return false;
-        }
+        }*/
 
-        if (VA_vlUnitarioProduto == 0) {
-            MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Não é permitido incluir um produto com o valor unitário igual a 0!");
+            if (vf_DescontoProduto > percdescmaxvendedor) {
+                MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Desconto informado é maior que o permitido!");
+                return false;
+            }
+            return true;
+        }catch (Exception e){
             return false;
         }
+    }
 
-        try {
-            BancoController crud = new BancoController(getBaseContext());
-            Cursor cursorVlUnitario = crud.carregaDadosProdutosByCdProduto(tb_codigoProduto.getText().toString());
-
-            VL_valorBruto = Double.parseDouble(cursorVlUnitario.getString(cursorVlUnitario.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)).replace(",", "."));
-            if (VL_valorBruto != 0) {
-                DecimalFormat fmt = new DecimalFormat("0.00");   //limita o número de casas decimais
-                String string = fmt.format(VL_valorBruto);
-                //String[] part = string.split("[,]");
-                //String preco = part[0]+"."+part[1];
-                VL_valorBruto = Double.parseDouble(string.replace(",", "."));
+    protected void suBuscaPrecosCliente(String item){
+
+        ctl_Pedidos = new CTL_Pedidos(getApplicationContext(), cl_Pedidos);
+
+        String vf_CdCliente = ctl_Pedidos.fuBuscarCdClientePedido();
+
+        CL_Clientes cl_Cliente = new CL_Clientes();
+        cl_Cliente.setCdCliente(vf_CdCliente);
+
+        CTL_Clientes ctl_Clientes = new CTL_Clientes(getApplicationContext(), cl_Cliente);
+        if(ctl_Clientes.fuSelecionarCliente()){
+            String vf_Classificacao = "";
+            if (cl_Cliente.getClassificacao().trim().equals("")) {
+                vf_Classificacao = "N";
+            } else {
+                vf_Classificacao = cl_Cliente.getClassificacao();
             }
-            if (VA_vlUnitarioProduto < VL_valorBruto) {
 
-                try {
-                    double VA_VlUnitarioNovo = Double.parseDouble(tb_valorUnitarioProduto.getText().toString().trim());
-                    if (VA_VlUnitarioNovo - VL_valorBruto < 0) {
+            cl_Produto = new CL_Produtos();
+            cl_Produto.setCdProduto(tb_codigoProduto.getText().toString());
 
-                        try {
-                            Cursor cursor = crud.carregaProdutosById(Integer.parseInt(codigo));
+            CTL_Produtos ctl_Produtos = new CTL_Produtos(getApplicationContext(), cl_Produto);
 
-                            double valorBruto = Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)).replace(",", "."));
-                            double valorLiquido = valorBruto - VA_VlUnitarioNovo;
+            if(ctl_Produtos.fuCarregaProdutoCdProduto()) {
 
-                            double porcentagem = ((valorBruto - valorLiquido) / valorBruto) * 100;
-                            porcentagem = 100 - porcentagem;
+                if (cl_Cliente.getFidelidade().equals("S")) {
 
-                            if (porcentagem > percdescmaxvendedor) {
-                                MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Desconto informado é maior que o permitido!");
-                                tb_valorUnitarioProduto.setText(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)));
-                                return false;
-                            } else {
-                                tb_descontoProduto.setText(String.format("%.5f", 100 - porcentagem).replace(",", "."));
-                            }
+                    try {
+                        percdescmaxvendedor = Double.parseDouble(cl_Produto.getDescMaxPermitidoFidelidade());
+                    } catch (Exception e) {
+                        percdescmaxvendedor = 0;
+                    }
+                } else if (vf_Classificacao.equals("N")) {
+                    try {
+                        percdescmaxvendedor = Double.parseDouble(cl_Produto.getDescMaxPermitido());
+                    } catch (Exception e) {
+                        percdescmaxvendedor = 0;
+                    }
+                } else {
+                    try {
+                        if (vf_Classificacao.equals("A")) {
 
-                        } catch (Exception e) {
+                            percdescmaxvendedor = Double.parseDouble(cl_Produto.getDescMaxPermitidoA());
+                            percDescontoClassificacao = Double.parseDouble(cl_Produto.getDescMaxPermitidoA());
 
-                        }
+                        } else if (vf_Classificacao.equals("B")) {
+
+                            percdescmaxvendedor = Double.parseDouble(cl_Produto.getDescMaxPermitidoB());
+                            percDescontoClassificacao = Double.parseDouble(cl_Produto.getDescMaxPermitidoB());
+
+                        } else if (vf_Classificacao.equals("C")) {
+
+                            percdescmaxvendedor = Double.parseDouble(cl_Produto.getDescMaxPermitidoC());
+                            percDescontoClassificacao = Double.parseDouble(cl_Produto.getDescMaxPermitidoC());
+
+                        } else if (vf_Classificacao.equals("D")) {
 
-                    } else {
-                        tb_descontoProduto.setText("");
+                            percdescmaxvendedor = Double.parseDouble(cl_Produto.getDescMaxPermitidoD());
+                            percDescontoClassificacao = Double.parseDouble(cl_Produto.getDescMaxPermitidoD());
+
+                        } else if (vf_Classificacao.equals("E")) {
+
+                            percdescmaxvendedor = Double.parseDouble(cl_Produto.getDescMaxPermitidoE());
+                            percDescontoClassificacao = Double.parseDouble(cl_Produto.getDescMaxPermitidoE());
+
+                        }
+                    } catch (Exception e) {
+                        percdescmaxvendedor = 0;
+                        percDescontoClassificacao = 0;
                     }
+                }
+            }
+        }
+
+        if(item.equals("N")){
+
+            if (ctl_Clientes.fuBuscaTipoPrecoCliente().equals("A")) {
+                CL_Produtos vf_Cl_Produto = new CL_Produtos();
+                vf_Cl_Produto.setCdProduto(tb_codigoProduto.getText().toString());
 
-                    double valorLiquido = VL_valorBruto - Double.parseDouble(tb_valorUnitarioProduto.getText().toString().replace(",", "."));
+                CTL_Produtos ctl_Produtos = new CTL_Produtos(getApplicationContext(), cl_Produto);
 
-                    double porcentagem = ((VL_valorBruto - valorLiquido) / VL_valorBruto) * 100;
-                    tb_descontoProduto.setText(String.format("%.5f", 100 - porcentagem).replace(",", "."));
-                    VA_descontoProduto = 100 - porcentagem;
-                    tb_valorUnitarioProduto.setText(String.format("%.2f", VL_valorBruto).replace(".", "").replace(",", "."));
+                String vf_VlAtacado = ctl_Produtos.fuBuscaValorAtacado();
 
+                try {
+                    if (!vf_VlAtacado.equals("null")) {
+                        tb_valorUnitarioProduto.setText(vf_VlAtacado);
+
+                        String valorProduto = tb_valorUnitarioProduto.getText().toString();
+                        String valor = String.format("%.2f", Double.parseDouble(valorProduto));
+                        tb_valorUnitarioProduto.setText(valor.replace(",", "."));
+                        VL_valorBruto = Double.parseDouble(tb_valorUnitarioProduto.getText().toString());
+                    }
                 } catch (Exception e) {
-                    e.printStackTrace();
+                    tb_valorUnitarioProduto.setText("0.00");
                 }
-            }else if(VA_vlUnitarioProduto > VL_valorBruto){
-                tb_descontoProduto.setText("0");
-                VA_descontoProduto = 0;
-            }else{
-                //tb_descontoProduto.setText("0");
             }
-        }catch (Exception e){
-            MensagemUtil.addMsg(ManutencaoProdutoPedido.this, e.getMessage());
         }
+    }
 
-        /*if (VA_descontoProduto > 99) {
-            MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Não é permitido incluir um produto com o desconto superior a 99%!");
-            return false;
-        }*/
+    protected void suVerificaItemPedido(){
 
-        if(VA_descontoProduto > percdescmaxvendedor){
-            MensagemUtil.addMsg(ManutencaoProdutoPedido.this, "Desconto informado é maior que o permitido!");
-            return false;
+        cl_ItemPedido.setCdProduto(cl_Produto.getCdProduto());
+
+        ctl_ItemPedido = new CTL_ItemPedido(getApplicationContext(), cl_ItemPedido);
+
+
+        if(ctl_ItemPedido.fuCarregaItemPedidoCdProduto()){
+
+            Cursor rs_ItemPedido = ctl_ItemPedido.rs_ItemPedido;
+
+            while (!rs_ItemPedido.isAfterLast()) {
+
+                try {
+                    tb_quantidadeProduto.setText(cl_ItemPedido.getQtde());
+                } catch (Exception e) {
+                    tb_quantidadeProduto.setText("0");
+                }
+                try {
+                   tb_descontoProduto.setText(cl_ItemPedido.getPercDesconto());
+                } catch (Exception e) {
+                    tb_descontoProduto.setText("0");
+                }
+                try {
+                    tb_valorUnitarioProduto.setText(cl_ItemPedido.getVlUnitario());
+
+                    String valorProduto = tb_valorUnitarioProduto.getText().toString();
+                    String valor = String.format("%.2f", Double.parseDouble(valorProduto));
+                    tb_valorUnitarioProduto.setText(valor.replace(",", "."));
+                } catch (Exception e) {
+                    tb_valorUnitarioProduto.setText("0.00");
+                }
+
+                try {
+                    tb_valorUnitarioProduto.setText(cl_ItemPedido.getVlLiquido());
+                    String valorLiquido = String.format("%.2f", Double.parseDouble(tb_valorUnitarioProduto.getText().toString()));
+                    tb_valorUnitarioProduto.setText(valorLiquido.replace(",", "."));
+                } catch (Exception e) {
+                    tb_valorUnitarioProduto.setText("0");
+                }
+
+                vc_Operacao = "A";
+                lb_produtoAdicionado.setVisibility(View.VISIBLE);
+
+                rs_ItemPedido.moveToNext();
+            }
+
+        } else {
+            vc_Operacao = "I";
         }
-        return true;
     }
 
-
 }
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/MoneyTextWatcher.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/MoneyTextWatcher.java
new file mode 100644
index 0000000..07edfa4
--- /dev/null
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/MoneyTextWatcher.java
@@ -0,0 +1,64 @@
+package com.example.desenvolvimento.navigationdrawercomercioexpress;
+
+
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.widget.EditText;
+
+import java.lang.ref.WeakReference;
+import java.math.BigDecimal;
+import java.text.NumberFormat;
+import java.util.Locale;
+
+public class MoneyTextWatcher implements TextWatcher {
+    private final WeakReference<EditText> editTextWeakReference;
+    private final Locale locale;
+
+    public MoneyTextWatcher(EditText editText, Locale locale) {
+        this.editTextWeakReference = new WeakReference<EditText>(editText);
+        this.locale = locale != null ? locale : Locale.getDefault();
+    }
+
+    public MoneyTextWatcher(EditText editText) {
+        this.editTextWeakReference = new WeakReference<EditText>(editText);
+        this.locale = Locale.getDefault();
+    }
+
+    @Override
+    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+
+    }
+
+    @Override
+    public void onTextChanged(CharSequence s, int start, int before, int count) {
+
+    }
+
+    @Override
+    public void afterTextChanged(Editable editable) {
+        EditText editText = editTextWeakReference.get();
+        if (editText == null) return;
+        editText.removeTextChangedListener(this);
+
+
+        BigDecimal parsed = parseToBigDecimal(editable.toString(), locale);
+        //String formatted = NumberFormat.getCurrencyInstance(locale).format(parsed);
+        String formatted = String.valueOf(parsed).replace(".", ",");
+
+
+        editText.setText(formatted);
+        editText.setSelection(formatted.length());
+        editText.addTextChangedListener(this);
+
+    }
+
+    private BigDecimal parseToBigDecimal(String value, Locale locale) {
+        String replaceable = String.format("[%s,.\\s]", NumberFormat.getCurrencyInstance(locale).getCurrency().getSymbol());
+
+        String cleanString = value.replaceAll(replaceable, "");
+
+        return new BigDecimal(cleanString).setScale(
+                2, BigDecimal.ROUND_FLOOR).divide(new BigDecimal(100), BigDecimal.ROUND_FLOOR
+        );
+    }
+}
\ No newline at end of file
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Opcoes.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Opcoes.java
index 87a2d64..c6728fc 100755
--- a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Opcoes.java
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Opcoes.java
@@ -203,35 +203,34 @@ public class Opcoes extends AppCompatActivity
         // Handle navigation view item clicks here.
         int id = item.getItemId();
 
-        if (id == R.id.nav_camara) {
-            // Handle the camera action
+        if (id == R.id.nav_clientes) {
             Intent secondActivity;
             secondActivity = new Intent(Opcoes.this, HomeActivity.class);
             startActivity(secondActivity);
-
-        } else if (id == R.id.nav_gallery) {
+            // Handle the camera action
+        } else if (id == R.id.nav_pedidos) {
             Intent secondActivity;
             secondActivity = new Intent(Opcoes.this, Pedidos.class);
             startActivity(secondActivity);
 
-        }
-        else if (id == R.id.nav_slideshow) {
+
+        } else if (id == R.id.nav_produtos) {
             Intent secondActivity;
             secondActivity = new Intent(Opcoes.this, Produtos.class);
             secondActivity.putExtra("selecaoProdutos", "N");
             startActivity(secondActivity);
 
-        } else if (id == R.id.nav_share) {
+        } else if (id == R.id.nav_opcoes) {
             Intent secondActivity;
             secondActivity = new Intent(Opcoes.this, Opcoes.class);
             startActivity(secondActivity);
 
-        }/* else if (id == R.id.nav_send) {
+        } else if (id == R.id.nav_visaogeral) {
             Intent secondActivity;
-            secondActivity = new Intent(Opcoes.this, Sincronizar.class);
+            secondActivity = new Intent(Opcoes.this, VisaoGeralNova.class);
             startActivity(secondActivity);
 
-        }*/
+        }
 
         DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
         drawer.closeDrawer(GravityCompat.START);
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Oppening.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Oppening.java
index edfb986..1185e9f 100755
--- a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Oppening.java
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Oppening.java
@@ -2,8 +2,17 @@ package com.example.desenvolvimento.navigationdrawercomercioexpress;
 
 import android.content.Intent;
 import android.database.Cursor;
+import android.support.v4.app.ActivityCompat;
+import android.support.v4.app.ActivityOptionsCompat;
 import android.support.v7.app.AppCompatActivity;
 import android.os.Bundle;
+import android.view.View;
+import android.view.animation.AccelerateInterpolator;
+import android.view.animation.AlphaAnimation;
+import android.view.animation.Animation;
+import android.view.animation.AnimationSet;
+import android.view.animation.DecelerateInterpolator;
+import android.widget.ImageView;
 import android.widget.Toast;
 import java.util.Timer;
 import java.util.TimerTask;
@@ -16,27 +25,135 @@ public class Oppening extends AppCompatActivity {
     private TimerTask task;
     private final Handler handler = new Handler();
 
+    Timer timer;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_oppening);
 
-        BancoController crud = new BancoController(getBaseContext());
-        try {
-            try{
-                Cursor cursor = crud.carregaObsCliente();
-                //String obsCliente = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.OBSCLIENTE));
-            }catch (Exception e) {
-                crud.alteraTabelaCliente();
+        View decorView = getWindow().getDecorView();
+
+        int uiOptions = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
+                | View.SYSTEM_UI_FLAG_FULLSCREEN;
+        decorView.setSystemUiVisibility(uiOptions);
+
+        ImageView demoImage = (ImageView) findViewById(R.id.img_LogoCentro);
+        int imagesToShow[] = { R.drawable.logo_expres_mobile, R.drawable.logoplano};
+
+        animate(demoImage, imagesToShow, 0,false);
+
+        Timer();
+
+
+    }
+
+    private void animate(final ImageView imageView, final int images[], final int imageIndex, final boolean forever) {
+
+        //imageView <-- The View which displays the images
+        //images[] <-- Holds R references to the images to display
+        //imageIndex <-- index of the first image to show in images[]
+        //forever <-- If equals true then after the last image it starts all over again with the first image resulting in an infinite loop. You have been warned.
+
+        int fadeInDuration = 500; // Configure time values here
+        int timeBetween = 1000;
+        int fadeOutDuration = 500;
+
+        imageView.setVisibility(View.INVISIBLE);    //Visible or invisible by default - this will apply when the animation ends
+        imageView.setImageResource(images[imageIndex]);
+
+        Animation fadeIn = new AlphaAnimation(0, 1);
+        fadeIn.setInterpolator(new DecelerateInterpolator()); // add this
+        fadeIn.setDuration(fadeInDuration);
+
+        Animation fadeOut = new AlphaAnimation(1, 0);
+        fadeOut.setInterpolator(new AccelerateInterpolator()); // and this
+        fadeOut.setStartOffset(fadeInDuration + timeBetween);
+        fadeOut.setDuration(fadeOutDuration);
+
+        AnimationSet animation = new AnimationSet(false); // change to false
+        animation.addAnimation(fadeIn);
+        animation.addAnimation(fadeOut);
+        animation.setRepeatCount(1);
+        imageView.setAnimation(animation);
+
+        animation.setAnimationListener(new Animation.AnimationListener() {
+            public void onAnimationEnd(Animation animation) {
+                if (images.length - 1 > imageIndex) {
+                    animate(imageView, images, imageIndex + 1,forever); //Calls itself until it gets to the end of the array
+                }
+                else {
+                    if (forever){
+                        animate(imageView, images, 0,forever);  //Calls itself to start the animation all over again in a loop if forever = true
+                    }
+                }
+            }
+            public void onAnimationRepeat(Animation animation) {
+                // TODO Auto-generated method stub
+            }
+            public void onAnimationStart(Animation animation) {
+                // TODO Auto-generated method stub
             }
+        });
+    }
+
+    public void Timer(){
+        timer = new Timer();
+        Task task = new Task();
+
+        timer.schedule(task, 2600, 2600);
+    }
+
+    class Task extends TimerTask {
 
-            ativaTimer();
-        }catch (Exception e){
-            MensagemUtil.addMsg(Oppening.this, e.getMessage());
+        @Override
+        public void run() {
+            runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+                    timer.cancel();
+                    timer.purge();
+
+                    try {
+                        BancoController crud = new BancoController(getBaseContext());
+                        String validou = crud.validaLogin();
+
+
+
+                        if (validou.equals("N")) {
+                            Intent secondActivity;
+                            secondActivity = new Intent(Oppening.this, LoginActivity.class);
+                            startActivity(secondActivity);
+                            timerAtual.cancel();
+                        } else {
+                            try{
+                                //crud.possuiFilialSincronizada();
+                                Intent secondActivity;
+                                secondActivity = new Intent(Oppening.this, Pedidos.class);
+                                //startActivity(secondActivity);
+                                ActivityOptionsCompat activityOptionsCompat = ActivityOptionsCompat.makeCustomAnimation(getApplicationContext(), R.anim.fadeout, R.anim.fadeout);
+                                ActivityCompat.startActivity(Oppening.this, secondActivity, activityOptionsCompat.toBundle());
+
+                            }catch (Exception e){
+                                Intent secondActivity;
+                                secondActivity = new Intent(Oppening.this, Filial.class);
+                                secondActivity.putExtra("operacao", "L");
+                                //startActivity(secondActivity);
+                                ActivityOptionsCompat activityOptionsCompat = ActivityOptionsCompat.makeCustomAnimation(getApplicationContext(), R.anim.fadeout, R.anim.fadeout);
+                                ActivityCompat.startActivity(Oppening.this, secondActivity, activityOptionsCompat.toBundle());
+                            }
+                        }
+
+                    }catch (Exception e){
+                        Toast.makeText(getApplicationContext(), e.getMessage(), Toast.LENGTH_LONG).show();
+                    }
+                }
+
+            });
         }
     }
 
-    private void ativaTimer(){
+    /*private void ativaTimer(){
         task = new TimerTask() {
             public void run() {
                 handler.post(new Runnable() {
@@ -77,5 +194,5 @@ public class Oppening extends AppCompatActivity {
             }};
 
         timerAtual.schedule(task, 1000, 1000);
-    }
+    }*/
 }
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Pedidos.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Pedidos.java
index 6ec12f7..e24227b 100755
--- a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Pedidos.java
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Pedidos.java
@@ -33,6 +33,8 @@ import android.widget.SimpleCursorAdapter;
 import android.widget.TextView;
 import android.widget.Toast;
 
+import com.miguelcatalan.materialsearchview.MaterialSearchView;
+
 import org.apache.http.HttpVersion;
 import org.apache.http.NameValuePair;
 import org.apache.http.client.ClientProtocolException;
@@ -66,10 +68,17 @@ import java.util.Date;
 import java.util.HashMap;
 import java.util.List;
 
+import classes.CL_ItemPedido;
+import classes.CL_Pedidos;
+import controllers.CTL_ItemPedido;
+import controllers.CTL_Pedidos;
+import sync.SYNC_Pedidos;
+
 public class Pedidos extends AppCompatActivity
         implements NavigationView.OnNavigationItemSelectedListener {
 
-    private final static String SERVICE_URI = "";
+    CL_Pedidos cl_Pedidos;
+    CTL_Pedidos ctl_Pedidos;
 
     private ListView lista;
 
@@ -82,6 +91,12 @@ public class Pedidos extends AppCompatActivity
 
     String codigo_lista;
 
+    MaterialSearchView sv_Pedidos;
+
+    MenuItem me_ExcluirPedidos;
+    MenuItem me_Sincronizar;
+    MenuItem me_BuscarPedido;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -89,6 +104,9 @@ public class Pedidos extends AppCompatActivity
         Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
 
+        sv_Pedidos = (MaterialSearchView) findViewById(R.id.sv_Pedidos);
+        sv_Pedidos.setVoiceSearch(true); //or false
+
         FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
         fab.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -96,7 +114,7 @@ public class Pedidos extends AppCompatActivity
                 Intent secondActivity;
                 secondActivity = new Intent(Pedidos.this, ManutencaoPedidos.class);
                 secondActivity.putExtra("operacao", "I");
-                startActivity(secondActivity);
+                startActivityForResult(secondActivity, 1);
             }
         });
 
@@ -114,420 +132,113 @@ public class Pedidos extends AppCompatActivity
             StrictMode.setThreadPolicy(policy);
         }
 
+        cl_Pedidos = new CL_Pedidos();
+        ctl_Pedidos = new CTL_Pedidos(getApplicationContext(), cl_Pedidos);
+
         FU_CalculaPrazoSincronizacao();
+        suCarregarPedidos("");
 
-        try {
-            BancoController crud = new BancoController(getBaseContext());
-            final Cursor cursor = crud.carregaTodosPedidos();
-
-            String[] nomeCamposPedidos = new String[]{CriaBanco.ID, CriaBanco.FGSITUACAO, CriaBanco.RZSOCIAL};
-            int[] idViewsPedidos = new int[]{R.id.numPedido, R.id.situacaoPedido, R.id.clientepedido};
-
-            SimpleCursorAdapter adaptadorPedidos = new SimpleCursorAdapter(getBaseContext(), R.layout.listviewpedidos, cursor, nomeCamposPedidos, idViewsPedidos, 0);
-            lista = (ListView) findViewById(R.id.listViewPedidos);
-            lista.setAdapter(adaptadorPedidos);
-
-            lista.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
-                     @Override
-                     public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {
-                         final String codigo, situacao;
-                         cursor.moveToPosition(position);
-                         codigo = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.ID));
-                         situacao = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.FGSITUACAO));
-
-                         //Lista de itens
-                             ArrayList<String> itens = new ArrayList<String>();
-
-                             itens.add("Consultar");
-                             itens.add("Enviar Online");
-                             itens.add("Cancelar Pedido");
-                             itens.add("Excluir");
-                             itens.add("Sair");
-
-                             //adapter utilizando um layout customizado (TextView)
-                             ArrayAdapter adapter = new ArrayAdapter(getBaseContext(), R.layout.item_alerta, itens);
-
-                             AlertDialog.Builder builder = new AlertDialog.Builder(Pedidos.this);
-                             builder.setTitle("O que você deseja fazer com o pedido nº" + codigo + "? ");
-                             //define o diálogo como uma lista, passa o adapter.
-                             builder.setSingleChoiceItems(adapter, 0, new DialogInterface.OnClickListener() {
-                                 public void onClick(DialogInterface arg0, int arg1) {
-                                     if (arg1 == 0) {
-                                         Intent intent = new Intent(Pedidos.this, ManutencaoPedidos.class);
-                                         intent.putExtra("operacao", "A");
-                                         intent.putExtra("codigo", codigo);
-                                         startActivity(intent);
-                                     } else if (arg1 == 1) {
-
-                                         //MensagemUtil.addMsg(Pedidos.this, "Foi clicado para enviar online");
-                                         if(situacao.equals("ENVIADO")) {
-                                             MensagemUtil.addMsg(Pedidos.this, "Pedido já foi enviado para o sistema online.");
-                                         }else if(situacao.equals("CANCELADO")){
-                                             MensagemUtil.addMsg(Pedidos.this, "Pedido não pode ser enviado, pois o pedido foi cancelado!");
-                                         }else {
-                                             try {
-                                                 if (FU_ConsisteEnviarOnline(codigo)) {
-                                                     alerta.dismiss();
-                                                     codigo_lista = codigo;
-
-                                                     new LoadingAsyncOpcoes().execute();
-                                                     /*FU_EnviarPedido(codigo);
-                                                     BancoController crud = new BancoController(getBaseContext());
-                                                     crud.alteraSituacaoPedido(codigo, "ENVIADO");
-                                                     MensagemUtil.addMsg(Pedidos.this, "Pedido enviado com sucesso!");
-                                                     Intent intent = new Intent(Pedidos.this, Pedidos.class);
-                                                     startActivity(intent);*/
+        final TextView lb_TituloPedidos = (TextView) findViewById(R.id.lb_TituloPedidos);
 
-                                                 }
-                                             } catch (Exception e) {
-                                                 MensagemUtil.addMsg(Pedidos.this, "Não foi possivel realizar o envio do pedido");
-                                             }
-                                         }
-                                     } else if (arg1 == 2) {
-                                         //MensagemUtil.addMsg(Pedidos.this, "Foi clicado para cancelar pedido");
-                                         //alerta.dismiss();
-                                         if(situacao.equals("ENVIADO")) {
-                                             MensagemUtil.addMsg(Pedidos.this, "Pedido não pode ser cancelado, pois já foi enviado para o sistema online.");
-                                         }else {
-                                             BancoController crud = new BancoController(getBaseContext());
-                                             try {
-                                                 crud.alteraSituacaoPedido(codigo, "CANCELADO");
-                                                 MensagemUtil.addMsg(Pedidos.this, "Pedido cancelado com sucesso!");
-                                                 Intent intent = new Intent(Pedidos.this, Pedidos.class);
-                                                 startActivity(intent);
-                                             } catch (Exception e) {
-                                                 MensagemUtil.addMsg(Pedidos.this, "Não foi possivel cancelar o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
-                                             }
-                                         }
-
-                                     } else if (arg1 == 3) {
-                                         //MensagemUtil.addMsg(Pedidos.this, "Foi clicado para excluir pedido");
-                                         BancoController crud = new BancoController(getBaseContext());
-                                         try {
-                                             crud.deletaPedido(Integer.parseInt(codigo));
-                                             MensagemUtil.addMsg(Pedidos.this, "Pedido excluido com sucesso!");
-                                             Intent intent = new Intent(Pedidos.this, Pedidos.class);
-                                             startActivity(intent);
-                                         } catch (Exception e) {
-                                             MensagemUtil.addMsg(Pedidos.this, "Não foi possivel excluir o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
-                                         }
-                                     } else if (arg1 == 4) {
-                                         alerta.dismiss();
-                                     }
-
-                                 }
-                             });
-
-                         /*if(situacao.substring(0, 1).equals("A")) {
-
-                         }else if(situacao.substring(0, 1).equals("E")){
-                             ArrayList<String> itens = new ArrayList<String>();
-
-                             itens.add("Consultar");
-                             itens.add("Excluir");
-                             itens.add("Sair");
-
-                             //adapter utilizando um layout customizado (TextView)
-                             ArrayAdapter adapter = new ArrayAdapter(getBaseContext(), R.layout.item_alerta, itens);
-
-                             AlertDialog.Builder builder = new AlertDialog.Builder(Pedidos.this);
-                             builder.setTitle("O que você deseja fazer com o pedido nº" + codigo + "? ");
-                             //define o diálogo como uma lista, passa o adapter.
-                             builder.setSingleChoiceItems(adapter, 0, new DialogInterface.OnClickListener() {
-                                 public void onClick(DialogInterface arg0, int arg1) {
-                                     if (arg1 == 0) {
-                                         Intent intent = new Intent(Pedidos.this, ManutencaoPedidos.class);
-                                         intent.putExtra("operacao", "A");
-                                         intent.putExtra("codigo", codigo);
-                                         startActivity(intent);
-                                     } else if (arg1 == 1) {
-                                         //MensagemUtil.addMsg(Pedidos.this, "Foi clicado para excluir pedido");
-                                         BancoController crud = new BancoController(getBaseContext());
-                                         try {
-                                             crud.deletaPedido(Integer.parseInt(codigo));
-                                             MensagemUtil.addMsg(Pedidos.this, "Pedido excluido com sucesso!");
-                                             Intent intent = new Intent(Pedidos.this, Pedidos.class);
-                                             startActivity(intent);
-                                         } catch (Exception e) {
-                                             MensagemUtil.addMsg(Pedidos.this, "Não foi possivel excluir o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
-                                         }
-                                     } else if (arg1 == 2) {
-                                         alerta.dismiss();
-                                     }
-
-                                 }
-                             });
-                         }else if(situacao.substring(0, 1).equals("C")){
-                             ArrayList<String> itens = new ArrayList<String>();
-
-                             itens.add("Consultar");
-                             itens.add("Excluir");
-                             itens.add("Sair");
-
-                             //adapter utilizando um layout customizado (TextView)
-                             ArrayAdapter adapter = new ArrayAdapter(getBaseContext(), R.layout.item_alerta, itens);
-
-                             AlertDialog.Builder builder = new AlertDialog.Builder(Pedidos.this);
-                             builder.setTitle("O que você deseja fazer com o pedido nº" + codigo + "? ");
-                             //define o diálogo como uma lista, passa o adapter.
-                             builder.setSingleChoiceItems(adapter, 0, new DialogInterface.OnClickListener() {
-                                 public void onClick(DialogInterface arg0, int arg1) {
-                                     if (arg1 == 0) {
-                                         Intent intent = new Intent(Pedidos.this, ManutencaoPedidos.class);
-                                         intent.putExtra("operacao", "A");
-                                         intent.putExtra("codigo", codigo);
-                                         startActivity(intent);
-                                     } else if (arg1 == 1) {
-                                         //MensagemUtil.addMsg(Pedidos.this, "Foi clicado para excluir pedido");
-                                         BancoController crud = new BancoController(getBaseContext());
-                                         try {
-                                             crud.deletaPedido(Integer.parseInt(codigo));
-                                             MensagemUtil.addMsg(Pedidos.this, "Pedido excluido com sucesso!");
-                                             Intent intent = new Intent(Pedidos.this, Pedidos.class);
-                                             startActivity(intent);
-                                         } catch (Exception e) {
-                                             MensagemUtil.addMsg(Pedidos.this, "Não foi possivel excluir o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
-                                         }
-                                     } else if (arg1 == 2) {
-                                         alerta.dismiss();
-                                     }
-
-                                 }
-                             });
-                         }*/
-
-
-
-                         alerta = builder.create();
-                         alerta.show();
-
-
-
-                         /*if(situacao.substring(0, 1).equals("A")) {
-
-
-                             //define o titulo
-                             builder.setTitle("Enviar Pedido!");
-                             //define a mensagem
-                             builder.setMessage("Você deseja enviar o pedido online?");
-
-                             //define um botão como positivo
-                             builder.setPositiveButton("Sim", new DialogInterface.OnClickListener() {
-                                 public void onClick(DialogInterface arg0, int arg1) {
-                                     //Toast.makeText(ManutencaoProdutoPedido.this, "positivo=" + arg1, Toast.LENGTH_SHORT).show();
-                                     try {
-                                         //if(FU_ConsisteEnviarOnline(codigo)) {
-                                             //FU_EnviarPedido(codigo);
-                                             //BancoController crud = new BancoController(getBaseContext());
-                                             //crud.alteraSituacaoPedido(codigo, "ENVIADO");
-                                             MensagemUtil.addMsg(Pedidos.this, "Pedido enviado com sucesso!");
-                                             Intent intent = new Intent(Pedidos.this, Pedidos.class);
-                                             startActivity(intent);
-
-                                         //}
-                                     }catch (Exception e){
-                                         MensagemUtil.addMsg(Pedidos.this, "Não foi possivel realizar o envio do pedido");
-                                     }
-                                 }
-
-                             });
-
-                             builder.setNegativeButton("Não", new DialogInterface.OnClickListener() {
-                                 public void onClick(DialogInterface arg0, int arg1) {
-                                     //Toast.makeText(ManutencaoProdutoPedido.this, "negativo=" + arg1, Toast.LENGTH_SHORT).show();
-                                 }
-                             });
-                             return true;
-                         }else{
-                             MensagemUtil.addMsg(Pedidos.this, "Pedido não pode ser enviado online, pois ele já foi enviado ou cancelado!");
-                             return false;
-                         }*/
-                         return true;
-                     }
-                 }
-
-            );
-
-            lista.setOnItemClickListener(new AdapterView.OnItemClickListener()
-
-                                         {
-
-                                             @Override
-                                             public void onItemClick(AdapterView<?> parent, View view, int position,
-                                                                     long id) {
-                                                 String codigo;
-                                                 cursor.moveToPosition(position);
-                                                 codigo = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.ID));
-                                                 Intent intent = new Intent(Pedidos.this, ManutencaoPedidos.class);
-                                                 intent.putExtra("operacao", "A");
-                                                 intent.putExtra("codigo", codigo);
-                                                 startActivity(intent);
-                                             }
-                                         }
+        sv_Pedidos.setOnQueryTextListener(new MaterialSearchView.OnQueryTextListener() {
+            @Override
+            public boolean onQueryTextSubmit(String query) {
+                return false;
+            }
 
-            );
+            @Override
+            public boolean onQueryTextChange(String vf_Nome) {
 
-        }catch (Exception e){
-            MensagemUtil.addMsg(Pedidos.this, e.getMessage().toString());
-        }
+                suCarregarPedidos(vf_Nome);
+
+                return false;
+            }
+        });
 
-        final EditText tb_buscarpedido = (EditText)findViewById(R.id.tb_buscarclienteSelecaoPedidos);
+        sv_Pedidos.setOnSearchViewListener(new MaterialSearchView.SearchViewListener() {
 
-        tb_buscarpedido.addTextChangedListener(new TextWatcher() {
             @Override
-            public void onTextChanged(CharSequence s, int start, int before, int count) {
+            public void onSearchViewShown() {
+                //Do some magic
+                me_ExcluirPedidos.setVisible(false);
+                me_Sincronizar.setVisible(false);
+                me_BuscarPedido.setVisible(false);
 
-                try {
-                    BancoController crud = new BancoController(getBaseContext());
-                    final Cursor cursor = crud.carregaTodosPedidosByCliente(tb_buscarpedido.getText().toString());
-
-                    String[] nomeCamposPedidos = new String[]{CriaBanco.ID, CriaBanco.FGSITUACAO, CriaBanco.RZSOCIAL};
-                    int[] idViewsPedidos = new int[]{R.id.numPedido, R.id.situacaoPedido, R.id.clientepedido};
-
-                    SimpleCursorAdapter adaptadorPedidos = new SimpleCursorAdapter(getBaseContext(), R.layout.listviewpedidos, cursor, nomeCamposPedidos, idViewsPedidos, 0);
-                    lista = (ListView) findViewById(R.id.listViewPedidos);
-                    lista.setAdapter(adaptadorPedidos);
-
-                    lista.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
-                             @Override
-                             public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {
-                                 final String codigo, situacao;
-                                 cursor.moveToPosition(position);
-                                 codigo = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.ID));
-                                 situacao = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.FGSITUACAO));
-
-                                 //Lista de itens
-                                 ArrayList<String> itens = new ArrayList<String>();
-
-                                 itens.add("Consultar");
-                                 itens.add("Enviar Online");
-                                 itens.add("Cancelar Pedido");
-                                 itens.add("Excluir");
-                                 itens.add("Sair");
-
-                                 //adapter utilizando um layout customizado (TextView)
-                                 ArrayAdapter adapter = new ArrayAdapter(getBaseContext(), R.layout.item_alerta, itens);
-
-                                 AlertDialog.Builder builder = new AlertDialog.Builder(Pedidos.this);
-                                 builder.setTitle("O que você deseja fazer com o pedido nº" + codigo + "? ");
-                                 //define o diálogo como uma lista, passa o adapter.
-                                 builder.setSingleChoiceItems(adapter, 0, new DialogInterface.OnClickListener() {
-                                     public void onClick(DialogInterface arg0, int arg1) {
-                                         if (arg1 == 0) {
-                                             Intent intent = new Intent(Pedidos.this, ManutencaoPedidos.class);
-                                             intent.putExtra("operacao", "A");
-                                             intent.putExtra("codigo", codigo);
-                                             startActivity(intent);
-                                         } else if (arg1 == 1) {
-
-                                             //MensagemUtil.addMsg(Pedidos.this, "Foi clicado para enviar online");
-                                             if (situacao.equals("ENVIADO")) {
-                                                 MensagemUtil.addMsg(Pedidos.this, "Pedido já foi enviado para o sistema online.");
-                                             } else if (situacao.equals("CANCELADO")) {
-                                                 MensagemUtil.addMsg(Pedidos.this, "Pedido não pode ser enviado, pois o pedido foi cancelado!");
-                                             } else {
-                                                 try {
-                                                     if (FU_ConsisteEnviarOnline(codigo)) {
-                                                         alerta.dismiss();
-                                                         codigo_lista = codigo;
-
-                                                         new LoadingAsyncOpcoes().execute();
-                         /*FU_EnviarPedido(codigo);
-                         BancoController crud = new BancoController(getBaseContext());
-                         crud.alteraSituacaoPedido(codigo, "ENVIADO");
-                         MensagemUtil.addMsg(Pedidos.this, "Pedido enviado com sucesso!");
-                         Intent intent = new Intent(Pedidos.this, Pedidos.class);
-                         startActivity(intent);*/
+                lb_TituloPedidos.setWidth(0);
 
-                                                     }
-                                                 } catch (Exception e) {
-                                                     MensagemUtil.addMsg(Pedidos.this, "Não foi possivel realizar o envio do pedido");
-                                                 }
-                                             }
-                                         } else if (arg1 == 2) {
-                                             //MensagemUtil.addMsg(Pedidos.this, "Foi clicado para cancelar pedido");
-                                             //alerta.dismiss();
-                                             if (situacao.equals("ENVIADO")) {
-                                                 MensagemUtil.addMsg(Pedidos.this, "Pedido não pode ser cancelado, pois já foi enviado para o sistema online.");
-                                             } else {
-                                                 BancoController crud = new BancoController(getBaseContext());
-                                                 try {
-                                                     crud.alteraSituacaoPedido(codigo, "CANCELADO");
-                                                     MensagemUtil.addMsg(Pedidos.this, "Pedido cancelado com sucesso!");
-                                                     Intent intent = new Intent(Pedidos.this, Pedidos.class);
-                                                     startActivity(intent);
-                                                 } catch (Exception e) {
-                                                     MensagemUtil.addMsg(Pedidos.this, "Não foi possivel cancelar o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
-                                                 }
-                                             }
+            }
 
-                                         } else if (arg1 == 3) {
-                                             //MensagemUtil.addMsg(Pedidos.this, "Foi clicado para excluir pedido");
-                                             BancoController crud = new BancoController(getBaseContext());
-                                             try {
-                                                 crud.deletaPedido(Integer.parseInt(codigo));
-                                                 MensagemUtil.addMsg(Pedidos.this, "Pedido excluido com sucesso!");
-                                                 Intent intent = new Intent(Pedidos.this, Pedidos.class);
-                                                 startActivity(intent);
-                                             } catch (Exception e) {
-                                                 MensagemUtil.addMsg(Pedidos.this, "Não foi possivel excluir o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
-                                             }
-                                         } else if (arg1 == 4) {
-                                             alerta.dismiss();
-                                         }
+            @Override
+            public void onSearchViewClosed() {
+                //Do some magic
 
-                                     }
-                                 });
+                //vc_RazaoSocialNome = "";
+                //su_AtualizarListaFiltros();
 
+                me_ExcluirPedidos.setVisible(true);
+                me_Sincronizar.setVisible(true);
+                me_BuscarPedido.setVisible(true);
 
-                                 alerta = builder.create();
-                                 alerta.show();
+                lb_TituloPedidos.setWidth(550);
+            }
+        });
 
+    }
 
-                                 return true;
-                             }
-                         }
+    protected void suCarregarPedidos(String nomeRazaoSocial){
 
-                    );
+        String vf_NomeRazaoSocial = nomeRazaoSocial;
 
-                    lista.setOnItemClickListener(new AdapterView.OnItemClickListener()
+        try {
+            if(ctl_Pedidos.fuCarregaTodosPedidos(vf_NomeRazaoSocial)) {
+
+                final Cursor cursor = ctl_Pedidos.rs_Pedido;
+
+                String[] nomeCamposPedidos = new String[]{CriaBanco.ID, CriaBanco.FGSITUACAO, CriaBanco.RZSOCIAL};
+                int[] idViewsPedidos = new int[]{R.id.numPedido, R.id.situacaoPedido, R.id.clientepedido};
 
-                                                 {
+                SimpleCursorAdapter adaptadorPedidos = new SimpleCursorAdapter(getBaseContext(), R.layout.listviewpedidos, cursor, nomeCamposPedidos, idViewsPedidos, 0);
+                lista = (ListView) findViewById(R.id.listViewPedidos);
+                lista.setAdapter(adaptadorPedidos);
 
+                lista.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
                                                      @Override
-                                                     public void onItemClick(AdapterView<?> parent, View view, int position,
-                                                                             long id) {
-                                                         String codigo;
+                                                     public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {
+                                                         final String codigo, situacao;
                                                          cursor.moveToPosition(position);
                                                          codigo = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.ID));
-                                                         Intent intent = new Intent(Pedidos.this, ManutencaoPedidos.class);
-                                                         intent.putExtra("operacao", "A");
-                                                         intent.putExtra("codigo", codigo);
-                                                         startActivity(intent);
-                                                     }
-                                                 }
-
-                    );
+                                                         situacao = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.FGSITUACAO));
 
-                } catch (Exception e) {
-                    MensagemUtil.addMsg(Pedidos.this, e.getMessage().toString());
-                }
-
-
-            }
+                                                         suCliqueLongoLista(codigo, situacao);
 
-            @Override
-            public void beforeTextChanged(CharSequence s, int start, int count,
-                                          int after) {
-                // TODO Auto-generated method stub
-            }
+                                                         return true;
+                                                     }
+                                                 }
 
-            @Override
-            public void afterTextChanged(Editable s) {
+                );
+
+                lista.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+
+                                                 @Override
+                                                 public void onItemClick(AdapterView<?> parent, View view, int position,
+                                                                         long id) {
+                                                     String codigo;
+                                                     cursor.moveToPosition(position);
+                                                     codigo = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.ID));
+                                                     Intent intent = new Intent(Pedidos.this, ManutencaoPedidos.class);
+                                                     intent.putExtra("operacao", "A");
+                                                     intent.putExtra("codigo", codigo);
+                                                     //startActivity(intent);
+                                                     startActivityForResult(intent, 1);
+                                                 }
+                                             }
 
+                );
             }
-        });
 
+        } catch (Exception e) {
+            MensagemUtil.addMsg(Pedidos.this, e.getMessage().toString());
+        }
     }
 
     //---------------------------------------Funções para sincronização de pedidos, items de pedido e clientes novos ---------------------
@@ -1874,9 +1585,22 @@ public class Pedidos extends AppCompatActivity
     public boolean onCreateOptionsMenu(Menu menu) {
         // Inflate the menu; this adds items to the action bar if it is present.
         getMenuInflater().inflate(R.menu.pedidos, menu);
+        MenuItem item = menu.findItem(R.id.buscar_pedido);
+
+        sv_Pedidos.setMenuItem(item);
+
+        me_ExcluirPedidos = menu.findItem(R.id.action_excluirtodospedidos);
+        me_Sincronizar = menu.findItem(R.id.sincronizar_pedidos);
+        me_BuscarPedido = menu.findItem(R.id.buscar_pedido);
+
         return true;
     }
 
+    @Override
+    protected void onActivityResult(int codigo, int resultado, Intent intent) {
+        suCarregarPedidos("");
+    }
+
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         // Handle action bar item clicks here. The action bar will
@@ -1885,10 +1609,7 @@ public class Pedidos extends AppCompatActivity
 
         int id = item.getItemId();
 
-        switch (item.getItemId()) {
-
-            // Id correspondente ao botão Up/Home da actionbar
-            case R.id.action_excluirtodospedidos:
+        if (id == R.id.action_excluirtodospedidos) {
 
                 builder = new AlertDialog.Builder(this);
 
@@ -1901,29 +1622,34 @@ public class Pedidos extends AppCompatActivity
                 builder.setPositiveButton("Sim", new DialogInterface.OnClickListener() {
                     public void onClick(DialogInterface arg0, int arg1) {
                         //Toast.makeText(ManutencaoProdutoPedido.this, "positivo=" + arg1, Toast.LENGTH_SHORT).show();
-                        BancoController crud = new BancoController(getBaseContext());
                         try {
-                            Cursor cursor = crud.carregaTodosPedidos();
 
-                            if (cursor != null) {
-                                if(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.FGSITUACAO)).equals("ENVIADO")){
-                                    crud.deletaPedido(Integer.parseInt(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.ID))));
-                                }
-                                while(cursor.moveToNext()) {
-                                    if(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.FGSITUACAO)).equals("ENVIADO")){
-                                        crud.deletaPedido(Integer.parseInt(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.ID))));
-                                    }
+                            CL_Pedidos cl_Pedidos = new CL_Pedidos();
+                            CTL_Pedidos ctl_Pedidos = new CTL_Pedidos(getApplicationContext(), cl_Pedidos);
+
+                            if(ctl_Pedidos.fuCarregaTodosPedidosEnviados()){
+                                Cursor rs_Pedidos = ctl_Pedidos.rs_Pedido;
+                                while (!rs_Pedidos.isAfterLast()){
+
+                                    cl_Pedidos.setNumPedido(rs_Pedidos.getString(rs_Pedidos.getColumnIndexOrThrow(CriaBanco.ID)));
+                                    ctl_Pedidos = new CTL_Pedidos(getApplicationContext(), cl_Pedidos);
+
+                                    ctl_Pedidos.fuDeletarPedido();
+
+                                    rs_Pedidos.moveToNext();
                                 }
+
+                                MensagemUtil.addMsg(Pedidos.this, "Pedidos enviados excluídos com sucesso!");
+                                Intent intent = new Intent(Pedidos.this, Pedidos.class);
+                                startActivity(intent);
+                            }else{
+                                MensagemUtil.addMsg(Pedidos.this, "Não foi encontrado nenhum pedido enviado para ser excluído.");
                             }
 
-                            MensagemUtil.addMsg(Pedidos.this, "Pedidos enviados excluídos com sucesso!");
-                            Intent intent = new Intent(Pedidos.this, Pedidos.class);
-                            startActivity(intent);
                         } catch (Exception e) {
                             MensagemUtil.addMsg(Pedidos.this, "Não foi possivel excluir os pedidos enviados devido à seguinte situação: " + e.getMessage().toString() + ".");
                         }
 
-
                     }
                 });
                 //define um botão como negativo.
@@ -1940,6 +1666,44 @@ public class Pedidos extends AppCompatActivity
 
                 return true;
 
+         //Atendimento 19441
+        }else if(id == R.id.sincronizar_pedidos){
+            if(verificaConexao()){
+
+                builder = new AlertDialog.Builder(this);
+
+                //define o titulo
+                builder.setTitle("Sincronizar todos os pedidos abertos");
+                //define a mensagem
+                builder.setMessage("Deseja mesmo enviar online todos os seus pedidos em aberto?");
+
+                //define um botão como positivo
+                builder.setPositiveButton("Sim", new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface arg0, int arg1) {
+                        try {
+                            LoadingAsyncTodosPedidos async_TodosPedidos = new LoadingAsyncTodosPedidos();
+                            async_TodosPedidos.execute();
+                        } catch (Exception e) {
+                            MensagemUtil.addMsg(Pedidos.this, "Não foi possível realizar a sincronização de todos os seus pedidos em aberto");
+                        }
+                    }
+                });
+                //define um botão como negativo.
+                builder.setNegativeButton("Não", new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface arg0, int arg1) {
+
+                    }
+                });
+                //cria o AlertDialog
+                alerta = builder.create();
+                //Exibe
+                alerta.show();
+
+            }else{
+                MensagemUtil.addMsg(Pedidos.this, "Por favor se conecte à internet para sincronizar todos os seus pedidos em aberto");
+            }
+
+            return true;
         }
 
         return super.onOptionsItemSelected(item);
@@ -1981,42 +1745,40 @@ public class Pedidos extends AppCompatActivity
         }
     }
 
-
-
      @SuppressWarnings("StatementWithEmptyBody")
      @Override
      public boolean onNavigationItemSelected(MenuItem item) {
          // Handle navigation view item clicks here.
          int id = item.getItemId();
 
-         if (id == R.id.nav_camara) {
+         if (id == R.id.nav_clientes) {
              Intent secondActivity;
              secondActivity = new Intent(Pedidos.this, HomeActivity.class);
              startActivity(secondActivity);
              // Handle the camera action
-         } else if (id == R.id.nav_gallery) {
+         } else if (id == R.id.nav_pedidos) {
              Intent secondActivity;
              secondActivity = new Intent(Pedidos.this, Pedidos.class);
              startActivity(secondActivity);
 
-         } else if (id == R.id.nav_slideshow) {
+
+         } else if (id == R.id.nav_produtos) {
              Intent secondActivity;
              secondActivity = new Intent(Pedidos.this, Produtos.class);
              secondActivity.putExtra("selecaoProdutos", "N");
              startActivity(secondActivity);
 
-         } else if (id == R.id.nav_share) {
+         } else if (id == R.id.nav_opcoes) {
              Intent secondActivity;
              secondActivity = new Intent(Pedidos.this, Opcoes.class);
              startActivity(secondActivity);
 
-         } /*else if (id == R.id.nav_send) {
-    Intent secondActivity;
-    secondActivity = new Intent(Pedidos.this, Sincronizar.class);
-    startActivity(secondActivity);
-
-}*/
+         } else if (id == R.id.nav_visaogeral) {
+             Intent secondActivity;
+             secondActivity = new Intent(Pedidos.this, VisaoGeralNova.class);
+             startActivity(secondActivity);
 
+         }
          DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
          drawer.closeDrawer(GravityCompat.START);
          return true;
@@ -2186,6 +1948,213 @@ public class Pedidos extends AppCompatActivity
         }
     }
 
+    /*Funções referentes ao atendimento 19441
+    A primeira função ira mostrar uma mensagem na tela informando que a sincronização de todos os pedidos esta sendo feita
+    e chamará a função que realizará o envio dos pedidos.
+    A segunda função irá fazer uma varredura no banco de dados e verificar se existem atendimentos em aberto
+    caso existam então o aplicativo irá realizar o envio de todos os pedidos
+    */
+
+    private class LoadingAsyncTodosPedidos extends AsyncTask<Void, Void, Void> {
+
+        ProgressDialog progressDialogPedidos;
+        String validou = "N";
+
+        @Override
+        protected void onPreExecute() {
+            progressDialogPedidos = ProgressDialog.show(Pedidos.this, "Sincronizando todos os pedidos", "Sincronizando todos pedidos em aberto...");
+        }
+
+        @Override
+        protected Void doInBackground(Void... params) {
+
+            if (fuSincronizarTodosPedidosAbertos()) {
+                validou = "S";
+
+            } else {
+                validou = "N";
+            }
+            return null;
+        }
+
+        @Override
+        protected void onPostExecute(Void aVoid) {
+
+            progressDialogPedidos.dismiss();
+
+            if (validou.equals("N")) {
+                MensagemUtil.addMsg(Pedidos.this, "Todos os seus pedidos que estavam em aberto foram sincronizados com o servidor");
+            }else{
+                MensagemUtil.addMsg(Pedidos.this, "Não foi possível realizar a sincronização de todos os seus pedidos em aberto");
+            }
+        }
+    }
+
+    protected boolean fuSincronizarTodosPedidosAbertos(){
+
+        CL_Pedidos cl_Pedidos = new CL_Pedidos();
+        CTL_Pedidos ctl_Pedidos = new CTL_Pedidos(getApplicationContext(), cl_Pedidos);
+
+        if(ctl_Pedidos.fuPossuiPedidosAbertos()){
+            Cursor rs_Pedidos = ctl_Pedidos.rs_Pedido;
+            SYNC_Pedidos sync_Pedidos = new SYNC_Pedidos(getApplicationContext());
+
+            if(sync_Pedidos.FU_EnviarTodosPedidos(rs_Pedidos)){
+                return true;
+            }else{
+                return false;
+            }
+
+        }else{
+            MensagemUtil.addMsg(Pedidos.this, "Não foi encontrado nenhum pedido em aberto para sincronização");
+            return false;
+        }
+
+    }
+
+    //Função referente ao atendimento 19449 de duplicação do pedido
+    protected void suCliqueLongoLista(String numPedido, String fgSituacao){
+
+        final String vf_NumPedido = numPedido;
+        final String vf_FgSituacao = fgSituacao;
+        //Lista de itens
+        ArrayList<String> itens = new ArrayList<String>();
+
+        itens.add("Consultar");
+        itens.add("Enviar Online");
+        itens.add("Cancelar Pedido");
+        itens.add("Duplicar Pedido");
+        itens.add("Excluir");
+        itens.add("Sair");
+
+        //adapter utilizando um layout customizado (TextView)
+        ArrayAdapter adapter = new ArrayAdapter(getBaseContext(), R.layout.item_alerta, itens);
+
+        AlertDialog.Builder builder = new AlertDialog.Builder(Pedidos.this);
+        builder.setTitle("O que você deseja fazer com o pedido nº" + vf_NumPedido + "? ");
+        //define o diálogo como uma lista, passa o adapter.
+        builder.setSingleChoiceItems(adapter, 0, new DialogInterface.OnClickListener() {
+            public void onClick(DialogInterface arg0, int arg1) {
+                if (arg1 == 0) {
+                    Intent intent = new Intent(Pedidos.this, ManutencaoPedidos.class);
+                    intent.putExtra("operacao", "A");
+                    intent.putExtra("codigo", vf_NumPedido);
+                    startActivityForResult(intent, 1);
+                } else if (arg1 == 1) {
+
+                    //MensagemUtil.addMsg(Pedidos.this, "Foi clicado para enviar online");
+                    if(vf_FgSituacao.equals("ENVIADO")) {
+                        MensagemUtil.addMsg(Pedidos.this, "Pedido já foi enviado para o sistema online.");
+                    }else if(vf_FgSituacao.equals("CANCELADO")){
+                        MensagemUtil.addMsg(Pedidos.this, "Pedido não pode ser enviado, pois o pedido foi cancelado!");
+                    }else {
+                        try {
+                            if (FU_ConsisteEnviarOnline(vf_NumPedido)) {
+                                alerta.dismiss();
+                                codigo_lista = vf_NumPedido;
+
+                                new LoadingAsyncOpcoes().execute();
+
+                            }
+                        } catch (Exception e) {
+                            MensagemUtil.addMsg(Pedidos.this, "Não foi possivel realizar o envio do pedido");
+                        }
+                    }
+                } else if (arg1 == 2) {
+                    //MensagemUtil.addMsg(Pedidos.this, "Foi clicado para cancelar pedido");
+                    //alerta.dismiss();
+                    if(vf_FgSituacao.equals("ENVIADO")) {
+                        MensagemUtil.addMsg(Pedidos.this, "Pedido não pode ser cancelado, pois já foi enviado para o sistema online.");
+                    }else {
+                        BancoController crud = new BancoController(getBaseContext());
+                        try {
+                            crud.alteraSituacaoPedido(vf_NumPedido, "CANCELADO");
+                            MensagemUtil.addMsg(Pedidos.this, "Pedido cancelado com sucesso!");
+                            Intent intent = new Intent(Pedidos.this, Pedidos.class);
+                            startActivity(intent);
+                        } catch (Exception e) {
+                            MensagemUtil.addMsg(Pedidos.this, "Não foi possivel cancelar o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
+                        }
+                    }
+                } else if (arg1 == 3) {
+
+                    AlertDialog al_DuplicarPedido;
+                    AlertDialog.Builder bu_DuplicarPedido;
+
+                    bu_DuplicarPedido = new AlertDialog.Builder(Pedidos.this);
 
+                    //define o titulo
+                    bu_DuplicarPedido.setTitle("Duplicar pedido " + vf_NumPedido);
+                    //define a mensagem
+                    bu_DuplicarPedido.setMessage("Deseja mesmo duplicar o pedido " + vf_NumPedido + "?");
+
+                    //define um botão como positivo
+                    bu_DuplicarPedido.setPositiveButton("Sim", new DialogInterface.OnClickListener() {
+                        public void onClick(DialogInterface arg0, int arg1) {
+                            CL_Pedidos cl_Pedido = new CL_Pedidos();
+                            cl_Pedido.setNumPedido(vf_NumPedido);
+
+                            CTL_Pedidos ctl_Pedidos = new CTL_Pedidos(getApplicationContext(), cl_Pedido);
+
+                            if(ctl_Pedidos.fuCarregarPedido()){
+                                try {
+                                    String vf_NumPedidoOriginal = cl_Pedido.getNumPedido();
+                                    if(ctl_Pedidos.fuDuplicarPedido()){
+
+                                        CL_ItemPedido cl_ItemPedido = new CL_ItemPedido();
+                                        cl_ItemPedido.setNumPedido(cl_Pedido.getNumPedido());
+
+                                        CTL_ItemPedido ctl_ItemPedido = new CTL_ItemPedido(getApplicationContext(), cl_ItemPedido);
+
+                                        if(ctl_ItemPedido.fuDuplicarItensPedidoDuplicado(vf_NumPedidoOriginal)) {
+                                            MensagemUtil.addMsg(Pedidos.this, "Pedido duplicado com sucesso!");
+                                            Intent intent = new Intent(Pedidos.this, Pedidos.class);
+                                            startActivity(intent);
+                                        }else{
+                                            MensagemUtil.addMsg(Pedidos.this, "Não foi possível duplicar os itens do pedido!");
+                                        }
+                                    }else{
+                                        MensagemUtil.addMsg(Pedidos.this, "Não foi possível duplicar o pedido!");
+                                    }
+                                }catch (Exception e){
+                                    MensagemUtil.addMsg(Pedidos.this, "Não foi possivel duplicar o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
+                                }
+
+                            }
+                        }
+                    });
+                    //define um botão como negativo.
+                    bu_DuplicarPedido.setNegativeButton("Não", new DialogInterface.OnClickListener() {
+                        public void onClick(DialogInterface arg0, int arg1) {
+
+                        }
+                    });
+                    //cria o AlertDialog
+                    al_DuplicarPedido = bu_DuplicarPedido.create();
+                    //Exibe
+                    al_DuplicarPedido.show();
+
+                } else if (arg1 == 4) {
+                    //MensagemUtil.addMsg(Pedidos.this, "Foi clicado para excluir pedido");
+                    BancoController crud = new BancoController(getBaseContext());
+                    try {
+                        crud.deletaPedido(Integer.parseInt(vf_NumPedido));
+                        MensagemUtil.addMsg(Pedidos.this, "Pedido excluido com sucesso!");
+                        Intent intent = new Intent(Pedidos.this, Pedidos.class);
+                        startActivity(intent);
+                    } catch (Exception e) {
+                        MensagemUtil.addMsg(Pedidos.this, "Não foi possivel excluir o pedido devido à seguinte situação: " + e.getMessage().toString() + ".");
+                    }
+                } else if (arg1 == 5) {
+                    alerta.dismiss();
+                }
+
+            }
+        });
+
+        alerta = builder.create();
+        alerta.show();
+
+    }
 
 }
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Produtos.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Produtos.java
index f153c86..6a49e60 100755
--- a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Produtos.java
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/Produtos.java
@@ -22,8 +22,11 @@ import android.widget.EditText;
 import android.widget.ListAdapter;
 import android.widget.ListView;
 import android.widget.SimpleCursorAdapter;
+import android.widget.TextView;
 import android.widget.Toast;
 
+import com.miguelcatalan.materialsearchview.MaterialSearchView;
+
 import java.util.ArrayList;
 import java.util.List;
 
@@ -35,6 +38,11 @@ public class Produtos extends AppCompatActivity
 
     ListView lista;
 
+
+    MaterialSearchView sv_Produtos;
+
+    MenuItem me_BuscarProduto;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -42,6 +50,9 @@ public class Produtos extends AppCompatActivity
         Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
 
+        sv_Produtos = (MaterialSearchView) findViewById(R.id.sv_Produtos);
+        sv_Produtos.setVoiceSearch(true); //or false
+
         DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
         ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                 this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
@@ -300,6 +311,147 @@ public class Produtos extends AppCompatActivity
         });
 
 
+        final TextView lb_TituloProdutos = (TextView) findViewById(R.id.lb_TituloProdutos);
+
+        sv_Produtos.setOnQueryTextListener(new MaterialSearchView.OnQueryTextListener() {
+            @Override
+            public boolean onQueryTextSubmit(String query) {
+                return false;
+            }
+
+            @Override
+            public boolean onQueryTextChange(String cdProdutoDescricao) {
+
+                String vf_CdProdutoDescricao = cdProdutoDescricao;
+
+                BancoController crud = new BancoController(getBaseContext());
+                final Cursor cursor = crud.carregaProdutosDescricaoPedido(vf_CdProdutoDescricao);
+
+                String VA_ValorProduto = "";
+                String VA_ValorAtacado = "";
+                VA_ContProdutos = 0;
+
+                List<String> codigo = new ArrayList<>();
+                List<String> descricao = new ArrayList<>();
+                List<String> itensRestantes = new ArrayList<>();
+                List<String> valorProduto = new ArrayList<>();
+                List<String> valorAtacado = new ArrayList<>();
+                if (cursor != null) {
+                    try {
+                        codigo.add(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)));
+                        descricao.add(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCRICAO)));
+                        itensRestantes.add(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.ESTOQUEATUAL)));
+                        VA_ValorProduto = String.format("%.2f", Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)).replace(",", ".")));
+                        VA_ValorAtacado = String.format("%.2f", Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VALORATACADO)).replace(",", ".")));
+
+                        valorProduto.add(VA_ValorProduto);
+                        valorAtacado.add(VA_ValorAtacado);
+                        VA_ContProdutos = VA_ContProdutos + 1;
+                        while (cursor.moveToNext()) {
+                            codigo.add(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)));
+                            descricao.add(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.DESCRICAO)));
+                            itensRestantes.add(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.ESTOQUEATUAL)));
+                            VA_ValorProduto = String.format("%.2f", Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)).replace(",", ".")));
+                            VA_ValorAtacado = String.format("%.2f", Double.parseDouble(cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.VALORATACADO)).replace(",", ".")));
+
+                            valorProduto.add(VA_ValorProduto);
+                            valorAtacado.add(VA_ValorAtacado);
+                            VA_ContProdutos = VA_ContProdutos + 1;
+                        }
+                    }catch (Exception e){
+
+                    }
+                }
+
+                List<Integer> icones = new ArrayList<>();
+
+
+                for(int i = 0; i < VA_ContProdutos; i++) {
+                    icones.add(R.drawable.sem_foto);
+                }
+                lista = (ListView) findViewById(R.id.lista);
+
+                ListaProdutosCustomizadaAdapter adapter = new ListaProdutosCustomizadaAdapter(getBaseContext(), icones, codigo, descricao, itensRestantes, valorProduto, valorAtacado);
+                lista.setAdapter(adapter);
+
+                lista.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+
+                    @Override
+                    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                        String codigo;
+                        try {
+                            ListAdapter adapter2 = lista.getAdapter();
+                            int lenght = adapter2.getCount();
+                            if(position == 0){
+                                cursor.moveToPosition(position);
+                            }else if(position < lenght - 1) {
+                                cursor.moveToPosition(position);
+                            }else{
+                                cursor.moveToPosition(position + 1);
+                            }
+                            //cursor.moveToPosition(position + 1);
+                            codigo = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.ID));
+                            Intent secondActivity;
+                            if (selecaoprodutos.equals("S")) {
+                                Intent intent = new Intent(Produtos.this, ManutencaoProdutoPedido.class);
+                                intent.putExtra("codigo", codigo);
+                                intent.putExtra("numpedido", numpedido);
+                                intent.putExtra("alteracao", "N");
+                                //startActivity(intent);
+                                startActivityForResult(intent, 1);
+                            }else{
+                                Intent intent = new Intent(Produtos.this, CadastroProdutos.class);
+                                intent.putExtra("codigo", codigo);
+
+                                intent.putExtra("numpedido", numpedido);
+                                intent.putExtra("alteracao", "N");
+                                startActivityForResult(intent, 1);
+                            }
+                        }catch (Exception e){
+                            cursor.moveToPosition(position);
+                            codigo = cursor.getString(cursor.getColumnIndexOrThrow(CriaBanco.ID));
+                            Intent secondActivity;
+                            if (selecaoprodutos.equals("S")) {
+                                Intent intent = new Intent(Produtos.this, ManutencaoProdutoPedido.class);
+                                intent.putExtra("codigo", codigo);
+                                intent.putExtra("numpedido", numpedido);
+                                intent.putExtra("alteracao", "N");
+                                //startActivity(intent);
+                                startActivityForResult(intent, 1);
+                            }else{
+                                Intent intent = new Intent(Produtos.this, CadastroProdutos.class);
+                                intent.putExtra("codigo", codigo);
+
+                                intent.putExtra("numpedido", numpedido);
+                                intent.putExtra("alteracao", "N");
+                                startActivityForResult(intent, 1);
+                            }
+                        }
+                    }
+                });
+
+                return false;
+            }
+        });
+
+        sv_Produtos.setOnSearchViewListener(new MaterialSearchView.SearchViewListener() {
+
+            @Override
+            public void onSearchViewShown() {
+                //Do some magic
+                me_BuscarProduto.setVisible(false);
+                lb_TituloProdutos.setWidth(0);
+
+            }
+
+            @Override
+            public void onSearchViewClosed() {
+                //Do some magic
+
+                me_BuscarProduto.setVisible(true);
+                lb_TituloProdutos.setWidth(550);
+            }
+        });
 
     }
 
@@ -318,6 +470,11 @@ public class Produtos extends AppCompatActivity
     public boolean onCreateOptionsMenu(Menu menu) {
         // Inflate the menu; this adds items to the action bar if it is present.
         getMenuInflater().inflate(R.menu.produtos, menu);
+        MenuItem item = menu.findItem(R.id.buscar_produto);
+
+        sv_Produtos.setMenuItem(item);
+
+        me_BuscarProduto = menu.findItem(R.id.buscar_produto);
         return true;
     }
 
@@ -345,34 +502,34 @@ public class Produtos extends AppCompatActivity
         // Handle navigation view item clicks here.
         int id = item.getItemId();
 
-        if (id == R.id.nav_camara) {
-            // Handle the camera action
+        if (id == R.id.nav_clientes) {
             Intent secondActivity;
             secondActivity = new Intent(Produtos.this, HomeActivity.class);
             startActivity(secondActivity);
-        } else if (id == R.id.nav_gallery) {
+            // Handle the camera action
+        } else if (id == R.id.nav_pedidos) {
             Intent secondActivity;
             secondActivity = new Intent(Produtos.this, Pedidos.class);
             startActivity(secondActivity);
 
-        }
-        else if (id == R.id.nav_slideshow) {
+
+        } else if (id == R.id.nav_produtos) {
             Intent secondActivity;
             secondActivity = new Intent(Produtos.this, Produtos.class);
             secondActivity.putExtra("selecaoProdutos", "N");
             startActivity(secondActivity);
 
-        } else if (id == R.id.nav_share) {
+        } else if (id == R.id.nav_opcoes) {
             Intent secondActivity;
             secondActivity = new Intent(Produtos.this, Opcoes.class);
             startActivity(secondActivity);
 
-        }/* else if (id == R.id.nav_send) {
+        } else if (id == R.id.nav_visaogeral) {
             Intent secondActivity;
-            secondActivity = new Intent(Opcoes.this, Sincronizar.class);
+            secondActivity = new Intent(Produtos.this, VisaoGeralNova.class);
             startActivity(secondActivity);
 
-        }*/
+        }
 
         DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
         drawer.closeDrawer(GravityCompat.START);
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/SelecaoCliente.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/SelecaoCliente.java
index 021aab2..039597b 100755
--- a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/SelecaoCliente.java
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/SelecaoCliente.java
@@ -18,13 +18,19 @@ import android.widget.EditText;
 import android.widget.ListView;
 import android.widget.SectionIndexer;
 import android.widget.SimpleCursorAdapter;
+import android.widget.TextView;
 import android.widget.Toast;
 
+import com.miguelcatalan.materialsearchview.MaterialSearchView;
+
 public class SelecaoCliente extends AppCompatActivity {
 
     private ListView lista;
     private Toast toast;
 
+    MaterialSearchView sv_ClientesPedido;
+    MenuItem me_BuscarCliente, me_Cancelar;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -34,6 +40,9 @@ public class SelecaoCliente extends AppCompatActivity {
 
         //getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
+        sv_ClientesPedido = (MaterialSearchView) findViewById(R.id.sv_ClientesPedidos);
+        sv_ClientesPedido.setVoiceSearch(true); //or false
+
         BancoController crud = new BancoController(getBaseContext());
         final Cursor cursor = crud.carregaClientes();
 
@@ -65,8 +74,34 @@ public class SelecaoCliente extends AppCompatActivity {
         tb_buscarcliente.addTextChangedListener(new TextWatcher() {
             @Override
             public void onTextChanged(CharSequence s, int start, int before, int count) {
+
+            }
+
+            @Override
+            public void beforeTextChanged(CharSequence s, int start, int count,
+                                          int after) {
+                // TODO Auto-generated method stub
+            }
+
+            @Override
+            public void afterTextChanged(Editable s) {
+
+            }
+        });
+
+        final TextView lb_TituloClientesPedidos = (TextView) findViewById(R.id.lb_TituloClientesPedidos);
+
+        sv_ClientesPedido.setOnQueryTextListener(new MaterialSearchView.OnQueryTextListener() {
+            @Override
+            public boolean onQueryTextSubmit(String query) {
+                return false;
+            }
+
+            @Override
+            public boolean onQueryTextChange(String nomeRazaoSocial) {
+
                 BancoController crud = new BancoController(getBaseContext());
-                final Cursor cursor = crud.carregaClientesNome(tb_buscarcliente.getText().toString());
+                final Cursor cursor = crud.carregaClientesNome(nomeRazaoSocial);
 
                 String[] nomeCampos = new String[]{CriaBanco.RZSOCIAL};
                 int[] idViews = new int[]{R.id.rzsociallist};
@@ -89,17 +124,27 @@ public class SelecaoCliente extends AppCompatActivity {
                         finish();
                     }
                 });
+
+                return false;
             }
+        });
+
+        sv_ClientesPedido.setOnSearchViewListener(new MaterialSearchView.SearchViewListener() {
 
             @Override
-            public void beforeTextChanged(CharSequence s, int start, int count,
-                                          int after) {
-                // TODO Auto-generated method stub
+            public void onSearchViewShown() {
+                //Do some magic
+                me_BuscarCliente.setVisible(false);
+                lb_TituloClientesPedidos.setWidth(0);
+
             }
 
             @Override
-            public void afterTextChanged(Editable s) {
+            public void onSearchViewClosed() {
+                //Do some magic
 
+                me_BuscarCliente.setVisible(true);
+                lb_TituloClientesPedidos.setWidth(550);
             }
         });
     }
@@ -108,6 +153,11 @@ public class SelecaoCliente extends AppCompatActivity {
     public boolean onCreateOptionsMenu(Menu menu) {
         // Inflate the menu; this adds items to the action bar if it is present.
         getMenuInflater().inflate(R.menu.selecaocliente, menu);
+        MenuItem item = menu.findItem(R.id.buscar_clientepedido);
+
+        sv_ClientesPedido.setMenuItem(item);
+
+        me_BuscarCliente = menu.findItem(R.id.buscar_clientepedido);
         return true;
     }
 
diff --git a/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/VisaoGeralNova.java b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/VisaoGeralNova.java
new file mode 100644
index 0000000..f06c7fc
--- /dev/null
+++ b/app/src/main/java/com/example/desenvolvimento/navigationdrawercomercioexpress/VisaoGeralNova.java
@@ -0,0 +1,401 @@
+package com.example.desenvolvimento.navigationdrawercomercioexpress;
+
+import android.app.AlertDialog;
+import android.app.DatePickerDialog;
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.design.widget.FloatingActionButton;
+import android.support.design.widget.Snackbar;
+import android.view.View;
+import android.support.v4.view.GravityCompat;
+import android.support.v7.app.ActionBarDrawerToggle;
+import android.view.MenuItem;
+import android.support.design.widget.NavigationView;
+import android.support.v4.widget.DrawerLayout;
+
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.view.Menu;
+import android.widget.Button;
+import android.widget.DatePicker;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+import java.util.Locale;
+
+import classes.CL_VisaoGeral;
+import controllers.CTL_VisaoGeral;
+
+public class VisaoGeralNova extends AppCompatActivity
+        implements NavigationView.OnNavigationItemSelectedListener {
+
+    Funcoes funcoes = new Funcoes();
+
+    CL_VisaoGeral cl_VisaoGeral;
+    CTL_VisaoGeral ctl_VisaoGeral;
+
+    private AlertDialog ad_VisaoGeral;
+    AlertDialog.Builder bu_VisaoGeral;
+
+    //Instancia da imagem para seleção da data da movimentação
+    ImageView img_DtEmissaoPicker;
+
+    //Função de calendário para seleção da data de emissão da venda
+    final Calendar vc_MyCalendar = Calendar.getInstance();
+
+    //Instancia das labels que apresentarão os resultados da movimentação diária
+    TextView lb_DtMovimentacaoDiaria, lb_VlVendaBrutaResultado, lb_VlDescontosVendaResultado, lb_VlVendaLiquidaResultado, lb_VlLucroMedioResultado;
+
+    //Instancia dos botões da seção de tipos de venda
+    Button btn_Orcamentos, btn_Pedidos, btn_Vendas;
+
+    //Instancia das labels que apresentarão os resultados do tipo de venda
+    TextView lb_QuantidadeTipoVendaAbertos, lb_QuantidadeTipoVendaCancelados, lb_VlTotalTipoVenda;
+    TextView lb_QuantidadeTipoVendaAbertosResultado, lb_QuantidadeTipoVendaCanceladosResultado, lb_VlDescontoTipoVendaResultado, lb_VlTotalTipoVendaResultado;
+
+    //Instancia da label do estoque.
+    TextView lb_ProdutosAtencao;
+
+    int vc_CountProdutosAtencao = 0;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_visao_geral_nova);
+        Toolbar toolbar = findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+
+        com.github.clans.fab.FloatingActionButton fab_Emitente = (com.github.clans.fab.FloatingActionButton) findViewById(R.id.fab_ClienteVisao);
+        fab_Emitente.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Intent intent = new Intent(getApplicationContext(), HomeActivity.class);
+                intent.putExtra("tipo", "C");
+                startActivity(intent);
+                finish();
+            }
+        });
+
+        com.github.clans.fab.FloatingActionButton fab_Produto = (com.github.clans.fab.FloatingActionButton) findViewById(R.id.fab_ProdutoVisao);
+        fab_Produto.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Intent intent = new Intent(getApplicationContext(), Produtos.class);
+                startActivity(intent);
+                finish();
+            }
+        });
+
+        com.github.clans.fab.FloatingActionButton fab_Venda = (com.github.clans.fab.FloatingActionButton) findViewById(R.id.fab_PedidoVisao);
+        fab_Venda.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                Intent intent = new Intent(getApplicationContext(), Pedidos.class);
+                startActivity(intent);
+                finish();
+            }
+        });
+
+        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
+        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
+                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
+        drawer.setDrawerListener(toggle);
+        toggle.syncState();
+
+        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
+        navigationView.setNavigationItemSelectedListener(this);
+
+        fu_InstanciarCampos();
+
+        fu_AtualizarData("S");
+        fu_CarregarProdutosZerados();
+        fu_CalcularResultadosTipoVenda();
+    }
+
+    @Override
+    public void onBackPressed() {
+        DrawerLayout drawer = findViewById(R.id.drawer_layout);
+        if (drawer.isDrawerOpen(GravityCompat.START)) {
+            drawer.closeDrawer(GravityCompat.START);
+        } else {
+            super.onBackPressed();
+        }
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        // Inflate the menu; this adds items to the action bar if it is present.
+        getMenuInflater().inflate(R.menu.visao_geral_nova, menu);
+        return true;
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        // Handle action bar item clicks here. The action bar will
+        // automatically handle clicks on the Home/Up button, so long
+        // as you specify a parent activity in AndroidManifest.xml.
+        int id = item.getItemId();
+
+        return super.onOptionsItemSelected(item);
+    }
+
+    @SuppressWarnings("StatementWithEmptyBody")
+    @Override
+    public boolean onNavigationItemSelected(MenuItem item) {
+        // Handle navigation view item clicks here.
+        int id = item.getItemId();
+
+        if (id == R.id.nav_clientes) {
+            Intent secondActivity;
+            secondActivity = new Intent(VisaoGeralNova.this, HomeActivity.class);
+            startActivity(secondActivity);
+            // Handle the camera action
+        } else if (id == R.id.nav_pedidos) {
+            Intent secondActivity;
+            secondActivity = new Intent(VisaoGeralNova.this, Pedidos.class);
+            startActivity(secondActivity);
+
+
+        } else if (id == R.id.nav_produtos) {
+            Intent secondActivity;
+            secondActivity = new Intent(VisaoGeralNova.this, Produtos.class);
+            secondActivity.putExtra("selecaoProdutos", "N");
+            startActivity(secondActivity);
+
+        } else if (id == R.id.nav_opcoes) {
+            Intent secondActivity;
+            secondActivity = new Intent(VisaoGeralNova.this, Opcoes.class);
+            startActivity(secondActivity);
+
+        } else if (id == R.id.nav_visaogeral) {
+            Intent secondActivity;
+            secondActivity = new Intent(VisaoGeralNova.this, VisaoGeralNova.class);
+            startActivity(secondActivity);
+
+        }
+
+        DrawerLayout drawer = findViewById(R.id.drawer_layout);
+        drawer.closeDrawer(GravityCompat.START);
+        return true;
+    }
+
+    private void fu_InstanciarCampos(){
+
+        //Campos da seção de movimentação diária--------------------------------------------------
+        img_DtEmissaoPicker = (ImageView)findViewById(R.id.img_dtEmissaoPicker);
+
+        final DatePickerDialog.OnDateSetListener date = new DatePickerDialog.OnDateSetListener() {
+
+            @Override
+            public void onDateSet(DatePicker view, int year, int monthOfYear,
+                                  int dayOfMonth) {
+                vc_MyCalendar.set(Calendar.YEAR, year);
+                vc_MyCalendar.set(Calendar.MONTH, monthOfYear);
+                vc_MyCalendar.set(Calendar.DAY_OF_MONTH, dayOfMonth);
+                fu_AtualizarData("N");
+            }
+
+        };
+
+        img_DtEmissaoPicker.setOnClickListener(new View.OnClickListener() {
+
+            @Override
+            public void onClick(View v) {
+                new DatePickerDialog(VisaoGeralNova.this, date, vc_MyCalendar
+                        .get(Calendar.YEAR), vc_MyCalendar.get(Calendar.MONTH),
+                        vc_MyCalendar.get(Calendar.DAY_OF_MONTH)).show();
+            }
+
+        });
+
+        lb_DtMovimentacaoDiaria = (TextView)findViewById(R.id.lb_dataMovimentacaoDiaria);
+        lb_VlVendaBrutaResultado = (TextView)findViewById(R.id.lb_vlVendaBrutaResultado);
+        lb_VlDescontosVendaResultado = (TextView)findViewById(R.id.lb_vlDescontosVendaResultado);
+        lb_VlVendaLiquidaResultado = (TextView)findViewById(R.id.lb_vlVendaLiquidaResultado);
+        lb_VlLucroMedioResultado = (TextView)findViewById(R.id.lb_vlLucroMedioResultado);
+        //----------------------------------------------------------------------------------------
+
+        lb_QuantidadeTipoVendaAbertos = (TextView)findViewById(R.id.lb_quantidadeTipoVendaAbertos);
+        lb_QuantidadeTipoVendaCancelados = (TextView)findViewById(R.id.lb_quantidadeTipoVendaCancelados);
+        lb_VlTotalTipoVenda = (TextView)findViewById(R.id.lb_vlTotalTipoVenda);
+
+        lb_QuantidadeTipoVendaAbertosResultado = (TextView)findViewById(R.id.lb_quantidadeTipoVendaAbertosResultado);
+        lb_QuantidadeTipoVendaCanceladosResultado = (TextView)findViewById(R.id.lb_quantidadeTipoVendaCanceladosResultado);
+        lb_VlDescontoTipoVendaResultado = (TextView)findViewById(R.id.lb_vlDescontoTipoVendaResultado);
+        lb_VlTotalTipoVendaResultado = (TextView)findViewById(R.id.lb_vlTotalTipoVendaResultado);
+        //----------------------------------------------------------------------------------------
+
+        //Campos da seção de produtos-------------------------------------------------------------
+        lb_ProdutosAtencao = (TextView)findViewById(R.id.lb_produtosAtencao);
+        //----------------------------------------------------------------------------------------
+
+        //----------------------------------------------------------------------------------------
+
+        //Instancia da classe controle de VisaoGeral
+        cl_VisaoGeral = new CL_VisaoGeral();
+        ctl_VisaoGeral = new CTL_VisaoGeral(getApplicationContext(), cl_VisaoGeral);
+
+    }
+
+    //Função para atualização da data no label de dtEmissao
+    private void fu_AtualizarData(String fgDataAtual) {
+
+        String data = "";
+        String myFormat = "dd/MM/yyyy"; //In which you need put
+        SimpleDateFormat sdf = new SimpleDateFormat(myFormat, new Locale("pt", "BR"));
+        if (fgDataAtual.equals("S")) {
+            data = funcoes.getDateTime().substring(0, 10);
+        } else {
+            data = sdf.format(vc_MyCalendar.getTime());
+        }
+
+        String dataInformadaFormatada =  data.replace("/", "");
+        String diaInformada = dataInformadaFormatada.substring(0, 2);
+        int diaInformadaInt = Integer.parseInt(diaInformada);
+        diaInformadaInt += 10;
+        String mesInformada = dataInformadaFormatada.substring(2, 4);
+        int mesInformadaInt = Integer.parseInt(mesInformada);
+        mesInformadaInt += 10;
+        String anoInformada = dataInformadaFormatada.substring(4, 8);
+        int anoInformadaInt = Integer.parseInt(anoInformada);
+
+        String dataAtual = funcoes.getDateTime().substring(0, 10).replace("/", "").replace("-", "");
+
+        String diaAtual = dataAtual.substring(0, 2);
+        int diaAtualInt = Integer.parseInt(diaAtual);
+        diaAtualInt += 10;
+        String mesAtual = dataAtual.substring(2, 4);
+        int mesAtualInt = Integer.parseInt(mesAtual);
+        mesAtualInt += 10;
+        String anoAtual = dataAtual.substring(4, 8);
+        int anoAtualInt = Integer.parseInt(anoAtual);
+
+        //int dataInformada = Integer.parseInt(data.replace("/", ""));
+        //int dataAtual = Integer.parseInt(funcoes.getDateTime().substring(0, 10).replace("/", "").replace("-", ""));
+
+        boolean dataInvalida = false;
+        if(anoInformadaInt > anoAtualInt){
+            dataInvalida = true;
+        }else{
+            if(anoInformadaInt == anoAtualInt){
+                if(mesInformadaInt > mesAtualInt){
+                    dataInvalida = true;
+                }else{
+                    if(mesInformadaInt == mesAtualInt){
+                        if(diaInformadaInt > diaAtualInt){
+                            dataInvalida = true;
+                        }
+                    }
+                }
+            }
+        }
+
+        if(dataInvalida){
+
+        /*int dataInformada = Integer.parseInt(data.replace("/", ""));
+        int dataAtual = Integer.parseInt(funcoes.getDateTime().substring(0, 10).replace("/", "").replace("-", ""));
+
+        if (dataInformada > dataAtual) {*/
+            MensagemUtil.addMsg(VisaoGeralNova.this, "Não é possivel informar uma data maior que a data atual");
+
+            //lb_dtEmissaoResultado.setText(dtEmissao);
+        } else {
+            String dataMovimentacao = data;
+            String dataFormatada = "";
+
+            int dia = vc_MyCalendar.get(vc_MyCalendar.DAY_OF_WEEK);
+
+            String nomeDia = funcoes.gerarNomeDia(dia);
+            dataFormatada = nomeDia + ", ";
+
+            dataFormatada += dataMovimentacao.substring(0, 2) + " de ";
+
+            int mes = Integer.parseInt(dataMovimentacao.substring(3, 5));
+            String nomeMes = funcoes.gerarNomeMes(mes);
+            dataFormatada += nomeMes + " de ";
+
+            dataFormatada += dataMovimentacao.substring(6, 10);
+
+            lb_DtMovimentacaoDiaria.setText(dataFormatada);
+            fu_CalcularMovimentacaoDiaria(fgDataAtual, dataMovimentacao);
+        }
+    }
+
+    private void fu_CalcularMovimentacaoDiaria(String fgDataAtual, String data){
+
+        if(ctl_VisaoGeral.fu_CarregarMovimentacaoDiaria(data)){
+            lb_VlVendaBrutaResultado.setText("R$ " + String.format("%.2f", cl_VisaoGeral.getVlVendaBruto()));
+            lb_VlDescontosVendaResultado.setText("R$ " + String.format("%.2f", cl_VisaoGeral.getVlVendaDesconto()));
+            lb_VlVendaLiquidaResultado.setText("R$ " + String.format("%.2f", cl_VisaoGeral.getVlVendaLiquido()));
+            //lb_vlVendaBrutaResultado.setText("R$ " + String.valueOf(Double.parseDouble(ctl_VisaoGeral.vlVendaBruto)));
+        }else{
+            if(fgDataAtual.equals("N")) {
+                MensagemUtil.addMsg(VisaoGeralNova.this, ctl_VisaoGeral.vc_Mensagem);
+            }
+            lb_VlVendaBrutaResultado.setText("R$ " + String.format("%.2f", 0.0));
+            lb_VlDescontosVendaResultado.setText("R$ " + String.format("%.2f", 0.0));
+            lb_VlVendaLiquidaResultado.setText("R$ " + String.format("%.2f", 0.0));
+        }
+    }
+
+    private void fu_CalcularResultadosTipoVenda(){
+
+        try {
+            String vf_TipoVenda = "";
+
+
+            lb_QuantidadeTipoVendaAbertos.setText(getString(R.string.label_quantidade_tipovenda_pedido));
+            lb_QuantidadeTipoVendaCancelados.setText(getString(R.string.label_quantidade_tipovenda_cancelados_pedidos));
+            lb_VlTotalTipoVenda.setText(getString(R.string.label_valortotal_tipovenda_pedidos));
+
+            if (ctl_VisaoGeral.fu_CarregarDadosTipoVenda()) {
+
+                lb_QuantidadeTipoVendaAbertosResultado.setText(String.valueOf(cl_VisaoGeral.getCountTipoVenda()) + " pedido");
+
+                if (cl_VisaoGeral.getCountTipoVenda() != 1) {
+                    lb_QuantidadeTipoVendaAbertosResultado.setText(lb_QuantidadeTipoVendaAbertosResultado.getText() + " pedidos");
+                }
+
+                lb_QuantidadeTipoVendaCanceladosResultado.setText(cl_VisaoGeral.getCountCanceladosTipoVenda() + " pedido");
+
+                if (cl_VisaoGeral.getCountTipoVenda() != 1) {
+                    lb_QuantidadeTipoVendaCanceladosResultado.setText(lb_QuantidadeTipoVendaCanceladosResultado.getText() + " pedidos");
+                }
+
+                lb_VlDescontoTipoVendaResultado.setText("R$ " + String.format("%.2f", cl_VisaoGeral.getVlDescontoTipoVenda()) + "");
+                String vf_VlTotalTipoVenda = String.format("%.2f", cl_VisaoGeral.getVlTotalTipoVenda());
+                lb_VlTotalTipoVendaResultado.setText("R$ " + vf_VlTotalTipoVenda + "");
+
+            } else {
+                MensagemUtil.addMsg(VisaoGeralNova.this, getString(R.string.mensagem_visaogeral_falhacarregamentopedidos) + vf_TipoVenda + "s");
+            }
+
+        }catch (Exception e){
+            MensagemUtil.addMsg(VisaoGeralNova.this, "Não foi possível carregar os dados devido à seguinte situação: " + e.getMessage());
+        }
+    }
+
+    private boolean fu_CarregarProdutosZerados(){
+
+        vc_CountProdutosAtencao = ctl_VisaoGeral.fu_BuscarProdutosAtencao();
+        //countProdutosAtencao = ctl_VisaoGeral.buscaProdutosAtencao();
+
+        if(vc_CountProdutosAtencao > 0){
+            if(vc_CountProdutosAtencao == 1){
+                lb_ProdutosAtencao.setText("Existe " + String.valueOf(vc_CountProdutosAtencao) + " " + getString(R.string.label_produtoatencaounico));
+            }else{
+                lb_ProdutosAtencao.setText("Existem " + String.valueOf(vc_CountProdutosAtencao) + " " + getString(R.string.label_produtosatencao));
+            }
+        }else{
+            lb_ProdutosAtencao.setText(getString(R.string.label_semprodutosatencao));
+            if(!ctl_VisaoGeral.vc_Mensagem.trim().equals("")){
+                MensagemUtil.addMsg(VisaoGeralNova.this, ctl_VisaoGeral.vc_Mensagem);
+                return false;
+            }
+        }
+
+        return true;
+    }
+}
diff --git a/app/src/main/java/controllers/CTL_Clientes.java b/app/src/main/java/controllers/CTL_Clientes.java
new file mode 100644
index 0000000..fc7bd17
--- /dev/null
+++ b/app/src/main/java/controllers/CTL_Clientes.java
@@ -0,0 +1,529 @@
+package controllers;
+
+import android.content.Context;
+import android.database.Cursor;
+
+import com.example.desenvolvimento.navigationdrawercomercioexpress.CriaBanco;
+
+import classes.CL_Clientes;
+import models.MDL_Clientes;
+
+public class CTL_Clientes {
+
+    CL_Clientes cl_Cliente;
+    MDL_Clientes mdl_Cliente;
+
+    Context cxt_Cliente;
+
+    public Cursor rs_Cliente;
+
+    public CTL_Clientes(Context cxt_Cliente, CL_Clientes cl_Cliente){
+
+        this.cl_Cliente = cl_Cliente;
+        this.cxt_Cliente = cxt_Cliente;
+        this.mdl_Cliente = new MDL_Clientes(this.cxt_Cliente);
+
+    }
+
+    public boolean fuSelecionarCliente(){
+
+        rs_Cliente = mdl_Cliente.fuCarregaCliente(cl_Cliente.getCdCliente());
+
+        if(rs_Cliente.getCount() > 0){
+
+            while(!rs_Cliente.isAfterLast()) {
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ID)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ID)).trim().equals("")) {
+                    cl_Cliente.setCdCliente(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ID)));
+                }else{
+                    cl_Cliente.setCdCliente("0");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.RZSOCIAL)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.RZSOCIAL)).trim().equals("")) {
+                    cl_Cliente.setNomeRzSocial(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.RZSOCIAL)).replace("'", ""));
+                } else {
+                    cl_Cliente.setNomeRzSocial("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NMFANTASIA)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NMFANTASIA)).trim().equals("")) {
+                    cl_Cliente.setNomeFantasia(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NMFANTASIA)).replace("'", ""));
+                } else {
+                    cl_Cliente.setNomeFantasia("");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CEP)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CEP)).trim().equals("")) {
+                    cl_Cliente.setCep(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CEP)).replace(".", "").replace("-", ""));
+                } else {
+                    cl_Cliente.setCep("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ENDERECO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ENDERECO)).trim().equals("")) {
+                    cl_Cliente.setEndereco(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ENDERECO)).replace("'", ""));
+                } else {
+                    cl_Cliente.setEndereco("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CLASSIFICACAO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CLASSIFICACAO)).trim().equals("")) {
+                    cl_Cliente.setClassificacao(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CLASSIFICACAO)).replace("'", ""));
+                } else {
+                    cl_Cliente.setClassificacao("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NUMERO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NUMERO)).trim().equals("")) {
+                    cl_Cliente.setNumEndereco(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NUMERO)));
+                } else {
+                    cl_Cliente.setNumEndereco("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.COMPLEMENTO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.COMPLEMENTO)).trim().equals("")) {
+                    cl_Cliente.setComplemento(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.COMPLEMENTO)).replace("'", ""));
+                } else {
+                    cl_Cliente.setComplemento("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.BAIRRO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.BAIRRO)).trim().equals("")) {
+                    cl_Cliente.setBairro(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.BAIRRO)).replace("'", ""));
+                } else {
+                    cl_Cliente.setBairro("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.UF)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.UF)).trim().equals("")) {
+                    cl_Cliente.setUf(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.UF)));
+                } else {
+                    cl_Cliente.setUf("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CIDADE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CIDADE)).trim().equals("")) {
+                    cl_Cliente.setCidade(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CIDADE)).replace("'", ""));
+                } else {
+                    cl_Cliente.setCidade("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CNPJ)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CNPJ)).trim().equals("")) {
+                    cl_Cliente.setCpfCnpj(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CNPJ)).replace(".", "").replace("-", "").replace("/", ""));
+                } else {
+                    cl_Cliente.setCpfCnpj("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONE)).trim().equals("")) {
+                    cl_Cliente.setTelefone(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONE)).replace("(", "").replace("-", "").replace(")", ""));
+                } else {
+                    cl_Cliente.setTelefone("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONEADICIONAL)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONEADICIONAL)).trim().equals("")) {
+                    cl_Cliente.setTelefoneAdicional(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONEADICIONAL)).replace("(", "").replace("-", "").replace(")", ""));
+                } else {
+                    cl_Cliente.setTelefoneAdicional("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FAX)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FAX)).trim().equals("")) {
+                    cl_Cliente.setFax(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FAX)).replace("(", "").replace("-", "").replace(")", ""));
+                    ;
+                } else {
+                    cl_Cliente.setFax("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CONTATO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CONTATO)).trim().equals("")) {
+                    cl_Cliente.setNomeContato(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CONTATO)).replace("'", ""));
+                } else {
+                    cl_Cliente.setNomeContato("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.EMAIL)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.EMAIL)).trim().equals("")) {
+                    cl_Cliente.setEmail(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.EMAIL)).replace("'", ""));
+                } else {
+                    cl_Cliente.setEmail("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPESSOA)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPESSOA)).trim().equals("")) {
+                    cl_Cliente.setTipoPessoa(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPESSOA)));
+                } else {
+                    cl_Cliente.setTipoPessoa("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPCLIENTE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPCLIENTE)).trim().equals("")) {
+                    cl_Cliente.setTipoCliente(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPCLIENTE)));
+                } else {
+                    cl_Cliente.setTipoCliente("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.OBSCLIENTE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.OBSCLIENTE)).trim().equals("")) {
+                    cl_Cliente.setObservacao(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.OBSCLIENTE)).replace("'", ""));
+                } else {
+                    cl_Cliente.setObservacao("");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTULTALTERACAO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTULTALTERACAO)).trim().equals("")) {
+                    cl_Cliente.setDtUltimaAlteracao(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTULTALTERACAO)));
+                } else {
+                    cl_Cliente.setDtUltimaAlteracao("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTCADASTRO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTCADASTRO)).trim().equals("")) {
+                    cl_Cliente.setDtCadastro(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTCADASTRO)));
+                } else {
+                    cl_Cliente.setDtCadastro("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.VENDEDOR)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.VENDEDOR)).trim().equals("")) {
+                    cl_Cliente.setVendedor(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.VENDEDOR)));
+                } else {
+                    cl_Cliente.setVendedor("");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.INSCESTADUAL)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.INSCESTADUAL)).trim().equals("")) {
+                    cl_Cliente.setInscEstadual(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.INSCESTADUAL)));
+                } else {
+                    cl_Cliente.setInscEstadual("");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FIDELIDADE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FIDELIDADE)).trim().equals("")) {
+                    cl_Cliente.setFidelidade(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FIDELIDADE)));
+                } else {
+                    cl_Cliente.setFidelidade("");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPRECO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPRECO)).trim().equals("")) {
+                    cl_Cliente.setTipoPreco(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPRECO)));
+                } else {
+                    cl_Cliente.setTipoPreco("");
+                }
+            }
+
+            return true;
+        }else{
+            return false;
+        }
+
+    }
+
+    public boolean fuCarregarClienteId(){
+        rs_Cliente = mdl_Cliente.fuCarregaClienteId(cl_Cliente.getId());
+
+        if(rs_Cliente.getCount() > 0){
+
+            while(!rs_Cliente.isAfterLast()) {
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ID)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ID)).trim().equals("")) {
+                    cl_Cliente.setCdCliente(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ID)));
+                }else{
+                    cl_Cliente.setCdCliente("0");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.RZSOCIAL)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.RZSOCIAL)).trim().equals("")) {
+                    cl_Cliente.setNomeRzSocial(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.RZSOCIAL)).replace("'", ""));
+                } else {
+                    cl_Cliente.setNomeRzSocial("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NMFANTASIA)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NMFANTASIA)).trim().equals("")) {
+                    cl_Cliente.setNomeFantasia(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NMFANTASIA)).replace("'", ""));
+                } else {
+                    cl_Cliente.setNomeFantasia("");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CEP)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CEP)).trim().equals("")) {
+                    cl_Cliente.setCep(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CEP)).replace(".", "").replace("-", ""));
+                } else {
+                    cl_Cliente.setCep("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ENDERECO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ENDERECO)).trim().equals("")) {
+                    cl_Cliente.setEndereco(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ENDERECO)).replace("'", ""));
+                } else {
+                    cl_Cliente.setEndereco("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CLASSIFICACAO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CLASSIFICACAO)).trim().equals("")) {
+                    cl_Cliente.setClassificacao(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CLASSIFICACAO)).replace("'", ""));
+                } else {
+                    cl_Cliente.setClassificacao("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NUMERO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NUMERO)).trim().equals("")) {
+                    cl_Cliente.setNumEndereco(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NUMERO)));
+                } else {
+                    cl_Cliente.setNumEndereco("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.COMPLEMENTO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.COMPLEMENTO)).trim().equals("")) {
+                    cl_Cliente.setComplemento(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.COMPLEMENTO)).replace("'", ""));
+                } else {
+                    cl_Cliente.setComplemento("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.BAIRRO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.BAIRRO)).trim().equals("")) {
+                    cl_Cliente.setBairro(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.BAIRRO)).replace("'", ""));
+                } else {
+                    cl_Cliente.setBairro("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.UF)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.UF)).trim().equals("")) {
+                    cl_Cliente.setUf(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.UF)));
+                } else {
+                    cl_Cliente.setUf("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CIDADE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CIDADE)).trim().equals("")) {
+                    cl_Cliente.setCidade(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CIDADE)).replace("'", ""));
+                } else {
+                    cl_Cliente.setCidade("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CNPJ)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CNPJ)).trim().equals("")) {
+                    cl_Cliente.setCpfCnpj(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CNPJ)).replace(".", "").replace("-", "").replace("/", ""));
+                } else {
+                    cl_Cliente.setCpfCnpj("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONE)).trim().equals("")) {
+                    cl_Cliente.setTelefone(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONE)).replace("(", "").replace("-", "").replace(")", ""));
+                } else {
+                    cl_Cliente.setTelefone("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONEADICIONAL)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONEADICIONAL)).trim().equals("")) {
+                    cl_Cliente.setTelefoneAdicional(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONEADICIONAL)).replace("(", "").replace("-", "").replace(")", ""));
+                } else {
+                    cl_Cliente.setTelefoneAdicional("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FAX)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FAX)).trim().equals("")) {
+                    cl_Cliente.setFax(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FAX)).replace("(", "").replace("-", "").replace(")", ""));
+                    ;
+                } else {
+                    cl_Cliente.setFax("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CONTATO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CONTATO)).trim().equals("")) {
+                    cl_Cliente.setNomeContato(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CONTATO)).replace("'", ""));
+                } else {
+                    cl_Cliente.setNomeContato("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.EMAIL)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.EMAIL)).trim().equals("")) {
+                    cl_Cliente.setEmail(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.EMAIL)).replace("'", ""));
+                } else {
+                    cl_Cliente.setEmail("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPESSOA)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPESSOA)).trim().equals("")) {
+                    cl_Cliente.setTipoPessoa(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPESSOA)));
+                } else {
+                    cl_Cliente.setTipoPessoa("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPCLIENTE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPCLIENTE)).trim().equals("")) {
+                    cl_Cliente.setTipoCliente(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPCLIENTE)));
+                } else {
+                    cl_Cliente.setTipoCliente("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.OBSCLIENTE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.OBSCLIENTE)).trim().equals("")) {
+                    cl_Cliente.setObservacao(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.OBSCLIENTE)).replace("'", ""));
+                } else {
+                    cl_Cliente.setObservacao("");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTULTALTERACAO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTULTALTERACAO)).trim().equals("")) {
+                    cl_Cliente.setDtUltimaAlteracao(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTULTALTERACAO)));
+                } else {
+                    cl_Cliente.setDtUltimaAlteracao("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTCADASTRO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTCADASTRO)).trim().equals("")) {
+                    cl_Cliente.setDtCadastro(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTCADASTRO)));
+                } else {
+                    cl_Cliente.setDtCadastro("");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.VENDEDOR)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.VENDEDOR)).trim().equals("")) {
+                    cl_Cliente.setVendedor(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.VENDEDOR)));
+                } else {
+                    cl_Cliente.setVendedor("");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.INSCESTADUAL)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.INSCESTADUAL)).trim().equals("")) {
+                    cl_Cliente.setInscEstadual(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.INSCESTADUAL)));
+                } else {
+                    cl_Cliente.setInscEstadual("");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FIDELIDADE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FIDELIDADE)).trim().equals("")) {
+                    cl_Cliente.setFidelidade(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FIDELIDADE)));
+                } else {
+                    cl_Cliente.setFidelidade("");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPRECO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPRECO)).trim().equals("")) {
+                    cl_Cliente.setTipoPreco(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPRECO)));
+                } else {
+                    cl_Cliente.setTipoPreco("");
+                }
+
+                rs_Cliente.moveToNext();
+            }
+
+            return true;
+        }else{
+            return false;
+        }
+    }
+
+    public boolean fuSelecionarClienteSincronizacao(String condicao){
+
+        if(condicao.equals("cdCliente")) {
+            rs_Cliente = mdl_Cliente.fuCarregaCliente(cl_Cliente.getCdCliente());
+        }else{
+            rs_Cliente = mdl_Cliente.fuCarregaClienteCPFCNPJ(cl_Cliente.getCdCliente());
+        }
+
+        if(rs_Cliente.getCount() > 0){
+
+            while(!rs_Cliente.isAfterLast()) {
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ID)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ID)).trim().equals("")) {
+                    cl_Cliente.setId(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ID)));
+                }else{
+                    cl_Cliente.setId("0");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CDCLIENTE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CDCLIENTE)).trim().equals("")) {
+                    cl_Cliente.setCdCliente(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CDCLIENTE)));
+                }else{
+                    cl_Cliente.setCdCliente("0");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.RZSOCIAL)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.RZSOCIAL)).trim().equals("")) {
+                    cl_Cliente.setNomeRzSocial(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.RZSOCIAL)).replace("'", ""));
+                } else {
+                    cl_Cliente.setNomeRzSocial("espaco");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NMFANTASIA)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NMFANTASIA)).trim().equals("")) {
+                    cl_Cliente.setNomeFantasia(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NMFANTASIA)).replace("'", ""));
+                } else {
+                    cl_Cliente.setNomeFantasia("espaco");
+                }
+                //nmfantasiaString = "Guilherme";
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CEP)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CEP)).trim().equals("")) {
+                    cl_Cliente.setCep(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CEP)).replace(".", "").replace("-", ""));
+                } else {
+                    cl_Cliente.setCep("0");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ENDERECO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ENDERECO)).trim().equals("")) {
+                    cl_Cliente.setEndereco(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.ENDERECO)).replace("'", ""));
+                } else {
+                    cl_Cliente.setEndereco("espaco");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CLASSIFICACAO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CLASSIFICACAO)).trim().equals("")) {
+                    cl_Cliente.setClassificacao(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CLASSIFICACAO)).replace("'", ""));
+                } else {
+                    cl_Cliente.setClassificacao("espaco");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NUMERO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NUMERO)).trim().equals("")) {
+                    cl_Cliente.setNumEndereco(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.NUMERO)));
+                } else {
+                    cl_Cliente.setNumEndereco("0");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.COMPLEMENTO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.COMPLEMENTO)).trim().equals("")) {
+                    cl_Cliente.setComplemento(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.COMPLEMENTO)).replace("'", ""));
+                } else {
+                    cl_Cliente.setComplemento("espaco");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.BAIRRO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.BAIRRO)).trim().equals("")) {
+                    cl_Cliente.setBairro(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.BAIRRO)).replace("'", ""));
+                } else {
+                    cl_Cliente.setBairro("espaco");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.UF)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.UF)).trim().equals("")) {
+                    cl_Cliente.setUf(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.UF)));
+                } else {
+                    cl_Cliente.setUf("PR");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CIDADE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CIDADE)).trim().equals("")) {
+                    cl_Cliente.setCidade(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CIDADE)).replace("'", ""));
+                } else {
+                    cl_Cliente.setCidade("espaco");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CNPJ)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CNPJ)).trim().equals("")) {
+                    cl_Cliente.setCpfCnpj(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CNPJ)).replace(".", "").replace("-", "").replace("/", ""));
+                } else {
+                    cl_Cliente.setCpfCnpj("0");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONE)).trim().equals("")) {
+                    cl_Cliente.setTelefone(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONE)).replace("(", "").replace("-", "").replace(")", ""));
+                } else {
+                    cl_Cliente.setTelefone("espaco");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONEADICIONAL)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONEADICIONAL)).trim().equals("")) {
+                    cl_Cliente.setTelefoneAdicional(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TELEFONEADICIONAL)).replace("(", "").replace("-", "").replace(")", ""));
+                } else {
+                    cl_Cliente.setTelefoneAdicional("espaco");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FAX)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FAX)).trim().equals("")) {
+                    cl_Cliente.setFax(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FAX)).replace("(", "").replace("-", "").replace(")", ""));
+                    ;
+                } else {
+                    cl_Cliente.setFax("espaco");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CONTATO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CONTATO)).trim().equals("")) {
+                    cl_Cliente.setNomeContato(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CONTATO)).replace("'", ""));
+                } else {
+                    cl_Cliente.setNomeContato("espaco");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.EMAIL)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.EMAIL)).trim().equals("")) {
+                    cl_Cliente.setEmail(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.EMAIL)).replace("'", ""));
+                } else {
+                    cl_Cliente.setEmail("espaco");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPESSOA)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPESSOA)).trim().equals("")) {
+                    cl_Cliente.setTipoPessoa(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPESSOA)));
+                } else {
+                    cl_Cliente.setTipoPessoa("espaco");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPCLIENTE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPCLIENTE)).trim().equals("")) {
+                    cl_Cliente.setTipoCliente(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPCLIENTE)));
+                } else {
+                    cl_Cliente.setTipoCliente("espaco");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.OBSCLIENTE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.OBSCLIENTE)).trim().equals("")) {
+                    cl_Cliente.setObservacao(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.OBSCLIENTE)).replace("'", ""));
+                } else {
+                    cl_Cliente.setObservacao("espaco");
+                }
+                //tipoclienteString = "EXPRESSPLANO";
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTULTALTERACAO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTULTALTERACAO)).trim().equals("")) {
+                    cl_Cliente.setDtUltimaAlteracao(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTULTALTERACAO)));
+                } else {
+                    cl_Cliente.setDtUltimaAlteracao("espaco");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTCADASTRO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTCADASTRO)).trim().equals("")) {
+                    cl_Cliente.setDtCadastro(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.DTCADASTRO)));
+                } else {
+                    cl_Cliente.setDtCadastro("espaco");
+                }
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.VENDEDOR)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.VENDEDOR)).trim().equals("")) {
+                    cl_Cliente.setVendedor(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.VENDEDOR)));
+                } else {
+                    cl_Cliente.setVendedor("espaco");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.INSCESTADUAL)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.INSCESTADUAL)).trim().equals("")) {
+                    cl_Cliente.setInscEstadual(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.INSCESTADUAL)));
+                } else {
+                    cl_Cliente.setInscEstadual("espaco");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FIDELIDADE)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FIDELIDADE)).trim().equals("")) {
+                    cl_Cliente.setFidelidade(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.FIDELIDADE)));
+                } else {
+                    cl_Cliente.setFidelidade("espaco");
+                }
+
+                if (!rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPRECO)).equals("null") && !rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPRECO)).trim().equals("")) {
+                    cl_Cliente.setTipoPreco(rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.TIPOPRECO)));
+                } else {
+                    cl_Cliente.setTipoPreco("espaco");
+                }
+
+            }
+
+            return true;
+        }else{
+            return false;
+        }
+
+    }
+
+    public boolean fuAlteraClientePedido(){
+
+        if(mdl_Cliente.fuAlteraClientePedido(cl_Cliente.getId(), cl_Cliente.getCdCliente())){
+            return true;
+        }else{
+            return false;
+        }
+
+    }
+
+    public String fuBuscaTipoPrecoCliente(){
+
+        String vf_TipoPreco = "N";
+
+        try{
+            Cursor rs_TipoPreco = mdl_Cliente.fuBuscaTipoPrecoCliente(cl_Cliente.getCdCliente());
+            if(rs_TipoPreco.getCount() > 0){
+                vf_TipoPreco = rs_TipoPreco.getString(rs_TipoPreco.getColumnIndex(CriaBanco.TIPOPRECO));
+            }else{
+                vf_TipoPreco = "N";
+            }
+
+        }catch (Exception e){
+            vf_TipoPreco = "N";
+        }
+
+        return vf_TipoPreco;
+    }
+}
diff --git a/app/src/main/java/controllers/CTL_Filial.java b/app/src/main/java/controllers/CTL_Filial.java
new file mode 100644
index 0000000..c2023c1
--- /dev/null
+++ b/app/src/main/java/controllers/CTL_Filial.java
@@ -0,0 +1,37 @@
+package controllers;
+
+import android.content.Context;
+import android.database.Cursor;
+
+import classes.CL_Filial;
+import models.MDL_Filial;
+
+public class CTL_Filial {
+
+    CL_Filial cl_Filial;
+    MDL_Filial mdl_Filial;
+
+    Context cxt_Filial;
+
+    public Cursor rs_Filial;
+
+    public CTL_Filial(Context cxt_Filial, CL_Filial cl_Filial){
+
+        this.cl_Filial = cl_Filial;
+        this.cxt_Filial = cxt_Filial;
+        this.mdl_Filial = new MDL_Filial(this.cxt_Filial);
+
+    }
+
+    public String fuBuscaCdFilialSelecionada(){
+        try{
+
+            cl_Filial.setCdFilial(mdl_Filial.fuBuscaCdFilialSelecionada());
+
+            return cl_Filial.getCdFilial();
+
+        }catch (Exception e){
+            return "";
+        }
+    }
+}
diff --git a/app/src/main/java/controllers/CTL_ItemPedido.java b/app/src/main/java/controllers/CTL_ItemPedido.java
new file mode 100644
index 0000000..1e3dbe9
--- /dev/null
+++ b/app/src/main/java/controllers/CTL_ItemPedido.java
@@ -0,0 +1,490 @@
+package controllers;
+
+import android.content.Context;
+import android.database.Cursor;
+
+import com.example.desenvolvimento.navigationdrawercomercioexpress.CriaBanco;
+import com.example.desenvolvimento.navigationdrawercomercioexpress.Funcoes;
+
+import classes.CL_ItemPedido;
+import models.MDL_ItemPedido;
+
+public class CTL_ItemPedido {
+
+    Funcoes funcoes = new Funcoes();
+
+    CL_ItemPedido cl_ItemPedido;
+    MDL_ItemPedido mdl_ItemPedido;
+
+    Context cxt_ItemPedido;
+
+    public String vc_Mensagem;
+
+    public Cursor rs_ItemPedido;
+
+    public CTL_ItemPedido(Context context, CL_ItemPedido cl_ItemPedido){
+        this.cl_ItemPedido = cl_ItemPedido;
+        this.cxt_ItemPedido = context;
+        this.mdl_ItemPedido = new MDL_ItemPedido(context);
+
+    }
+
+    public boolean fuInserirItemPedido(){
+
+        if(mdl_ItemPedido.fuInserirItemPedido(cl_ItemPedido.getNumPedido(), cl_ItemPedido.getCdProduto(), cl_ItemPedido.getDescricao(),
+                cl_ItemPedido.getQtde(), cl_ItemPedido.getPercDesconto(), cl_ItemPedido.getVlDesconto(), cl_ItemPedido.getVlMaxDescPermitido(),
+                cl_ItemPedido.getVlUnitario(), cl_ItemPedido.getVlLiquido(), cl_ItemPedido.getVlTotal())){
+            return true;
+        }else{
+            return false;
+        }
+
+    }
+
+    public boolean fuAlterarItemPedido(){
+
+        if(mdl_ItemPedido.fuAlterarItemPedido(cl_ItemPedido.getNumPedido(), cl_ItemPedido.getCdProduto(),
+                cl_ItemPedido.getQtde(), cl_ItemPedido.getPercDesconto(), cl_ItemPedido.getVlDesconto(),
+                cl_ItemPedido.getVlUnitario(), cl_ItemPedido.getVlLiquido(), cl_ItemPedido.getVlTotal())){
+            return true;
+        }else{
+            return false;
+        }
+    }
+
+    public boolean fuDeletarItemPedido(){
+        if(mdl_ItemPedido.fuDeletarItemPedido(cl_ItemPedido.getNumPedido(), cl_ItemPedido.getCdProduto())){
+            return true;
+        }else{
+            return false;
+        }
+    }
+
+    public boolean fuCarregaTodosItensPedido() {
+        rs_ItemPedido = mdl_ItemPedido.fuCarregaItemPedido(cl_ItemPedido.getNumPedido());
+
+        if (rs_ItemPedido.getCount() > 0) {
+            return true;
+        } else {
+            return false;
+        }
+    }
+
+    public boolean fuCarregaItemPedidoCdItemPedido() {
+
+        rs_ItemPedido = mdl_ItemPedido.fuCarregaItemPedido(cl_ItemPedido.getNumPedido());
+
+        if (rs_ItemPedido.getCount() > 0) {
+
+            cl_ItemPedido = new CL_ItemPedido();
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID)).trim().equals("")) {
+                    cl_ItemPedido.setId(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID)).replace(" ", "espaco"));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setId("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.NUMPEDIDO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.NUMPEDIDO)).trim().equals("")) {
+                    cl_ItemPedido.setNumPedido(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.NUMPEDIDO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setNumPedido("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).trim().equals("")) {
+                    cl_ItemPedido.setCdProduto(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setCdProduto("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).trim().equals("")) {
+                    cl_ItemPedido.setDescricao(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setDescricao(" ");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)).trim().equals("")) {
+                    cl_ItemPedido.setQtde(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setQtde("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).trim().equals("")) {
+                    cl_ItemPedido.setPercDesconto(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setPercDesconto("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)).trim().equals("")) {
+                    cl_ItemPedido.setVlMaxDescPermitido(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setVlMaxDescPermitido("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).trim().equals("")) {
+                    cl_ItemPedido.setVlDesconto(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setVlDesconto("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).trim().equals("")) {
+                    cl_ItemPedido.setVlUnitario(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setVlUnitario("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)).trim().equals("")) {
+                    cl_ItemPedido.setVlLiquido(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setVlLiquido("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).trim().equals("")) {
+                    cl_ItemPedido.setVlTotal(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setVlTotal("0");
+            }
+
+            return true;
+        } else {
+            return false;
+        }
+
+    }
+
+    public boolean fuCarregaItemPedidoCdProduto() {
+
+        rs_ItemPedido = mdl_ItemPedido.fuCarregaProdutoItemPedido(cl_ItemPedido.getNumPedido(), cl_ItemPedido.getCdProduto());
+
+        if (rs_ItemPedido.getCount() > 0) {
+
+            cl_ItemPedido = new CL_ItemPedido();
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID)).trim().equals("")) {
+                    cl_ItemPedido.setId(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID)).replace(" ", "espaco"));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setId("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.NUMPEDIDO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.NUMPEDIDO)).trim().equals("")) {
+                    cl_ItemPedido.setNumPedido(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.NUMPEDIDO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setNumPedido("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).trim().equals("")) {
+                    cl_ItemPedido.setCdProduto(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setCdProduto("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).trim().equals("")) {
+                    cl_ItemPedido.setDescricao(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setDescricao(" ");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)).trim().equals("")) {
+                    cl_ItemPedido.setQtde(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setQtde("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).trim().equals("")) {
+                    cl_ItemPedido.setPercDesconto(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setPercDesconto("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)).trim().equals("")) {
+                    cl_ItemPedido.setVlMaxDescPermitido(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setVlMaxDescPermitido("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).trim().equals("")) {
+                    cl_ItemPedido.setVlDesconto(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setVlDesconto("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).trim().equals("")) {
+                    cl_ItemPedido.setVlUnitario(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setVlUnitario("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)).trim().equals("")) {
+                    cl_ItemPedido.setVlLiquido(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setVlLiquido("0");
+            }
+
+            try {
+                if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).trim().equals("")) {
+                    cl_ItemPedido.setVlTotal(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)));
+                }
+            } catch (Exception e) {
+                cl_ItemPedido.setVlTotal("0");
+            }
+
+            return true;
+        } else {
+            return false;
+        }
+
+    }
+
+    //Função para duplicar o pedido
+    public boolean fuDuplicarItensPedidoDuplicado(String numPedidoOriginal) {
+
+        String vf_NumPedidoNovo = cl_ItemPedido.getNumPedido();
+        rs_ItemPedido = mdl_ItemPedido.fuCarregaItemPedido(numPedidoOriginal);
+
+        if (rs_ItemPedido.getCount() > 0) {
+            while (!rs_ItemPedido.isAfterLast()) {
+
+                cl_ItemPedido = new CL_ItemPedido();
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID)).trim().equals("")) {
+                        cl_ItemPedido.setId(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID)).replace(" ", "espaco"));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setId("0");
+                }
+
+                try {
+                    cl_ItemPedido.setNumPedido(vf_NumPedidoNovo);
+                } catch (Exception e) {
+                    cl_ItemPedido.setNumPedido("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).trim().equals("")) {
+                        cl_ItemPedido.setCdProduto(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setCdProduto("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).trim().equals("")) {
+                        cl_ItemPedido.setDescricao(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setDescricao(" ");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)).trim().equals("")) {
+                        cl_ItemPedido.setQtde(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setQtde("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).trim().equals("")) {
+                        cl_ItemPedido.setPercDesconto(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setPercDesconto("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)).trim().equals("")) {
+                        cl_ItemPedido.setVlMaxDescPermitido(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setVlMaxDescPermitido("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).trim().equals("")) {
+                        cl_ItemPedido.setVlDesconto(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setVlDesconto("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).trim().equals("")) {
+                        cl_ItemPedido.setVlUnitario(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setVlUnitario("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)).trim().equals("")) {
+                        cl_ItemPedido.setVlLiquido(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setVlLiquido("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).trim().equals("")) {
+                        cl_ItemPedido.setVlTotal(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setVlTotal("0");
+                }
+
+                if (!mdl_ItemPedido.fuDuplicarItensPedido(cl_ItemPedido.getNumPedido(), cl_ItemPedido.getCdProduto(), cl_ItemPedido.getDescricao(),
+                        cl_ItemPedido.getQtde(), cl_ItemPedido.getPercDesconto(), cl_ItemPedido.getVlDesconto(), cl_ItemPedido.getVlMaxDescPermitido(),
+                        cl_ItemPedido.getVlUnitario(), cl_ItemPedido.getVlLiquido(), cl_ItemPedido.getVlTotal())) {
+                    vc_Mensagem = mdl_ItemPedido.vc_Mensagem;
+                    return false;
+                }
+
+                rs_ItemPedido.moveToNext();
+            }
+        }
+
+        return true;
+    }
+
+    public boolean fuCarregaItemPedidoAlteracaoId(){
+        rs_ItemPedido = mdl_ItemPedido.fuCarregaItemPedidoAlteracao(cl_ItemPedido.getNumPedido(), cl_ItemPedido.getId());
+
+        if (rs_ItemPedido.getCount() > 0) {
+            while (!rs_ItemPedido.isAfterLast()) {
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID)).trim().equals("")) {
+                        cl_ItemPedido.setId(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID)).replace(" ", "espaco"));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setId("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.NUMPEDIDO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.NUMPEDIDO)).trim().equals("")) {
+                        cl_ItemPedido.setNumPedido(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.NUMPEDIDO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setNumPedido("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).trim().equals("")) {
+                        cl_ItemPedido.setCdProduto(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setCdProduto("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).trim().equals("")) {
+                        cl_ItemPedido.setDescricao(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setDescricao(" ");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)).trim().equals("")) {
+                        cl_ItemPedido.setQtde(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setQtde("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).trim().equals("")) {
+                        cl_ItemPedido.setPercDesconto(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setPercDesconto("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)).trim().equals("")) {
+                        cl_ItemPedido.setVlMaxDescPermitido(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setVlMaxDescPermitido("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).trim().equals("")) {
+                        cl_ItemPedido.setVlDesconto(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setVlDesconto("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).trim().equals("")) {
+                        cl_ItemPedido.setVlUnitario(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setVlUnitario("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)).trim().equals("")) {
+                        cl_ItemPedido.setVlLiquido(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setVlLiquido("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).trim().equals("")) {
+                        cl_ItemPedido.setVlTotal(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setVlTotal("0");
+                }
+
+                rs_ItemPedido.moveToNext();
+            }
+        }
+
+        return true;
+    }
+
+}
diff --git a/app/src/main/java/controllers/CTL_Pedidos.java b/app/src/main/java/controllers/CTL_Pedidos.java
new file mode 100644
index 0000000..b40322d
--- /dev/null
+++ b/app/src/main/java/controllers/CTL_Pedidos.java
@@ -0,0 +1,335 @@
+package controllers;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.database.Cursor;
+
+import com.example.desenvolvimento.navigationdrawercomercioexpress.CriaBanco;
+import com.example.desenvolvimento.navigationdrawercomercioexpress.Funcoes;
+
+import classes.CL_ItemPedido;
+import classes.CL_Pedidos;
+import models.MDL_Pedidos;
+
+public class CTL_Pedidos {
+
+    Funcoes funcoes;
+
+    CL_Pedidos cl_Pedidos;
+    MDL_Pedidos mdl_Pedidos;
+
+    Context cxt_Pedidos;
+
+    public String vc_Mensagem;
+
+    public Cursor rs_Pedido;
+
+    public CTL_Pedidos(Context context, CL_Pedidos cl_Pedidos) {
+        this.cl_Pedidos = cl_Pedidos;
+        this.mdl_Pedidos = new MDL_Pedidos(context);
+        this.cxt_Pedidos = context;
+
+        funcoes = new Funcoes();
+    }
+
+    public String fuCarregaNumPedido(){
+        String vf_NumPedido = "";
+        try{
+
+            rs_Pedido = mdl_Pedidos.fuCarregaNumPedido();
+            if (rs_Pedido.getCount() > 0){
+                while(!rs_Pedido.isAfterLast()) {
+                    vf_NumPedido = rs_Pedido.getString(rs_Pedido.getColumnIndex(CriaBanco.ID));
+                    rs_Pedido.moveToNext();
+                }
+            }else{
+                vf_NumPedido = "";
+            }
+
+        }catch (Exception e){
+            vf_NumPedido = "";
+        }
+
+        return vf_NumPedido;
+    }
+
+    public boolean fuAbrirPedido(){
+
+        if(mdl_Pedidos.fuAbrirPedido(cl_Pedidos.getCdCliente(), cl_Pedidos.getNomeRzSocial(), cl_Pedidos.getDtEmissao(), cl_Pedidos.getCdVendedor(), suDescricaoSituacao())){
+            return true;
+        }else{
+            return false;
+        }
+
+    }
+
+    public boolean fuAlterarPedido(){
+        if(mdl_Pedidos.fuAlterarPedido(cl_Pedidos.getNumPedido(), cl_Pedidos.getCdCliente(), cl_Pedidos.getNomeRzSocial(), cl_Pedidos.getCondPgto(),
+                cl_Pedidos.getVlTotal(), cl_Pedidos.getPercDesconto(), cl_Pedidos.getVlDesconto(), cl_Pedidos.getVlFrete(), cl_Pedidos.getObsPedido(), suDescricaoSituacao())){
+            return true;
+        }else{
+            return false;
+        }
+    }
+
+    public boolean fuAlterarSituacaoPedido(){
+        if(mdl_Pedidos.fuAlterarSituacaoPedido(cl_Pedidos.getNumPedido(), suDescricaoSituacao())){
+            return true;
+        }else{
+            vc_Mensagem = mdl_Pedidos.vc_Mensagem;
+            return false;
+        }
+    }
+
+    public boolean fuDeletarPedido(){
+        if(mdl_Pedidos.fuDeletarPedido(cl_Pedidos.getNumPedido())){
+            return true;
+        }else{
+            vc_Mensagem = mdl_Pedidos.vc_Mensagem;
+            return false;
+        }
+    }
+
+    protected String suDescricaoSituacao(){
+
+        String vf_Situacao = "";
+
+        if(cl_Pedidos.getFgSituacao().equals("A")){
+            vf_Situacao = "ABERTO";
+        }else if(cl_Pedidos.getFgSituacao().equals("E")){
+            vf_Situacao = "ENVIADO";
+        }else if(cl_Pedidos.getFgSituacao().equals("C")){
+            vf_Situacao = "CANCELADO";
+        }
+
+        return vf_Situacao;
+    }
+
+    public boolean fuPossuiPedidosAbertos() {
+
+        try {
+            rs_Pedido = mdl_Pedidos.fuCarregaPedidosAbertos();
+
+            if (rs_Pedido.getCount() > 0) {
+                return true;
+            } else {
+                return false;
+            }
+        }catch (Exception e){
+            return false;
+        }
+
+    }
+
+    public boolean fuCarregaTodosPedidos(String nomeRzSocial){
+
+        try {
+            rs_Pedido = mdl_Pedidos.fuCarregarTodosPedidos(nomeRzSocial);
+
+            if(rs_Pedido.getCount() > 0){
+                return true;
+            }else{
+                return false;
+            }
+        }catch (Exception e){
+            return false;
+        }
+    }
+
+    public boolean fuCarregaTodosPedidosEnviados(){
+        try
+        {
+            rs_Pedido = mdl_Pedidos.fuCarregaTodosPedidosEnviados();
+            if(rs_Pedido.getCount() > 0){
+                return true;
+            }else{
+                return false;
+            }
+
+        }catch (Exception e){
+            return false;
+        }
+    }
+
+    public boolean fuCarregarPedido() {
+
+        rs_Pedido = mdl_Pedidos.fuCarregaPedido(cl_Pedidos.getNumPedido());
+
+        if (rs_Pedido.getCount() > 0) {
+
+            while (!rs_Pedido.isAfterLast()) {
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.ID)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.ID)).trim().equals("")) {
+                        cl_Pedidos.setNumPedido(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.ID)));
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setNumPedido("0");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).trim().equals("")) {
+
+                        String vf_VlTotal = "";
+
+                        CL_ItemPedido cl_ItemPedido = new CL_ItemPedido();
+                        cl_ItemPedido.setNumPedido(cl_Pedidos.getNumPedido());
+
+                        CTL_ItemPedido ctl_ItensPedido = new CTL_ItemPedido(cxt_Pedidos, cl_ItemPedido);
+
+                        double vf_VlTotalDouble = 0.0;
+
+                        if(ctl_ItensPedido.fuCarregaTodosItensPedido()) {
+
+                            Cursor rs_ItemPedido = ctl_ItensPedido.rs_ItemPedido;
+
+                            while (!rs_ItemPedido.isAfterLast()) {
+
+                                vf_VlTotalDouble = vf_VlTotalDouble + Double.parseDouble(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).replace(",", "."));
+                                rs_ItemPedido.moveToNext();
+
+                            }
+                        }
+
+                        if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).trim().equals("")) {
+                            vf_VlTotalDouble = vf_VlTotalDouble - Double.parseDouble(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).replace(",", "."));
+                        }
+
+                        vf_VlTotal = String.format("%.2f", vf_VlTotalDouble);
+                        cl_Pedidos.setVlTotal(vf_VlTotal.replace(".", "").replace(",", "."));
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setVlTotal("0.00");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.DTEMISSAO)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.DTEMISSAO)).trim().equals("")) {
+                        cl_Pedidos.setDtEmissao(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.DTEMISSAO)));
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setDtEmissao("");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CDVENDEDOR)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CDVENDEDOR)).trim().equals("")) {
+                        cl_Pedidos.setCdVendedor(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CDVENDEDOR)));
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setCdVendedor("0");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CDEMITENTE)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CDEMITENTE)).trim().equals("")) {
+                        cl_Pedidos.setCdCliente(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CDEMITENTE)));
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setCdCliente("0");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.RZSOCIAL)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.RZSOCIAL)).trim().equals("")) {
+                        cl_Pedidos.setNomeRzSocial(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.RZSOCIAL)));
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setNomeRzSocial("");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).trim().equals("")) {
+                        cl_Pedidos.setPercDesconto(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)));
+                    } else {
+                        cl_Pedidos.setPercDesconto("0");
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setPercDesconto("0");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).trim().equals("")) {
+                        cl_Pedidos.setVlDesconto(String.format("%.2f", Double.parseDouble(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)))));
+                    } else {
+                        cl_Pedidos.setVlDesconto("0");
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setVlDesconto("0");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLFRETE)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLFRETE)).trim().equals("")) {
+                        cl_Pedidos.setVlFrete(String.format("%.2f", Double.parseDouble(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLFRETE)))));
+                    } else {
+                        cl_Pedidos.setVlFrete("0");
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setVlFrete("0");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CONDPGTO)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CONDPGTO)).trim().equals("")) {
+                        cl_Pedidos.setCondPgto(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CONDPGTO)));
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setCondPgto("DINHEIRO");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.FGSITUACAO)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.FGSITUACAO)).trim().equals("")) {
+                        cl_Pedidos.setFgSituacao(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.FGSITUACAO)).substring(0, 1));
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setFgSituacao("A");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.OBS)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.OBS)).trim().equals("")) {
+                        cl_Pedidos.setObsPedido(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.OBS)));
+                    } else {
+                        cl_Pedidos.setObsPedido("");
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setObsPedido("");
+                }
+
+                rs_Pedido.moveToNext();
+
+            }
+            return true;
+        } else {
+            return false;
+        }
+    }
+
+    //Função para duplicar o pedido
+    public boolean fuDuplicarPedido() {
+
+        cl_Pedidos.setDtEmissao(funcoes.getDateTime());
+
+        if (mdl_Pedidos.fuDuplicarPedido(cl_Pedidos.getCdCliente(), cl_Pedidos.getNomeRzSocial(), cl_Pedidos.getDtEmissao(),
+                cl_Pedidos.getCdVendedor(), cl_Pedidos.getCondPgto(), cl_Pedidos.getVlTotal(), cl_Pedidos.getPercDesconto(),
+                cl_Pedidos.getVlDesconto().replace(",", "."), cl_Pedidos.getVlFrete().replace(",", "."), cl_Pedidos.getObsPedido(), cl_Pedidos.getFgSituacao())) {
+            cl_Pedidos.setNumPedido(fuCarregaNumPedido());
+            return true;
+        } else {
+            vc_Mensagem = mdl_Pedidos.vc_Mensagem;
+            return false;
+        }
+    }
+
+    public String fuBuscarCdClientePedido(){
+
+        String vf_CdCliente = "";
+
+        try {
+            Cursor rs_Cliente = mdl_Pedidos.fuCarregarClientePedido(cl_Pedidos.getNumPedido());
+            if(rs_Cliente.getCount() > 0){
+                vf_CdCliente = rs_Cliente.getString(rs_Cliente.getColumnIndex(CriaBanco.CDEMITENTE));
+            }else{
+                vf_CdCliente = "";
+            }
+        }catch (Exception e){
+
+        }
+
+        return vf_CdCliente;
+    }
+
+}
diff --git a/app/src/main/java/controllers/CTL_Produtos.java b/app/src/main/java/controllers/CTL_Produtos.java
new file mode 100644
index 0000000..f6a0e22
--- /dev/null
+++ b/app/src/main/java/controllers/CTL_Produtos.java
@@ -0,0 +1,296 @@
+package controllers;
+
+import android.content.Context;
+import android.database.Cursor;
+
+import com.example.desenvolvimento.navigationdrawercomercioexpress.CriaBanco;
+import com.example.desenvolvimento.navigationdrawercomercioexpress.Funcoes;
+
+import classes.CL_Produtos;
+import models.MDL_Produtos;
+
+public class CTL_Produtos {
+
+    Funcoes funcoes;
+
+    CL_Produtos cl_Produtos;
+    MDL_Produtos mdl_Produtos;
+
+    Context cxt_Produtos;
+
+    public String vc_Mensagem;
+
+    public Cursor rs_Produto;
+
+    public CTL_Produtos(Context context, CL_Produtos cl_Produtos) {
+        this.cl_Produtos = cl_Produtos;
+        this.mdl_Produtos = new MDL_Produtos(context);
+        this.cxt_Produtos = context;
+
+        funcoes = new Funcoes();
+    }
+
+    public boolean fuCarregaProduto(){
+        try {
+            rs_Produto = mdl_Produtos.fuCarregaProdutosById(cl_Produtos.getId());
+
+            if(rs_Produto.getCount() > 0){
+
+                while (!rs_Produto.isAfterLast()){
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).equals("null")) {
+                            cl_Produtos.setCdProduto(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setCdProduto("0");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).equals("null")) {
+                            cl_Produtos.setDescricao(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCRICAO)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescricao("");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.ESTOQUEATUAL)).equals("null")) {
+                            cl_Produtos.setEstoqueAtual(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.ESTOQUEATUAL)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setEstoqueAtual("0");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)).equals("null")) {
+                            cl_Produtos.setVlUnitario(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setVlUnitario("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.VALORATACADO)).equals("null")) {
+                            cl_Produtos.setVlAtacado(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.VALORATACADO)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setVlAtacado("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDO)).equals("null")) {
+                            cl_Produtos.setDescMaxPermitido(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDO)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescMaxPermitido("0.00");
+                    }
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOA)).equals("null")) {
+                            cl_Produtos.setDescMaxPermitidoA(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOA)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescMaxPermitidoA("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOB)).equals("null")) {
+                            cl_Produtos.setDescMaxPermitidoB(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOB)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescMaxPermitidoB("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOC)).equals("null")) {
+                            cl_Produtos.setDescMaxPermitidoC(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOC)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescMaxPermitidoC("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOD)).equals("null")) {
+                            cl_Produtos.setDescMaxPermitidoD(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOD)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescMaxPermitidoD("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOE)).equals("null")) {
+                            cl_Produtos.setDescMaxPermitidoE(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOE)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescMaxPermitidoE("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOFIDELIDADE)).equals("null")) {
+                            cl_Produtos.setDescMaxPermitidoFidelidade(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOFIDELIDADE)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescMaxPermitidoFidelidade("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DTULTALTERACAO)).equals("null")) {
+                            cl_Produtos.setDtUltimaAlteracao(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DTULTALTERACAO)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDtUltimaAlteracao("");
+                    }
+
+                    rs_Produto.moveToNext();
+                }
+            }else{
+                return false;
+            }
+
+            return true;
+        }catch (Exception e){
+            vc_Mensagem = e.getMessage();
+            return false;
+        }
+    }
+
+    public boolean fuCarregaProdutoCdProduto(){
+        try {
+            rs_Produto = mdl_Produtos.fuCarregaProdutosCdProduto(cl_Produtos.getCdProduto());
+
+            if(rs_Produto.getCount() > 0){
+
+                while (!rs_Produto.isAfterLast()){
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).equals("null")) {
+                            cl_Produtos.setCdProduto(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setCdProduto("0");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).equals("null")) {
+                            cl_Produtos.setDescricao(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCRICAO)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescricao("");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.ESTOQUEATUAL)).equals("null")) {
+                            cl_Produtos.setEstoqueAtual(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.ESTOQUEATUAL)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setEstoqueAtual("0");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)).equals("null")) {
+                            cl_Produtos.setVlUnitario(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.VALORUNITARIO)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setVlUnitario("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.VALORATACADO)).equals("null")) {
+                            cl_Produtos.setVlAtacado(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.VALORATACADO)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setVlAtacado("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDO)).equals("null")) {
+                            cl_Produtos.setDescMaxPermitido(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDO)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescMaxPermitido("0.00");
+                    }
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOA)).equals("null")) {
+                            cl_Produtos.setDescMaxPermitidoA(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOA)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescMaxPermitidoA("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOB)).equals("null")) {
+                            cl_Produtos.setDescMaxPermitidoB(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOB)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescMaxPermitidoB("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOC)).equals("null")) {
+                            cl_Produtos.setDescMaxPermitidoC(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOC)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescMaxPermitidoC("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOD)).equals("null")) {
+                            cl_Produtos.setDescMaxPermitidoD(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOD)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescMaxPermitidoD("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOE)).equals("null")) {
+                            cl_Produtos.setDescMaxPermitidoE(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOE)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescMaxPermitidoE("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOFIDELIDADE)).equals("null")) {
+                            cl_Produtos.setDescMaxPermitidoFidelidade(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DESCMAXPERMITIDOFIDELIDADE)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDescMaxPermitidoFidelidade("0.00");
+                    }
+
+                    try {
+                        if (!rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DTULTALTERACAO)).equals("null")) {
+                            cl_Produtos.setDtUltimaAlteracao(rs_Produto.getString(rs_Produto.getColumnIndexOrThrow(CriaBanco.DTULTALTERACAO)));
+                        }
+                    } catch (Exception e) {
+                        cl_Produtos.setDtUltimaAlteracao("");
+                    }
+
+                    rs_Produto.moveToNext();
+                }
+            }else{
+                return false;
+            }
+
+            return true;
+        }catch (Exception e){
+            vc_Mensagem = e.getMessage();
+            return false;
+        }
+    }
+
+    public String fuBuscaValorAtacado(){
+        String vf_VlAtacado = "";
+        try {
+            Cursor rs_VlAtacado = mdl_Produtos.fuBuscaValorAtacado(cl_Produtos.getCdProduto());
+            if(rs_VlAtacado.getCount() > 0){
+                vf_VlAtacado = rs_VlAtacado.getString(rs_VlAtacado.getColumnIndex(CriaBanco.VALORATACADO));
+            }else{
+                vf_VlAtacado = "0.00";
+            }
+        }catch (Exception e){
+            vf_VlAtacado = "0.00";
+        }
+
+        return vf_VlAtacado;
+    }
+}
diff --git a/app/src/main/java/controllers/CTL_Usuario.java b/app/src/main/java/controllers/CTL_Usuario.java
new file mode 100644
index 0000000..eea907a
--- /dev/null
+++ b/app/src/main/java/controllers/CTL_Usuario.java
@@ -0,0 +1,43 @@
+package controllers;
+
+import android.content.Context;
+import android.database.Cursor;
+
+import com.example.desenvolvimento.navigationdrawercomercioexpress.CriaBanco;
+
+import classes.CL_Usuario;
+import models.MDL_Usuario;
+
+public class CTL_Usuario {
+
+    CL_Usuario cl_Usuario;
+    MDL_Usuario mdl_Usuario;
+
+    Context cxt_Usuario;
+
+    public Cursor rs_Usuario;
+
+    public CTL_Usuario(Context cxt_Usuario, CL_Usuario cl_Usuario){
+
+        this.cl_Usuario = cl_Usuario;
+        this.cxt_Usuario = cxt_Usuario;
+        this.mdl_Usuario = new MDL_Usuario(this.cxt_Usuario);
+
+    }
+
+    public String fuSelecionarVendedor(){
+
+        String vf_CdVendedor = "";
+
+        rs_Usuario = mdl_Usuario.fuSelecionarVendedor();
+
+        if(rs_Usuario.getCount() > 0){
+            vf_CdVendedor = rs_Usuario.getString(rs_Usuario.getColumnIndex(CriaBanco.CDVENDEDORDEFAULT));
+        }else{
+            vf_CdVendedor = "";
+        }
+        rs_Usuario.close();
+
+        return vf_CdVendedor;
+    }
+}
diff --git a/app/src/main/java/controllers/CTL_VisaoGeral.java b/app/src/main/java/controllers/CTL_VisaoGeral.java
new file mode 100644
index 0000000..be90603
--- /dev/null
+++ b/app/src/main/java/controllers/CTL_VisaoGeral.java
@@ -0,0 +1,190 @@
+package controllers;
+
+import android.content.Context;
+import android.database.Cursor;
+
+import com.example.desenvolvimento.navigationdrawercomercioexpress.CriaBanco;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import classes.CL_VisaoGeral;
+import models.MDL_Clientes;
+import models.MDL_Pedidos;
+import models.MDL_Produtos;
+
+public class CTL_VisaoGeral {
+
+    CL_VisaoGeral cl_VisaoGeral;
+
+    MDL_Produtos mdl_Produtos;
+    MDL_Pedidos mdl_Pedidos;
+
+    Context cxt_VisaoGeral;
+
+    public String vc_Mensagem;
+
+
+    public CTL_VisaoGeral(Context contexto, CL_VisaoGeral cl_VisaoGeral){
+        this.cxt_VisaoGeral = contexto;
+        this.cl_VisaoGeral = cl_VisaoGeral;
+        this.mdl_Pedidos = new MDL_Pedidos(cxt_VisaoGeral);
+        this.mdl_Produtos = new MDL_Produtos(cxt_VisaoGeral);
+    }
+
+    public boolean fu_ValidarVendaCadastrada(){
+
+        try {
+            if (mdl_Pedidos.fu_ValidarPossuiPedido()) {
+                return true;
+            } else {
+                return false;
+            }
+        }catch (Exception e){
+            return false;
+        }
+
+    }
+
+    public boolean fu_CarregarMovimentacaoDiaria(String dtMovimentacao){
+
+        double vf_VlVendaBruto = 0.0;
+        double vf_VlVendaDesconto = 0.0;
+        double vf_VlVendaLiquido = 0.0;
+        double vf_vlLucroMedio = 0.0;
+
+        try {
+            if (mdl_Pedidos.fu_BuscarMovimentacaoDiaria(dtMovimentacao)) {
+
+                Cursor rs_Movimentacao = mdl_Pedidos.rs_Pedido;
+
+                if (rs_Movimentacao != null) {
+                    if (rs_Movimentacao.getCount() > 0) {
+                        int countCursor = 0;
+                        rs_Movimentacao.moveToFirst();
+
+                        while (countCursor < rs_Movimentacao.getCount()) {
+                            String vf_VlDescontoString = rs_Movimentacao.getString(rs_Movimentacao.getColumnIndex(CriaBanco.VLDESCONTO));
+                            double vf_VlDescontoVenda = 0.0;
+                            if(vf_VlDescontoString.trim().equals("")){
+                                vf_VlDescontoVenda += 0.0;
+                            }else{
+                                vf_VlDescontoVenda += Double.parseDouble(rs_Movimentacao.getString(rs_Movimentacao.getColumnIndex(CriaBanco.VLDESCONTO)).replace(",", "."));
+                            }
+                            String vf_VlTotalString = rs_Movimentacao.getString(rs_Movimentacao.getColumnIndex(CriaBanco.VLTOTAL)).replace(",", ".");
+                            double vf_VlTotal = 0.0;
+                            if(vf_VlTotalString.trim().equals("")){
+                                vf_VlTotal += 0.0;
+                            }else{
+                                vf_VlTotal += Double.parseDouble(vf_VlTotalString.replace(".", "").replace(",", "."));
+                            }
+
+                            vf_VlVendaBruto += vf_VlTotal + vf_VlDescontoVenda;
+                            vf_VlVendaDesconto += vf_VlDescontoVenda;
+                            vf_VlVendaLiquido += vf_VlTotal;
+
+                            countCursor ++;
+                            rs_Movimentacao.moveToNext();
+                        }
+
+                        cl_VisaoGeral.setVlVendaBruto(vf_VlVendaBruto);
+                        cl_VisaoGeral.setVlVendaDesconto(vf_VlVendaDesconto);
+                        cl_VisaoGeral.setVlVendaLiquido(vf_VlVendaLiquido);
+                    } else {
+                        vc_Mensagem = mdl_Pedidos.vc_Mensagem;
+                        return false;
+                    }
+                } else {
+                    vc_Mensagem = mdl_Pedidos.vc_Mensagem;
+                    return false;
+                }
+            } else {
+                vc_Mensagem = mdl_Pedidos.vc_Mensagem;
+                return false;
+            }
+        }catch (Exception e){
+            vc_Mensagem = mdl_Pedidos.vc_Mensagem;
+            return false;
+        }
+
+        return true;
+    }
+
+    public boolean fu_CarregarDadosTipoVenda(){
+
+        int vf_CountTipoVenda = 0;
+        int vf_CountCanceladosTipoVenda = 0;
+        double vf_VlDescontoTipoVenda = 0.0;
+        double vf_VlTotalTipoVenda = 0.0;
+
+        Cursor rs_Venda = mdl_Pedidos.fu_SelecionarTodosPedidos();
+
+        if(rs_Venda != null){
+            if(rs_Venda.getCount() > 0) {
+                int count = 0;
+                while (count < rs_Venda.getCount()) {
+                    try {
+                        if (rs_Venda.getString(rs_Venda.getColumnIndex(CriaBanco.FGSITUACAO)).equals("ABERTO")) {
+                            vf_CountTipoVenda += 1;
+
+                            if (rs_Venda.getString(rs_Venda.getColumnIndex(CriaBanco.VLDESCONTO)).trim().equals("")) {
+                                vf_VlDescontoTipoVenda += 0.0;
+                            } else {
+                                vf_VlDescontoTipoVenda += Double.parseDouble(rs_Venda.getString(rs_Venda.getColumnIndex(CriaBanco.VLDESCONTO)));
+                            }
+                            String vf_VlTotal = rs_Venda.getString(rs_Venda.getColumnIndex(CriaBanco.VLTOTAL)).replace("Total Liquido do Pedido: R$", "");
+                            if (vf_VlTotal.trim().equals("")) {
+                                vf_VlTotalTipoVenda += 0.0;
+                            } else {
+                                vf_VlTotalTipoVenda += Double.parseDouble(vf_VlTotal.replace(".", "").replace(",", "."));
+                            }
+                        } else if (rs_Venda.getString(rs_Venda.getColumnIndex(CriaBanco.FGSITUACAO)).equals("CANCELADO")) {
+                            vf_CountCanceladosTipoVenda += 1;
+                        }
+                    }catch (Exception e){
+
+                    }
+                    count += 1;
+
+                    rs_Venda.moveToNext();
+                }
+
+                cl_VisaoGeral.setCountTipoVenda(vf_CountTipoVenda);
+                cl_VisaoGeral.setCountCanceladosTipoVenda(vf_CountCanceladosTipoVenda);
+                cl_VisaoGeral.setVlDescontoTipoVenda(vf_VlDescontoTipoVenda);
+                cl_VisaoGeral.setVlTotalTipoVenda(vf_VlTotalTipoVenda);
+
+            }else{
+                cl_VisaoGeral.setCountTipoVenda(0);
+                cl_VisaoGeral.setCountCanceladosTipoVenda(0);
+                cl_VisaoGeral.setVlDescontoTipoVenda(0.00);
+                cl_VisaoGeral.setVlTotalTipoVenda(0.00);
+            }
+        }
+
+        return true;
+    }
+
+    public int fu_BuscarProdutosAtencao(){
+
+        vc_Mensagem = "";
+        int vf_CountProdutosAtencao = 0;
+
+        try {
+
+            vf_CountProdutosAtencao = mdl_Produtos.fu_BuscarProdutosAtencao();
+            if(vf_CountProdutosAtencao == 0){
+                if(!mdl_Produtos.vc_Mensagem.trim().equals("")){
+                    vc_Mensagem = mdl_Produtos.vc_Mensagem;
+                }
+            }
+
+        }catch (Exception e){
+            vc_Mensagem = e.getMessage();
+            return 0;
+        }
+
+        return vf_CountProdutosAtencao;
+    }
+
+}
diff --git a/app/src/main/java/models/MDL_Clientes.java b/app/src/main/java/models/MDL_Clientes.java
new file mode 100644
index 0000000..34c4256
--- /dev/null
+++ b/app/src/main/java/models/MDL_Clientes.java
@@ -0,0 +1,109 @@
+package models;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+
+import com.example.desenvolvimento.navigationdrawercomercioexpress.CriaBanco;
+
+public class MDL_Clientes {
+
+    private SQLiteDatabase db;
+    private CriaBanco banco;
+
+    //
+    public String [] arr_CamposCliente = {banco.ID, banco.RZSOCIAL, banco.NMFANTASIA, banco.CEP, banco.ENDERECO,
+            banco.NUMERO, banco.COMPLEMENTO, banco.BAIRRO, banco.UF, banco.CIDADE, banco.CNPJ,
+            banco.TELEFONE, banco.TELEFONEADICIONAL, banco.FAX, banco.CONTATO, banco.EMAIL, banco.TIPCLIENTE,
+            banco.VENDEDOR, banco.DTULTALTERACAO, banco.DTCADASTRO, banco.TIPOPESSOA, banco.FGSINCRONIZADO, banco.OBSCLIENTE,
+            banco.CLASSIFICACAO, banco.INSCESTADUAL, banco.TIPOPRECO, banco.FIDELIDADE};
+
+    public MDL_Clientes(Context context)
+    {
+        banco = new CriaBanco(context);
+    }
+
+
+    //---------------Função para carregar os dados do cliente pelo seu codigo de cliente---------------------------------
+    public Cursor fuCarregaCliente(String cdCliente){
+        Cursor cursor;
+        String[] campos = arr_CamposCliente;
+        String where = CriaBanco.CDCLIENTE + " = " + cdCliente + "";
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELA, campos, where, null, null, null, null, null);
+
+        if(cursor!=null){
+            cursor.moveToFirst();
+        }
+        db.close();
+        return cursor;
+    }
+
+    public Cursor fuCarregaClienteId(String id){
+        Cursor cursor;
+        String[] campos = arr_CamposCliente;
+        String where = CriaBanco.ID + " = " + id + "";
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELA, campos, where, null, null, null, null, null);
+
+        if(cursor!=null){
+            cursor.moveToFirst();
+        }
+        db.close();
+        return cursor;
+    }
+
+    //---------------Função para carregar os dados do cliente pelo seu cpf ou cnpj ---------------------------------
+    public Cursor fuCarregaClienteCPFCNPJ(String cpfCnpj){
+        Cursor cursor;
+        String[] campos = arr_CamposCliente;
+        String where = CriaBanco.CDCLIENTE + " = '" + cpfCnpj + "'";
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELA, campos, where, null, null, null, null, null);
+
+        if(cursor!=null){
+            cursor.moveToFirst();
+        }
+        db.close();
+        return cursor;
+    }
+
+    public boolean fuAlteraClientePedido(String idCliente, String cdCliente){
+        ContentValues valores;
+        String where;
+        long resultado;
+        db = banco.getWritableDatabase();
+
+        where = CriaBanco.ID + " = " + idCliente;
+
+        valores = new ContentValues();
+        valores.put(CriaBanco.CDCLIENTE, cdCliente);
+        valores.put(CriaBanco.FGSINCRONIZADO, "S");
+
+        resultado = db.update(CriaBanco.TABELA, valores, where, null);
+        db.close();
+
+        if(resultado == -1){
+            return false;
+        }else{
+            return true;
+        }
+    }
+
+    public Cursor fuBuscaTipoPrecoCliente(String cdCliente){
+
+        Cursor cursor;
+        String[] campos = {banco.TIPOPRECO};
+        String where = CriaBanco.CDCLIENTE + " = '" + cdCliente + "'";
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELA, campos, where, null, null, null, null);
+
+        if(cursor != null){
+            cursor.moveToFirst();
+        }
+        db.close();
+
+        return cursor;
+    }
+}
diff --git a/app/src/main/java/models/MDL_Filial.java b/app/src/main/java/models/MDL_Filial.java
new file mode 100644
index 0000000..5e77cdb
--- /dev/null
+++ b/app/src/main/java/models/MDL_Filial.java
@@ -0,0 +1,42 @@
+package models;
+
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+
+import com.example.desenvolvimento.navigationdrawercomercioexpress.CriaBanco;
+
+public class MDL_Filial {
+
+    private SQLiteDatabase db;
+    private CriaBanco banco;
+
+    //
+    public String [] arr_CamposFilial = {banco.ID, banco.CDFILIAL, banco.FILIAL};
+
+    public MDL_Filial(Context context)
+    {
+        banco = new CriaBanco(context);
+    }
+
+
+    //----------------------- Função para buscar o código da filial selecionada ----------------------------------------------------
+    public String fuBuscaCdFilialSelecionada(){
+        Cursor cursor;
+        String[] campos = arr_CamposFilial;
+        String where = CriaBanco.FGSELECIONADA + "= 'S'";
+        String vf_CdFilial = "N";
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELAFILIAL, campos, where, null, null, null, null);
+
+        if (cursor != null) {
+            cursor.moveToFirst();
+            vf_CdFilial = cursor.getString(cursor.getColumnIndex(CriaBanco.CDFILIAL));
+        }else{
+            vf_CdFilial = "";
+        }
+        db.close();
+
+        return vf_CdFilial;
+    }
+}
diff --git a/app/src/main/java/models/MDL_ItemPedido.java b/app/src/main/java/models/MDL_ItemPedido.java
new file mode 100644
index 0000000..c429539
--- /dev/null
+++ b/app/src/main/java/models/MDL_ItemPedido.java
@@ -0,0 +1,197 @@
+package models;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+
+import com.example.desenvolvimento.navigationdrawercomercioexpress.CriaBanco;
+
+public class MDL_ItemPedido {
+
+    private SQLiteDatabase db;
+    private CriaBanco banco;
+
+    public String vc_Mensagem = "";
+
+    public Cursor rs_ItemPedido;
+
+    public String [] arr_CamposItemPedido = {banco.ID, banco.NUMPEDIDO, banco.CDPRODUTO, banco.DESCRICAO, banco.QTDE,
+            banco.PERCDESCONTO, banco.VLMAXDESCPERMITIDO, banco.VLDESCONTO, banco.VLUNITARIO,
+            banco.VLLIQUIDO, banco.VLTOTAL};
+
+    public MDL_ItemPedido(Context context)
+    {
+        banco = new CriaBanco(context);
+    }
+
+    public boolean fuInserirItemPedido(String numPedido, String cdProduto, String descricao, String qtde, String percDesconto,
+                                      String vlDesconto, String vlMaxDescPermitido, String vlUnitario, String vlLiquido, String vlTotal){
+
+        ContentValues valores;
+        long resultado;
+
+        db = banco.getWritableDatabase();
+        valores = new ContentValues();
+        valores.put(CriaBanco.NUMPEDIDO, numPedido);
+        valores.put(CriaBanco.CDPRODUTO, cdProduto);
+        valores.put(CriaBanco.DESCRICAO, descricao);
+        valores.put(CriaBanco.QTDE, qtde);
+        valores.put(CriaBanco.PERCDESCONTO, percDesconto);
+        valores.put(CriaBanco.VLDESCONTO, vlDesconto);
+        valores.put(CriaBanco.VLMAXDESCPERMITIDO, vlMaxDescPermitido);
+        valores.put(CriaBanco.VLUNITARIO, vlUnitario);
+        valores.put(CriaBanco.VLLIQUIDO, vlLiquido);
+        valores.put(CriaBanco.VLTOTAL, vlTotal);
+
+        resultado = db.insert(CriaBanco.TABELAITEMPEDIDO, null, valores);
+        db.close();
+
+        if(resultado == -1){
+            return false;
+        }else{
+            return true;
+        }
+
+    }
+
+    //---------------------------Função para alteração dos itens incluidos no pedido -----------------------------------------
+    public boolean fuAlterarItemPedido(String numPedido, String cdProduto, String qtde, String percDesconto,
+                                       String vlDesconto, String vlUnitario, String vlLiquido, String vlTotal){
+
+        ContentValues valores;
+        String where;
+        long resultado;
+        db = banco.getWritableDatabase();
+
+        where = CriaBanco.NUMPEDIDO + "=" + numPedido + " AND " + CriaBanco.CDPRODUTO + "='" + cdProduto + "'";
+
+        valores = new ContentValues();
+        valores.put(CriaBanco.QTDE, qtde);
+        valores.put(CriaBanco.PERCDESCONTO, percDesconto);
+        valores.put(CriaBanco.VLDESCONTO, vlDesconto);
+        valores.put(CriaBanco.VLLIQUIDO, vlLiquido);
+        valores.put(CriaBanco.VLTOTAL, vlTotal);
+        valores.put(CriaBanco.VLUNITARIO, vlUnitario);
+
+        resultado = db.update(CriaBanco.TABELAITEMPEDIDO, valores, where, null);
+        db.close();
+
+        if(resultado == -1){
+            return false;
+        }else{
+            return true;
+        }
+    }
+
+    public boolean fuDeletarItemPedido(String numPedido, String cdProduto){
+
+        String where = CriaBanco.NUMPEDIDO + "=" + numPedido + " AND " + CriaBanco.CDPRODUTO + "='" + cdProduto + "'";
+        long resultado;
+
+        db = banco.getReadableDatabase();
+        resultado = db.delete(CriaBanco.TABELAITEMPEDIDO, where, null);
+        db.close();
+
+        if(resultado == -1){
+            return false;
+        }else{
+            return true;
+        }
+    }
+
+    //Função para duplicação dos itens de um pedido que foi duplicado
+    public boolean fuDuplicarItensPedido(String numPedido, String cdProduto, String descricao, String qtde,
+                                         String percDesconto, String vlDesconto, String vlMaxDescPermitido,
+                                         String vlUnitario, String vlLiquido, String vlTotal){
+        ContentValues valores;
+        long resultado;
+
+        db = banco.getWritableDatabase();
+        valores = new ContentValues();
+        valores.put(CriaBanco.NUMPEDIDO, numPedido);
+        valores.put(CriaBanco.CDPRODUTO, cdProduto);
+        valores.put(CriaBanco.DESCRICAO, descricao);
+        valores.put(CriaBanco.QTDE, qtde);
+        valores.put(CriaBanco.PERCDESCONTO, percDesconto);
+        valores.put(CriaBanco.VLDESCONTO, vlDesconto);
+        valores.put(CriaBanco.VLMAXDESCPERMITIDO, vlMaxDescPermitido);
+        valores.put(CriaBanco.VLUNITARIO, vlUnitario);
+        valores.put(CriaBanco.VLLIQUIDO, vlLiquido);
+        valores.put(CriaBanco.VLTOTAL, vlTotal);
+
+        resultado = db.insert(CriaBanco.TABELAITEMPEDIDO, null, valores);
+        db.close();
+
+        if(resultado == -1){
+            return false;
+        }else{
+            return true;
+        }
+    }
+
+    //---------------------------Função para carregamento dos itens do pedido -----------------------------------------
+    public Cursor fuCarregaItemPedido(String numPedido){
+        Cursor cursor;
+        String[] campos = arr_CamposItemPedido;
+        String where = CriaBanco.NUMPEDIDO + " = " + numPedido;
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELAITEMPEDIDO, campos, where, null, null, null, null, null);
+
+        if(cursor!=null){
+            cursor.moveToFirst();
+        }
+        db.close();
+        return cursor;
+    }
+
+    //------------------------ Função para verificar se já foi incluido algum produto no pedido -------------------------
+    public String fuVerificaItemPedido(String numPedido){
+
+        Cursor cursor;
+        String validou = "N";
+        String[] campos = {CriaBanco.ID};
+        String where = CriaBanco.NUMPEDIDO + "=" + numPedido;
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELAITEMPEDIDO, campos, where, null, null, null, null, null);
+
+        if(cursor!=null){
+            if(cursor.moveToFirst()){
+                validou = "S";
+            }
+        }
+        db.close();
+
+        return validou;
+    }
+
+    //----------------------------------- Função para carregar os dados do produto -------------------------------------
+    public  Cursor fuCarregaProdutoItemPedido(String numpedido, String cdproduto){
+        Cursor cursor;
+        String[] campos = arr_CamposItemPedido;
+        String where = CriaBanco.NUMPEDIDO + "=" + numpedido + " AND " + CriaBanco.CDPRODUTO + "= '" + cdproduto + "'";
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELAITEMPEDIDO, campos, where, null, null, null, null, null);
+
+        if(cursor!=null){
+            cursor.moveToFirst();
+        }
+        db.close();
+        return cursor;
+    }
+
+    //---------------------------- Função para carregar os dados do item do pedido para alteração -----------------------
+    public Cursor fuCarregaItemPedidoAlteracao(String numpedido, String codigo){
+        Cursor cursor;
+        String[] campos = arr_CamposItemPedido;
+        String where = CriaBanco.ID + "=" + codigo + " AND " + CriaBanco.NUMPEDIDO + "=" + numpedido;
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELAITEMPEDIDO, campos, where, null, null, null, null, null);
+
+        if(cursor!=null){
+            cursor.moveToFirst();
+        }
+        db.close();
+        return cursor;
+    }
+}
diff --git a/app/src/main/java/models/MDL_Pedidos.java b/app/src/main/java/models/MDL_Pedidos.java
new file mode 100644
index 0000000..65bb0e4
--- /dev/null
+++ b/app/src/main/java/models/MDL_Pedidos.java
@@ -0,0 +1,353 @@
+package models;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+
+import com.example.desenvolvimento.navigationdrawercomercioexpress.CriaBanco;
+
+public class MDL_Pedidos {
+
+    private SQLiteDatabase db;
+    private CriaBanco banco;
+
+    public String vc_Mensagem = "";
+
+    public Cursor rs_Pedido;
+
+
+    public String [] arr_CamposPedido = {banco.ID, banco.CONDPGTO, banco.VLTOTAL, banco.PERCDESCONTO, banco.VLDESCONTO,
+            banco.VLFRETE, banco.CDEMITENTE, banco.RZSOCIAL, banco.OBS, banco.DTEMISSAO,
+            banco.FGSITUACAO, banco.CDVENDEDOR};
+
+    public MDL_Pedidos(Context context)
+    {
+        banco = new CriaBanco(context);
+    }
+
+    public Cursor fuCarregaNumPedido(){
+        Cursor cursor;
+        String[] campos = {banco.ID};
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELAMESTREPEDIDO, campos, null, null, null, null, null);
+        if(cursor!=null){
+            cursor.moveToFirst();
+        }
+        db.close();
+
+        return cursor;
+    }
+
+    public boolean fuAbrirPedido(String cdCliente, String nomeRzSocial, String dtEmissao, String cdVendedor, String fgSituacao){
+
+        try {
+            ContentValues valores;
+            long resultado;
+
+            db = banco.getWritableDatabase();
+            valores = new ContentValues();
+            valores.put(CriaBanco.CDEMITENTE, cdCliente);
+            valores.put(CriaBanco.RZSOCIAL, nomeRzSocial);
+            valores.put(CriaBanco.DTEMISSAO, dtEmissao);
+            valores.put(CriaBanco.CDVENDEDOR, cdVendedor);
+            valores.put(CriaBanco.FGSITUACAO, fgSituacao);
+            valores.put(CriaBanco.CONDPGTO, "");
+            valores.put(CriaBanco.VLTOTAL, "0.00");
+            valores.put(CriaBanco.PERCDESCONTO, "0.00");
+            valores.put(CriaBanco.VLDESCONTO, "0.00");
+            valores.put(CriaBanco.VLFRETE, "0.00");
+            valores.put(CriaBanco.OBS, "");
+
+            resultado = db.insertOrThrow(CriaBanco.TABELAMESTREPEDIDO, null, valores);
+            db.close();
+
+            if (resultado == -1) {
+                return false;
+            } else {
+                return true;
+            }
+        }catch (Exception e){
+            vc_Mensagem = e.getMessage();
+            return false;
+        }
+
+    }
+
+
+    public boolean fuAlterarPedido(String numPedido, String cdCliente, String nomeRzSocial, String condPgto, String vlTotal,
+                                 String percDesconto, String vlDesconto, String vlFrete, String obsPedido, String fgSituacao){
+        ContentValues valores;
+        String where;
+        long resultado;
+        db = banco.getWritableDatabase();
+
+        where = CriaBanco.ID + " = " + numPedido;
+
+        valores = new ContentValues();
+        valores.put(CriaBanco.CDEMITENTE, cdCliente);
+        valores.put(CriaBanco.RZSOCIAL, nomeRzSocial);
+        valores.put(CriaBanco.CONDPGTO, condPgto);
+        valores.put(CriaBanco.VLTOTAL, vlTotal);
+        valores.put(CriaBanco.PERCDESCONTO, percDesconto);
+        valores.put(CriaBanco.VLDESCONTO, vlDesconto);
+        valores.put(CriaBanco.VLFRETE, vlFrete);
+        valores.put(CriaBanco.OBS, obsPedido);
+        valores.put(CriaBanco.FGSITUACAO, fgSituacao);
+
+
+        resultado = db.update(CriaBanco.TABELAMESTREPEDIDO, valores, where, null);
+        db.close();
+
+        if(resultado == -1){
+            return false;
+        }else{
+            return true;
+        }
+
+    }
+
+    public boolean fuDuplicarPedido(String cdCliente, String nomeRzSocial, String dtEmissao, String cdVendedor,
+                                    String condPgto, String vlTotal,
+                                    String percDesconto, String vlDesconto, String vlFrete, String obsPedido, String fgSituacao){
+
+        try {
+            ContentValues valores;
+            long resultado;
+
+            db = banco.getWritableDatabase();
+            valores = new ContentValues();
+            valores.put(CriaBanco.CDEMITENTE, cdCliente);
+            valores.put(CriaBanco.RZSOCIAL, nomeRzSocial);
+            valores.put(CriaBanco.DTEMISSAO, dtEmissao);
+            valores.put(CriaBanco.CDVENDEDOR, cdVendedor);
+            valores.put(CriaBanco.CONDPGTO, condPgto);
+            valores.put(CriaBanco.VLTOTAL, vlTotal);
+            valores.put(CriaBanco.PERCDESCONTO, percDesconto);
+            valores.put(CriaBanco.VLDESCONTO, vlDesconto);
+            valores.put(CriaBanco.VLFRETE, vlFrete);
+            valores.put(CriaBanco.OBS, obsPedido);
+            valores.put(CriaBanco.FGSITUACAO, "ABERTO");
+
+            resultado = db.insertOrThrow(CriaBanco.TABELAMESTREPEDIDO, null, valores);
+            db.close();
+
+            if (resultado == -1) {
+                return false;
+            } else {
+                return true;
+            }
+        }catch (Exception e){
+            vc_Mensagem = e.getMessage();
+            return false;
+        }
+
+    }
+
+    public boolean fuAlterarSituacaoPedido(String numpedido, String fgsituacao){
+        try {
+            ContentValues valores;
+            String where;
+            long resultado;
+            db = banco.getWritableDatabase();
+
+            where = CriaBanco.ID + "=" + numpedido;
+
+            valores = new ContentValues();
+            valores.put(CriaBanco.FGSITUACAO, fgsituacao);
+
+            resultado = db.update(CriaBanco.TABELAMESTREPEDIDO, valores, where, null);
+            db.close();
+
+            if (resultado == -1) {
+                return false;
+            } else {
+                return true;
+            }
+        }catch (Exception e){
+            vc_Mensagem = e.getMessage();
+            return false;
+        }
+    }
+
+    public boolean fuDeletarPedido(String id){
+        try {
+            String where = CriaBanco.ID + "=" + id;
+            db = banco.getReadableDatabase();
+            db.delete(CriaBanco.TABELAMESTREPEDIDO, where, null);
+            db.close();
+
+            where = CriaBanco.NUMPEDIDO + "=" + id;
+            db = banco.getReadableDatabase();
+            db.delete(CriaBanco.TABELAITEMPEDIDO, where, null);
+            db.close();
+
+            return true;
+        }catch (Exception e){
+            vc_Mensagem = e.getMessage();
+            return false;
+        }
+    }
+
+    public Cursor fuCarregarTodosPedidos(String nomeRazaoSocial){
+        Cursor cursor;
+        String [] vf_Campos = arr_CamposPedido;
+
+        String where = "";
+        if (!nomeRazaoSocial.trim().equals("")){
+            where += CriaBanco.RZSOCIAL + " LIKE '%" + nomeRazaoSocial + "%'";
+        }
+
+        String orderBy = banco.ID;
+
+        db = banco.getReadableDatabase();
+        if(where.trim().equals("")) {
+            cursor = db.query(banco.TABELAMESTREPEDIDO, vf_Campos, null, null, null, null, orderBy);
+        }else{
+            cursor = db.query(banco.TABELAMESTREPEDIDO, vf_Campos, where, null, null, null, orderBy);
+        }
+
+        if(cursor != null){
+            cursor.moveToFirst();
+        }
+        db.close();
+
+        return cursor;
+
+    }
+
+    public Cursor fuCarregaTodosPedidosEnviados(){
+        Cursor cursor;
+        String[] campos = {banco.ID, banco.FGSITUACAO, banco.RZSOCIAL};
+        String where = CriaBanco.FGSITUACAO + " = 'ENVIADO'";
+        String orderBy = CriaBanco.ID;
+        db = banco.getReadableDatabase();
+        cursor = db.query(banco.TABELAMESTREPEDIDO, campos, where, null, null, null, orderBy, null);
+
+        if(cursor != null){
+            cursor.moveToFirst();
+        }
+        db.close();
+        return cursor;
+    }
+
+    public Cursor fuCarregaPedido(String numPedido){
+        Cursor cursor;
+        String[] campos = arr_CamposPedido;
+        String orderBy = CriaBanco.ID;
+        String where = CriaBanco.ID + " = " + numPedido;
+        db = banco.getReadableDatabase();
+        cursor = db.query(banco.TABELAMESTREPEDIDO, campos, where, null, null, null, orderBy, null);
+
+        if (cursor != null) {
+            cursor.moveToFirst();
+        }
+
+        db.close();
+
+        return cursor;
+
+    }
+
+    public Cursor fuCarregaPedidosAbertos() {
+
+        Cursor cursor;
+        String[] campos = arr_CamposPedido;
+        String orderBy = CriaBanco.ID;
+        String where = CriaBanco.FGSITUACAO + " = 'ABERTO'";
+        db = banco.getReadableDatabase();
+        cursor = db.query(banco.TABELAMESTREPEDIDO, campos, where, null, null, null, orderBy, null);
+
+        if (cursor != null) {
+            cursor.moveToFirst();
+        }
+        db.close();
+
+        return cursor;
+
+    }
+
+    public boolean fu_ValidarPossuiPedido(){
+        boolean fgEncontrou = false;
+        Cursor cursor;
+        String [] campos = {banco.ID};
+        db = banco.getReadableDatabase();
+        cursor = db.query(banco.TABELAMESTREPEDIDO, campos, null, null, null, null, null);
+
+        if(cursor != null){
+            cursor.moveToFirst();
+            if(cursor.getCount() > 0) {
+                fgEncontrou = true;
+            }
+        }
+        db.close();
+
+        return fgEncontrou;
+    }
+
+    public boolean fu_BuscarMovimentacaoDiaria(String data){
+
+        boolean validou = false;
+        try {
+            String[] campos = {banco.ID, banco.DTEMISSAO, banco.VLDESCONTO, banco.VLTOTAL};
+            db = banco.getReadableDatabase();
+            String where = "substr(" + banco.DTEMISSAO + ", 1, 10)" + " = '" + data + "'";
+            rs_Pedido = db.query(banco.TABELAMESTREPEDIDO, campos, where, null, null, null, null);
+
+            if(rs_Pedido != null) {
+                if (rs_Pedido.getCount() > 0) {
+                    validou = true;
+                }else{
+                    vc_Mensagem = "Não foram encontradas movimentações no dia " + data + "";
+                }
+            }else{
+                vc_Mensagem = "Não foram encontradas movimentações no dia " + data + "";
+            }
+
+            db.close();
+
+        }catch (Exception e){
+            vc_Mensagem = "Não foi possível carregar os dados da movimentação do dia " + data + " devido à seguinte situação: " + e.getMessage();
+            return false;
+        }
+
+        return validou;
+        //return String.valueOf(valor);
+    }
+
+    public Cursor fu_SelecionarTodosPedidos(){
+        Cursor cursor;
+        String [] vf_Campos = arr_CamposPedido;
+        String orderBy = banco.ID;
+
+        db = banco.getReadableDatabase();
+        cursor = db.query(banco.TABELAMESTREPEDIDO, vf_Campos, null, null, null, null, orderBy);
+
+        if(cursor != null){
+            cursor.moveToFirst();
+        }
+        db.close();
+
+        return cursor;
+
+    }
+
+    public Cursor fuCarregarClientePedido(String numPedido){
+
+        Cursor cursor;
+        String[] campos = {banco.ID, banco.CDEMITENTE};
+        String where = CriaBanco.ID + " = " + numPedido;
+
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELAMESTREPEDIDO, campos, where, null, null, null, null);
+
+        if(cursor != null){
+            cursor.moveToFirst();
+        }
+        db.close();
+
+        return cursor;
+
+    }
+
+}
diff --git a/app/src/main/java/models/MDL_Produtos.java b/app/src/main/java/models/MDL_Produtos.java
new file mode 100644
index 0000000..572c1eb
--- /dev/null
+++ b/app/src/main/java/models/MDL_Produtos.java
@@ -0,0 +1,153 @@
+package models;
+
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+
+import com.example.desenvolvimento.navigationdrawercomercioexpress.CriaBanco;
+
+public class MDL_Produtos {
+
+
+    private SQLiteDatabase db;
+    private CriaBanco banco;
+
+    protected String vc_CdClienteBanco = "";
+
+    public String vc_Mensagem = "";
+
+    public Cursor rs_Produto;
+
+    /*sql = "CREATE TABLE " + TABELAPRODUTOS + "(" +
+                ID + " integer primary key autoincrement, " +
+                CDPRODUTO + " text, " +
+                DESCRICAO + " text, " +
+                ESTOQUEATUAL + " integer, " +
+                VALORUNITARIO + " real, " +
+                DESCMAXPERMITIDO + " real, " +
+                DESCMAXPERMITIDOA + " real, " +
+                DESCMAXPERMITIDOB + " real, " +
+                DESCMAXPERMITIDOC + " real, " +
+                DESCMAXPERMITIDOD + " real, " +
+                DESCMAXPERMITIDOE + " real, " +
+                DESCMAXPERMITIDOFIDELIDADE + " real, " +
+                DTULTALTERACAO + " datetime)";
+
+        db.execSQL(sql);*/
+
+    public String [] arr_CamposProduto = {banco.ID, banco.CDPRODUTO, banco.DESCRICAO, banco.ESTOQUEATUAL, banco.VALORUNITARIO,
+            banco.VALORATACADO,
+            banco.DESCMAXPERMITIDO, banco.DESCMAXPERMITIDOA, banco.DESCMAXPERMITIDOB, banco.DESCMAXPERMITIDOC,
+            banco.DESCMAXPERMITIDOD, banco.DESCMAXPERMITIDOE, banco.DESCMAXPERMITIDOFIDELIDADE,
+            banco.DTULTALTERACAO};
+
+    public MDL_Produtos(Context context)
+    {
+        banco = new CriaBanco(context);
+    }
+
+    //FUNÇÃO PARA A CLASSE DE ESTOQUE
+    public int fu_BuscarProdutosAtencao(){
+        int countProdutos = 0;
+        vc_Mensagem = "";
+
+        try {
+            Cursor cursor;
+            String[] campos = {banco.ESTOQUEATUAL};
+            db = banco.getReadableDatabase();
+
+            cursor = db.query(banco.TABELAPRODUTOS, campos, null, null, null, null, null);
+
+            if (cursor != null) {
+                if (cursor.getCount() > 0) {
+                    cursor.moveToFirst();
+                    for (int i = 0; i < cursor.getCount(); i++) {
+                        String estoqueAtual = cursor.getString(cursor.getColumnIndex(CriaBanco.ESTOQUEATUAL));
+                        if(estoqueAtual.trim().equals("")){
+                            countProdutos += 1;
+                        }else {
+                            if (Integer.parseInt(cursor.getString(cursor.getColumnIndex(CriaBanco.ESTOQUEATUAL))) <= 0) {
+                                countProdutos += 1;
+                            }
+                        }
+                        cursor.moveToNext();
+                    }
+
+                }else{
+                    vc_Mensagem = "";
+                }
+            }else{
+                vc_Mensagem = "";
+            }
+
+            db.close();
+
+        }catch (Exception e){
+            vc_Mensagem = "Não foi possível buscar os produtos que necessitam de atenção devido à seguinte situação: " + e.getMessage() + "";
+        }
+
+        vc_Mensagem = "";
+
+        return countProdutos;
+    }
+
+    //-------------------- Função para carregamento do produto de acordo com seu id ----------------------------------------
+    public Cursor fuCarregaProdutosById(String id){
+        Cursor cursor;
+        String[] campos = arr_CamposProduto;
+        String where = CriaBanco.ID + " = " + id;
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELAPRODUTOS, campos, where, null, null, null, null, null);
+
+        if(cursor!=null){
+            cursor.moveToFirst();
+        }
+        db.close();
+        return cursor;
+    }
+
+    //-------------------- Função para carregamento do produto de acordo com seu id ----------------------------------------
+    public Cursor fuCarregaProdutosCdProduto(String cdProduto){
+        Cursor cursor;
+        String[] campos = arr_CamposProduto;
+        String where = CriaBanco.CDPRODUTO + "= '" + cdProduto + "'";
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELAPRODUTOS, campos, where, null, null, null, null, null);
+
+        if(cursor!=null){
+            cursor.moveToFirst();
+        }
+        db.close();
+        return cursor;
+    }
+
+    public Cursor fuBuscaValorAtacado(String cdProduto){
+        Cursor cursor;
+        String[] campos = {banco.VALORATACADO};
+        String where = CriaBanco.CDPRODUTO + "='" + cdProduto + "'";
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELAPRODUTOS, campos, where, null, null, null, null);
+
+        if(cursor != null){
+            cursor.moveToFirst();
+        }
+        db.close();
+
+        return cursor;
+    }
+
+    public Cursor buscaDescontoFidelidade(String cdproduto){
+        Cursor cursor;
+        String[] campos = {banco.ID, banco.DESCMAXPERMITIDOFIDELIDADE};
+        String where = CriaBanco.CDPRODUTO + "='" + cdproduto + "'";
+        String cdcliente = "";
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELAPRODUTOS, campos, where, null, null, null, null);
+
+        if(cursor != null){
+            cursor.moveToFirst();
+        }
+        db.close();
+        return cursor;
+    }
+}
diff --git a/app/src/main/java/models/MDL_Usuario.java b/app/src/main/java/models/MDL_Usuario.java
new file mode 100644
index 0000000..8ee20f5
--- /dev/null
+++ b/app/src/main/java/models/MDL_Usuario.java
@@ -0,0 +1,65 @@
+package models;
+
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+
+import com.example.desenvolvimento.navigationdrawercomercioexpress.CriaBanco;
+
+public class MDL_Usuario {
+
+    private SQLiteDatabase db;
+    private CriaBanco banco;
+
+    public MDL_Usuario(Context context)
+    {
+        banco = new CriaBanco(context);
+    }
+
+    public String fuSelecionarCdClienteBanco(){
+        Cursor cursor;
+        String[] campos = {banco.ID, banco.CDCLIENTEBANCO};
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELALOGIN, campos, null, null, null, null, null);
+        String cdclienteBanco = "";
+        if(cursor!=null){
+            cursor.moveToFirst();
+            cdclienteBanco = cursor.getString(cursor.getColumnIndex(CriaBanco.CDCLIENTEBANCO));
+        }
+
+        cursor.close();
+        db.close();
+        return cdclienteBanco;
+    }
+
+    public String fuSelecionarNmUsuarioSistema(){
+        Cursor cursor;
+        String[] campos = {banco.ID, banco.NMUSUARIOSISTEMA};
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELALOGIN, campos, null, null, null, null, null);
+        String nmusuarioSistema = "";
+        if(cursor!=null){
+            cursor.moveToFirst();
+            nmusuarioSistema = cursor.getString(cursor.getColumnIndex(CriaBanco.NMUSUARIOSISTEMA));
+        }
+
+        cursor.close();
+        db.close();
+        return nmusuarioSistema;
+    }
+
+    public Cursor fuSelecionarVendedor(){
+        Cursor cursor;
+        String[] campos = {banco.ID, banco.CDVENDEDORDEFAULT};
+        db = banco.getReadableDatabase();
+        cursor = db.query(CriaBanco.TABELALOGIN, campos, null, null, null, null, null);
+
+        if(cursor!=null){
+            cursor.moveToFirst();
+        }
+
+        db.close();
+
+        return cursor;
+    }
+}
diff --git a/app/src/main/java/sync/SYNC_Clientes.java b/app/src/main/java/sync/SYNC_Clientes.java
new file mode 100644
index 0000000..16d9e3d
--- /dev/null
+++ b/app/src/main/java/sync/SYNC_Clientes.java
@@ -0,0 +1,165 @@
+package sync;
+
+import android.content.Context;
+import android.database.Cursor;
+import android.util.Log;
+import android.widget.Toast;
+
+import com.example.desenvolvimento.navigationdrawercomercioexpress.BancoController;
+import com.example.desenvolvimento.navigationdrawercomercioexpress.CriaBanco;
+import com.example.desenvolvimento.navigationdrawercomercioexpress.Funcoes;
+import com.example.desenvolvimento.navigationdrawercomercioexpress.MySSLSocketFactory;
+
+import org.apache.http.HttpVersion;
+import org.apache.http.NameValuePair;
+import org.apache.http.client.ClientProtocolException;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.ResponseHandler;
+import org.apache.http.client.entity.UrlEncodedFormEntity;
+import org.apache.http.client.methods.HttpPost;
+import org.apache.http.conn.ClientConnectionManager;
+import org.apache.http.conn.scheme.PlainSocketFactory;
+import org.apache.http.conn.scheme.Scheme;
+import org.apache.http.conn.scheme.SchemeRegistry;
+import org.apache.http.conn.ssl.SSLSocketFactory;
+import org.apache.http.impl.client.BasicResponseHandler;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;
+import org.apache.http.message.BasicNameValuePair;
+import org.apache.http.params.BasicHttpParams;
+import org.apache.http.params.HttpConnectionParams;
+import org.apache.http.params.HttpParams;
+import org.apache.http.params.HttpProtocolParams;
+import org.apache.http.protocol.HTTP;
+import org.json.JSONArray;
+import org.json.JSONObject;
+
+import java.io.IOException;
+import java.security.KeyStore;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+
+import classes.CL_Clientes;
+import classes.CL_Pedidos;
+import controllers.CTL_Clientes;
+import models.MDL_Clientes;
+import models.MDL_Usuario;
+
+public class SYNC_Clientes {
+
+    CL_Clientes cl_Clientes;
+    CTL_Clientes ctl_Clientes;
+    MDL_Clientes mdl_Clientes;
+
+    Funcoes funcoes;
+
+    public String mensagem = "";
+
+    Context vc_Context;
+
+    int TIMEOUT_MILLISEC = 10000;
+
+    protected String vc_CdClienteBanco = "";
+
+    public SYNC_Clientes(Context context){
+
+        this.vc_Context = context;
+        this.mdl_Clientes = new MDL_Clientes(context);
+        this.funcoes = new Funcoes();
+
+        MDL_Usuario mdl_Usuario = new MDL_Usuario(context);
+        this.vc_CdClienteBanco = mdl_Usuario.fuSelecionarCdClienteBanco();
+    }
+
+    public String FU_SincronizarClientePedido(CL_Clientes cl_Clientes){
+
+        //Ao enviar o cliente para o servidor deve ser retornado o codigo deste cliente salvo na base de dados
+        String vf_CdClienteServidor = "";
+
+        try {
+            KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());
+            trustStore.load(null, null);
+
+            MySSLSocketFactory sf = new MySSLSocketFactory(trustStore);
+            sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
+
+            HttpParams p = new BasicHttpParams();
+
+            HttpProtocolParams.setVersion(p, HttpVersion.HTTP_1_1);
+            HttpProtocolParams.setContentCharset(p, HTTP.UTF_8);
+
+            SchemeRegistry registry = new SchemeRegistry();
+            registry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
+            registry.register(new Scheme("https", sf, 443));
+
+            ClientConnectionManager ccm = new ThreadSafeClientConnManager(p, registry);
+
+
+            HttpConnectionParams.setConnectionTimeout(p,
+                    TIMEOUT_MILLISEC);
+            HttpConnectionParams.setSoTimeout(p, TIMEOUT_MILLISEC);
+
+            HttpClient httpclient = new DefaultHttpClient(ccm, p);
+
+            String url = "http://www.planosistemas.com.br/" +
+                    "WebService2.php?user=" + vc_CdClienteBanco
+                    + "&format=json&num=10&method=inserirClienteNovo&rzsocial=" + cl_Clientes.getNomeRzSocial().replace(" ", "espaco")
+                    + "&nmfantasia=" + cl_Clientes.getNomeFantasia().replace(" ", "espaco") +
+                    "&cep=" + cl_Clientes.getCep() + "&endereco=" + cl_Clientes.getEndereco().replace(" ", "espaco")
+                    + "&numero=" + cl_Clientes.getNumEndereco() + "&complemento=" + cl_Clientes.getComplemento().replace(" ", "espaco") +
+                    "&bairro=" + cl_Clientes.getBairro().replace(" ", "espaco") + "&uf=" + cl_Clientes.getUf()
+                    + "&cidade=" + cl_Clientes.getCidade().replace(" ", "espaco") + "&tipopessoa=" + cl_Clientes.getTipoPessoa() +
+                    "&cgc=" + cl_Clientes.getCpfCnpj() + "&telefone=" + cl_Clientes.getTelefone() + "&telefoneadicional=" + cl_Clientes.getTelefoneAdicional()
+                    + "&fax=" + cl_Clientes.getFax() + "&classificacao=" + cl_Clientes.getClassificacao() +
+                    "&contato=" + cl_Clientes.getNomeContato().replace(" ", "espaco") + "&email=" + cl_Clientes.getEmail()
+                    + "&vendedor=" + cl_Clientes.getVendedor() + "&tipocliente=" + cl_Clientes.getTipoCliente().replace(" ", "espaco")
+                    + "&dtcadastro=" + cl_Clientes.getDtCadastro().replace(" ", "espaco") + "" +
+                    "&obscliente=" + cl_Clientes.getObservacao().replace(" ", "espaco") + "";
+            HttpPost httppost = new HttpPost(url);
+
+            // Instantiate a GET HTTP method
+            try {
+                List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);
+                nameValuePairs.add(new BasicNameValuePair("user", "1"));
+                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
+                ResponseHandler<String> responseHandler = new BasicResponseHandler();
+                String responseBody = httpclient.execute(httppost, responseHandler);
+
+                JSONObject json = new JSONObject(responseBody);
+                JSONArray jArray = json.getJSONArray("posts");
+                ArrayList<HashMap<String, String>> mylist = new ArrayList<HashMap<String, String>>();
+
+                for (int i = 0; i < jArray.length(); i++) {
+                    HashMap<String, String> map = new HashMap<String, String>();
+                    JSONObject e = jArray.getJSONObject(i);
+                    String s = e.getString("post");
+                    JSONObject jObject = new JSONObject(s);
+
+                    if (!jObject.getString("CdCliente").equals("null")) {
+
+                        cl_Clientes.setCdCliente(jObject.getString("CdCliente"));
+                        CTL_Clientes ctl_Clientes = new CTL_Clientes(vc_Context, cl_Clientes);
+
+                        if(ctl_Clientes.fuAlteraClientePedido()){
+                            vf_CdClienteServidor = cl_Clientes.getCdCliente();
+                        }
+
+                    }
+                }
+
+            } catch (ClientProtocolException e) {
+                // TODO Auto-generated catch block
+                return "";
+            } catch (IOException e) {
+                // TODO Auto-generated catch block
+                return "";
+            }
+
+        } catch (Throwable t) {
+            return "";
+        }
+
+        return vf_CdClienteServidor;
+    }
+}
diff --git a/app/src/main/java/sync/SYNC_Pedidos.java b/app/src/main/java/sync/SYNC_Pedidos.java
new file mode 100644
index 0000000..ead9b57
--- /dev/null
+++ b/app/src/main/java/sync/SYNC_Pedidos.java
@@ -0,0 +1,734 @@
+package sync;
+
+import android.content.Context;
+import android.database.Cursor;
+import android.support.v7.app.AppCompatActivity;
+import android.util.Log;
+
+import com.example.desenvolvimento.navigationdrawercomercioexpress.CriaBanco;
+import com.example.desenvolvimento.navigationdrawercomercioexpress.Funcoes;
+import com.example.desenvolvimento.navigationdrawercomercioexpress.MySSLSocketFactory;
+
+import org.apache.http.HttpVersion;
+import org.apache.http.NameValuePair;
+import org.apache.http.client.ClientProtocolException;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.ResponseHandler;
+import org.apache.http.client.entity.UrlEncodedFormEntity;
+import org.apache.http.client.methods.HttpPost;
+import org.apache.http.conn.ClientConnectionManager;
+import org.apache.http.conn.scheme.PlainSocketFactory;
+import org.apache.http.conn.scheme.Scheme;
+import org.apache.http.conn.scheme.SchemeRegistry;
+import org.apache.http.conn.ssl.SSLSocketFactory;
+import org.apache.http.impl.client.BasicResponseHandler;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;
+import org.apache.http.message.BasicNameValuePair;
+import org.apache.http.params.BasicHttpParams;
+import org.apache.http.params.HttpConnectionParams;
+import org.apache.http.params.HttpParams;
+import org.apache.http.params.HttpProtocolParams;
+import org.apache.http.protocol.HTTP;
+import org.json.JSONArray;
+import org.json.JSONObject;
+
+import java.io.IOException;
+import java.security.KeyStore;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+
+import classes.CL_Clientes;
+import classes.CL_Filial;
+import classes.CL_ItemPedido;
+import classes.CL_Pedidos;
+import controllers.CTL_Clientes;
+import controllers.CTL_Filial;
+import controllers.CTL_ItemPedido;
+import controllers.CTL_Pedidos;
+import models.MDL_Pedidos;
+import models.MDL_Usuario;
+
+public class SYNC_Pedidos extends AppCompatActivity {
+
+    CL_Pedidos cl_Pedidos;
+    CTL_Pedidos ctl_Pedidos;
+    MDL_Pedidos mdl_Pedidos;
+
+    CL_Filial cl_Filial;
+
+    Funcoes funcoes;
+
+    public String mensagem = "";
+
+    Context vc_Context;
+
+    int TIMEOUT_MILLISEC = 10000;
+
+    protected String vc_CdClienteBanco = "", vc_NmUsuarioSistema = "";
+
+    public SYNC_Pedidos(Context context){
+
+        this.vc_Context = context;
+        this.mdl_Pedidos = new MDL_Pedidos(context);
+        this.funcoes = new Funcoes();
+
+        MDL_Usuario mdl_Usuario = new MDL_Usuario(context);
+        this.vc_CdClienteBanco = mdl_Usuario.fuSelecionarCdClienteBanco();
+        this.vc_NmUsuarioSistema = mdl_Usuario.fuSelecionarNmUsuarioSistema();
+
+        cl_Filial = new CL_Filial();
+        CTL_Filial ctl_Filial = new CTL_Filial(context, cl_Filial);
+        ctl_Filial.fuBuscaCdFilialSelecionada();
+    }
+
+    public boolean FU_EnviarPedido(CL_Pedidos cl_Pedido){
+
+        try {
+            KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());
+            trustStore.load(null, null);
+
+            MySSLSocketFactory sf = new MySSLSocketFactory(trustStore);
+            sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
+
+            HttpParams p = new BasicHttpParams();
+
+            HttpProtocolParams.setVersion(p, HttpVersion.HTTP_1_1);
+            HttpProtocolParams.setContentCharset(p, HTTP.UTF_8);
+
+            SchemeRegistry registry = new SchemeRegistry();
+            registry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
+            registry.register(new Scheme("https", sf, 443));
+
+            ClientConnectionManager ccm = new ThreadSafeClientConnManager(p, registry);
+
+            HttpConnectionParams.setConnectionTimeout(p, TIMEOUT_MILLISEC);
+            HttpConnectionParams.setSoTimeout(p, TIMEOUT_MILLISEC);
+
+            HttpClient httpclient = new DefaultHttpClient(ccm, p);
+            String url = "http://www.planosistemas.com.br/" +
+                    "WebService2.php?user=" + vc_CdClienteBanco
+                    + "&format=json&num=10&method=inserirpedido&vltotal=" + cl_Pedidos.getVlTotal()
+                    + "&dtemissao=" + cl_Pedidos.getDtEmissao() + ""
+                    + "&cdvendedor=" + cl_Pedidos.getCdVendedor() + "&cdemitente=" + cl_Pedidos.getCdCliente() + "&rzsocial=" + cl_Pedidos.getNomeRzSocial()
+                    + "&percdesconto=" + cl_Pedidos.getPercDesconto() + "&vldesconto=" + cl_Pedidos.getVlDesconto() + ""
+                    + "&vlfrete=" + cl_Pedidos.getVlFrete()
+                    + "&condpgto=" + cl_Pedidos.getCondPgto() + "&obs=" + cl_Pedidos.getObsPedido().replace("\n", "pulalinha")
+                    + "&filial=" + cl_Filial.getCdFilial() + "";
+            HttpPost httppost = new HttpPost(url);
+
+            // Instantiate a GET HTTP method
+            try {
+                Log.i(getClass().getSimpleName(), "send  task - start");
+                //
+                List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(
+                        2);
+                nameValuePairs.add(new BasicNameValuePair("user", "1"));
+                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
+                ResponseHandler<String> responseHandler = new BasicResponseHandler();
+                String responseBody = httpclient.execute(httppost, responseHandler);
+                // Parse
+                JSONObject json = new JSONObject(responseBody);
+                JSONArray jArray = json.getJSONArray("posts");
+                ArrayList<HashMap<String, String>> mylist = new ArrayList<HashMap<String, String>>();
+
+                for (int i = 0; i < jArray.length(); i++) {
+                    HashMap<String, String> map = new HashMap<String, String>();
+                    JSONObject e = jArray.getJSONObject(i);
+                    String s = e.getString("post");
+                    JSONObject jObject = new JSONObject(s);
+
+                    if (!jObject.getString("NumPedido").equals("null")) {
+                        String vf_NumPedidoServidor = jObject.getString("NumPedido");
+                        if (FU_SincronizaItemPedido(vf_NumPedidoServidor)) {
+                            FU_AlteraSituacaoPedido(vf_NumPedidoServidor);
+                        } else {
+                            return false;
+                        }
+                    }
+                }
+
+            } catch (ClientProtocolException e) {
+                // TODO Auto-generated catch block
+                return false;
+            } catch (IOException e) {
+                // TODO Auto-generated catch block
+                return false;
+            }
+
+        } catch (Throwable t) {
+            return false;
+        }
+
+        return true;
+    }
+
+    public boolean FU_EnviarTodosPedidos(Cursor rs_Pedido) {
+
+        if (rs_Pedido != null) {
+            while (!rs_Pedido.isAfterLast()) {
+
+                cl_Pedidos = new CL_Pedidos();
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.NUMPEDIDO)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.NUMPEDIDO)).trim().equals("")) {
+                        cl_Pedidos.setNumPedido(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.NUMPEDIDO)).replace(" ", "espaco"));
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setNumPedido("0");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).equals("null")
+                            && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).trim().equals("")) {
+
+                        String vf_VlTotal = "";
+
+                        CL_ItemPedido cl_ItemPedido = new CL_ItemPedido();
+                        cl_ItemPedido.setNumPedido(cl_Pedidos.getNumPedido());
+
+                        CTL_ItemPedido ctl_ItemPedido = new CTL_ItemPedido(getApplicationContext(), cl_ItemPedido);
+
+                        double vf_VlTotalDouble = 0;
+                        if(ctl_ItemPedido.fuCarregaTodosItensPedido()){
+                            Cursor rs_ItemPedido = ctl_ItemPedido.rs_ItemPedido;
+                            while (!rs_ItemPedido.isAfterLast()) {
+                                vf_VlTotalDouble = vf_VlTotalDouble + Double.parseDouble(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).replace(",", "."));
+                                rs_ItemPedido.moveToNext();
+                            }
+                        }
+
+                        if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).trim().equals("")) {
+                            vf_VlTotalDouble = vf_VlTotalDouble - Double.parseDouble(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).replace(",", "."));
+                        }
+
+                        vf_VlTotal = String.format("%.2f", vf_VlTotalDouble);
+                        cl_Pedidos.setVlTotal(vf_VlTotal);
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setVlTotal("0");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.DTEMISSAO)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.DTEMISSAO)).trim().equals("")) {
+                        cl_Pedidos.setDtEmissao(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.DTEMISSAO)).replace(" ", "espaco"));
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setDtEmissao(funcoes.getDateTime());
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CDVENDEDOR)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CDVENDEDOR)).trim().equals("")) {
+                        cl_Pedidos.setCdVendedor(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CDVENDEDOR)));
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setCdVendedor("0");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CDEMITENTE)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CDEMITENTE)).trim().equals("")) {
+                        cl_Pedidos.setCdCliente(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CDEMITENTE)));
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setCdCliente("0");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.RZSOCIAL)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.RZSOCIAL)).trim().equals("")) {
+                        cl_Pedidos.setNomeRzSocial(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.RZSOCIAL)).replace(" ", "espaco"));
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setNomeRzSocial("");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).trim().equals("")) {
+                        cl_Pedidos.setPercDesconto(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)));
+                    } else {
+                        cl_Pedidos.setPercDesconto("0");
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setPercDesconto("0");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).trim().equals("")) {
+                        cl_Pedidos.setVlDesconto(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)));
+                    } else {
+                        cl_Pedidos.setVlDesconto("0");
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setVlDesconto("0");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLFRETE)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLFRETE)).trim().equals("")) {
+                        cl_Pedidos.setVlFrete(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.VLFRETE)));
+                    } else {
+                        cl_Pedidos.setVlFrete("0");
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setVlFrete("0");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CONDPGTO)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CONDPGTO)).trim().equals("")) {
+                        cl_Pedidos.setCondPgto(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.CONDPGTO)).replace(" ", "espaco"));
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setCondPgto("DINHEIRO");
+                }
+
+                try {
+                    if (!rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.OBS)).equals("null") && !rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.OBS)).trim().equals("")) {
+                        cl_Pedidos.setObsPedido(rs_Pedido.getString(rs_Pedido.getColumnIndexOrThrow(CriaBanco.OBS)).replace(" ", "espaco"));
+                    } else {
+                        cl_Pedidos.setObsPedido("espaco");
+                    }
+                } catch (Exception e) {
+                    cl_Pedidos.setObsPedido("espaco");
+                }
+
+                cl_Pedidos.setObsPedido(cl_Pedidos.getObsPedido() + "  CONDIÇÃO DE PAGAMENTO INFORMADA: " + cl_Pedidos.getCondPgto() + "");
+                cl_Pedidos.setObsPedido(cl_Pedidos.getObsPedido().replace(" ", "espaco"));
+
+                try {
+                    CL_Clientes cl_Cliente = new CL_Clientes();
+                    cl_Cliente.setCdCliente(cl_Pedidos.getCdCliente());
+
+                    CTL_Clientes ctl_Cliente = new CTL_Clientes(this.vc_Context, cl_Cliente);
+
+                    if(ctl_Cliente.fuSelecionarClienteSincronizacao("cdCliente")){
+                        if (cl_Cliente.getFgSincronizado().equals("N")) {
+                            SYNC_Clientes sync_Clientes = new SYNC_Clientes(vc_Context);
+                            cl_Pedidos.setCdCliente(sync_Clientes.FU_SincronizarClientePedido(cl_Cliente));
+                        }
+                    }
+                } catch (Exception e) {
+                    try {
+                        CL_Clientes cl_Cliente = new CL_Clientes();
+                        cl_Cliente.setCdCliente(cl_Pedidos.getCdCliente());
+
+                        CTL_Clientes ctl_Cliente = new CTL_Clientes(this.vc_Context, cl_Cliente);
+
+                        if(ctl_Cliente.fuSelecionarClienteSincronizacao("cpfCnpj")) {
+                            if (cl_Cliente.getFgSincronizado().equals("N")) {
+                                SYNC_Clientes sync_Clientes = new SYNC_Clientes(vc_Context);
+                                cl_Pedidos.setCdCliente(sync_Clientes.FU_SincronizarClientePedido(cl_Cliente));
+                            }
+                        }
+                    } catch (Exception ex) {
+                        ex.printStackTrace();
+                    }
+                }
+
+                try {
+                    KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());
+                    trustStore.load(null, null);
+
+                    MySSLSocketFactory sf = new MySSLSocketFactory(trustStore);
+                    sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
+
+                    HttpParams p = new BasicHttpParams();
+
+                    HttpProtocolParams.setVersion(p, HttpVersion.HTTP_1_1);
+                    HttpProtocolParams.setContentCharset(p, HTTP.UTF_8);
+
+                    SchemeRegistry registry = new SchemeRegistry();
+                    registry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
+                    registry.register(new Scheme("https", sf, 443));
+
+                    ClientConnectionManager ccm = new ThreadSafeClientConnManager(p, registry);
+
+
+                    HttpConnectionParams.setConnectionTimeout(p,
+                            TIMEOUT_MILLISEC);
+                    HttpConnectionParams.setSoTimeout(p, TIMEOUT_MILLISEC);
+
+                    HttpClient httpclient = new DefaultHttpClient(ccm, p);
+                    String url = "http://www.planosistemas.com.br/" +
+                            "WebService2.php?user=" + vc_CdClienteBanco
+                            + "&format=json&num=10&method=inserirpedido&vltotal=" + cl_Pedidos.getVlTotal()
+                            + "&dtemissao=" + cl_Pedidos.getDtEmissao() + ""
+                            + "&cdvendedor=" + cl_Pedidos.getCdVendedor() + "&cdemitente=" + cl_Pedidos.getCdCliente() + "&rzsocial=" + cl_Pedidos.getNomeRzSocial()
+                            + "&percdesconto=" + cl_Pedidos.getPercDesconto() + "&vldesconto=" + cl_Pedidos.getVlDesconto() + ""
+                            + "&vlfrete=" + cl_Pedidos.getVlFrete()
+                            + "&condpgto=" + cl_Pedidos.getCondPgto() + "&obs=" + cl_Pedidos.getObsPedido().replace("\n", "pulalinha")
+                            + "&filial=" + cl_Filial.getCdFilial() + "";
+                    HttpPost httppost = new HttpPost(url);
+
+                    // Instantiate a GET HTTP method
+                    try {
+                        Log.i(getClass().getSimpleName(), "send  task - start");
+                        //
+                        List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(
+                                2);
+                        nameValuePairs.add(new BasicNameValuePair("user", "1"));
+                        httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
+                        ResponseHandler<String> responseHandler = new BasicResponseHandler();
+                        String responseBody = httpclient.execute(httppost, responseHandler);
+                        // Parse
+                        JSONObject json = new JSONObject(responseBody);
+                        JSONArray jArray = json.getJSONArray("posts");
+                        ArrayList<HashMap<String, String>> mylist = new ArrayList<HashMap<String, String>>();
+
+                        for (int i = 0; i < jArray.length(); i++) {
+                            HashMap<String, String> map = new HashMap<String, String>();
+                            JSONObject e = jArray.getJSONObject(i);
+                            String s = e.getString("post");
+                            JSONObject jObject = new JSONObject(s);
+
+                        /*map.put("idusers", jObject.getString("RzSocial"));
+                        map.put("UserName", jObject.getString("Endereco"));
+                        map.put("FullName", jObject.getString("Telefone"));*/
+
+                        /*map.put("idusers", jObject.getString("idusers"));
+                        map.put("UserName", jObject.getString("UserName"));
+                        map.put("FullName", jObject.getString("FullName"));*/
+
+                            //mylist.add(map);
+                            if (!jObject.getString("NumPedido").equals("null")) {
+                                String vf_NumPedidoServidor = jObject.getString("NumPedido");
+                                if (FU_SincronizaItemPedido(vf_NumPedidoServidor)) {
+                                    FU_AlteraSituacaoPedido(vf_NumPedidoServidor);
+
+                                } else {
+                                    return false;
+                                }
+                            }
+                        /*if (!jObject.getString("NumPedido").equals("null")) {
+                            String NumPedido = jObject.getString("NumPedido");
+                            FU_SincronizaItemPedido(NumPedido, dtemissao, numpedido);
+                            //crud.insereCdClienteBanco(jObject.getString("CdCliente"));
+                            //
+                        }*/
+
+                        }
+
+
+                        //Toast.makeText(getApplicationContext(), responseBody, Toast.LENGTH_LONG).show();
+
+                    } catch (ClientProtocolException e) {
+                        // TODO Auto-generated catch block
+                        return false;
+                    /*e.printStackTrace();
+                    Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();*/
+
+                    } catch (IOException e) {
+                        // TODO Auto-generated catch block
+                        return false;
+                    /*e.printStackTrace();
+                    Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();*/
+                    }
+                    // Log.i(getClass().getSimpleName(), "send  task - end");
+
+                } catch (Throwable t) {
+                    return false;
+                    /*e.printStackTrace();
+                    Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();*/
+                }
+            }
+        }
+        return true;
+    }
+
+    public boolean FU_SincronizaItemPedido(String numPedidoServidor){
+
+        //cl_Pedidos.getNumPedido();
+        CL_ItemPedido cl_ItemPedido = new CL_ItemPedido();
+        cl_ItemPedido.setNumPedido(cl_Pedidos.getNumPedido());
+
+        CTL_ItemPedido ctl_ItemPedido = new CTL_ItemPedido(getApplicationContext(), cl_ItemPedido);
+
+
+        if(ctl_ItemPedido.fuCarregaTodosItensPedido()) {
+
+            Cursor rs_ItemPedido = ctl_ItemPedido.rs_ItemPedido;
+
+            while (!rs_ItemPedido.isAfterLast()) {
+
+                cl_ItemPedido = new CL_ItemPedido();
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID)).trim().equals("")) {
+                        cl_ItemPedido.setId(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.ID)).replace(" ", "espaco"));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setId("0");
+                }
+
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.NUMPEDIDO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.NUMPEDIDO)).trim().equals("")) {
+                        cl_ItemPedido.setNumPedido(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.NUMPEDIDO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setNumPedido("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)).trim().equals("")) {
+                        cl_ItemPedido.setCdProduto(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.CDPRODUTO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setCdProduto("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)).trim().equals("")) {
+                        cl_ItemPedido.setDescricao(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.DESCRICAO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setDescricao("espaco");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)).trim().equals("")) {
+                        cl_ItemPedido.setQtde(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.QTDE)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setQtde("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)).trim().equals("")) {
+                        cl_ItemPedido.setPercDesconto(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.PERCDESCONTO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setPercDesconto("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)).trim().equals("")) {
+                        cl_ItemPedido.setVlMaxDescPermitido(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLMAXDESCPERMITIDO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setVlMaxDescPermitido("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)).trim().equals("")) {
+                        cl_ItemPedido.setVlDesconto(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLDESCONTO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setVlDesconto("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)).trim().equals("")) {
+                        cl_ItemPedido.setVlUnitario(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLUNITARIO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setVlUnitario("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)).trim().equals("")) {
+                        cl_ItemPedido.setVlLiquido(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLLIQUIDO)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setVlLiquido("0");
+                }
+
+                try {
+                    if (!rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).equals("null") && !rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)).trim().equals("")) {
+                        cl_ItemPedido.setVlTotal(rs_ItemPedido.getString(rs_ItemPedido.getColumnIndexOrThrow(CriaBanco.VLTOTAL)));
+                    }
+                } catch (Exception e) {
+                    cl_ItemPedido.setVlTotal("0");
+                }
+
+
+                try {
+                    KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());
+                    trustStore.load(null, null);
+
+                    MySSLSocketFactory sf = new MySSLSocketFactory(trustStore);
+                    sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
+
+                    HttpParams p = new BasicHttpParams();
+
+                    HttpProtocolParams.setVersion(p, HttpVersion.HTTP_1_1);
+                    HttpProtocolParams.setContentCharset(p, HTTP.UTF_8);
+
+                    SchemeRegistry registry = new SchemeRegistry();
+                    registry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
+                    registry.register(new Scheme("https", sf, 443));
+
+                    ClientConnectionManager ccm = new ThreadSafeClientConnManager(p, registry);
+
+
+                    HttpConnectionParams.setConnectionTimeout(p,
+                            TIMEOUT_MILLISEC);
+                    HttpConnectionParams.setSoTimeout(p, TIMEOUT_MILLISEC);
+
+                    HttpClient httpclient = new DefaultHttpClient(ccm, p);
+
+                    String url = "http://www.planosistemas.com.br/" +
+                            "WebService2.php?user=" + vc_CdClienteBanco
+                            + "&format=json&num=10&method=inseriritempedido&numpedido=" + numPedidoServidor + "&cdproduto="
+                            + cl_ItemPedido.getCdProduto().replace(" ", "espaco") + "&id=" + cl_ItemPedido.getId()
+                            + "&qtde=" + cl_ItemPedido.getQtde() + "&vlunitario=" + cl_ItemPedido.getVlUnitario()
+                            + "&vltotal=" + cl_ItemPedido.getVlTotal()
+                            + "&dtemissao=" + cl_Pedidos.getDtEmissao()
+                            + "&descricao=" + cl_ItemPedido.getDescricao().replace(" ", "espaco")
+                            + "&vldesconto=" + cl_ItemPedido.getVlDesconto()
+                            + "&percdesconto=" + cl_ItemPedido.getPercDesconto()
+                            + "&filial=" + cl_Filial.getCdFilial() + "";
+
+                    HttpPost httppost = new HttpPost(url);
+
+                    try {
+                        Log.i(getClass().getSimpleName(), "send  task - start");
+                        List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);
+                        nameValuePairs.add(new BasicNameValuePair("user", "1"));
+                        httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
+                        ResponseHandler<String> responseHandler = new BasicResponseHandler();
+                        String responseBody = httpclient.execute(httppost, responseHandler);
+
+
+                    } catch (ClientProtocolException e) {
+                        // TODO Auto-generated catch block
+                        return false;
+                        //e.printStackTrace();
+                        //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do item do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();
+
+                    } catch (IOException e) {
+                        // TODO Auto-generated catch block
+                        return false;
+                        //e.printStackTrace();
+                        //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do item do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();
+
+                    }
+                    // Log.i(getClass().getSimpleName(), "send  task - end");
+
+                } catch (Throwable t) {
+                    return false;
+                    //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do item do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();
+                    //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a conexão com o servidor. Favor verificar a conexão com a internet. Request failed: " + t.toString(), Toast.LENGTH_LONG).show();
+                }
+
+                rs_ItemPedido.moveToNext();
+
+            }
+        }
+        return true;
+
+    }
+
+    public boolean FU_AlteraSituacaoPedido(String numPedidoServidor){
+
+        String dataRegistro = funcoes.getDateTime().substring(0, 16);
+
+        try {
+            KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());
+            trustStore.load(null, null);
+
+            MySSLSocketFactory sf = new MySSLSocketFactory(trustStore);
+            sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
+
+            HttpParams p = new BasicHttpParams();
+
+            HttpProtocolParams.setVersion(p, HttpVersion.HTTP_1_1);
+            HttpProtocolParams.setContentCharset(p, HTTP.UTF_8);
+
+            SchemeRegistry registry = new SchemeRegistry();
+            registry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
+            registry.register(new Scheme("https", sf, 443));
+
+            ClientConnectionManager ccm = new ThreadSafeClientConnManager(p, registry);
+
+
+            HttpConnectionParams.setConnectionTimeout(p,
+                    TIMEOUT_MILLISEC);
+            HttpConnectionParams.setSoTimeout(p, TIMEOUT_MILLISEC);
+
+            HttpClient httpclient = new DefaultHttpClient(ccm, p);
+            String url = "http://www.planosistemas.com.br/" +
+                    "WebService2.php?user=" + vc_CdClienteBanco
+                    + "&format=json&num=10&method=alteraSituacaoPedidoNovo&numpedido=" + numPedidoServidor
+                    + "&filial=" + cl_Filial.getCdFilial()
+                    + "&dtregistro=" + dataRegistro.replace(" ", "espaco")
+                    + "&usuario=" + vc_NmUsuarioSistema.replace(" ", "espaco") + "";
+            HttpPost httppost = new HttpPost(url);
+
+            try {
+                Log.i(getClass().getSimpleName(), "send  task - start");
+                List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2) ;
+                nameValuePairs.add(new BasicNameValuePair("user", "1"));
+                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
+                ResponseHandler<String> responseHandler = new BasicResponseHandler();
+                String responseBody = httpclient.execute(httppost, responseHandler);
+
+            } catch (ClientProtocolException e) {
+                // TODO Auto-generated catch block
+                return  false;
+
+            } catch (IOException e) {
+                // TODO Auto-generated catch block
+                return false;
+
+            }
+
+        } catch (Throwable t) {
+            return false;
+        }
+
+        return true;
+    }
+
+    public boolean FU_CancelarPedido(String numPedido) {
+
+        try {
+            KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());
+            trustStore.load(null, null);
+
+            MySSLSocketFactory sf = new MySSLSocketFactory(trustStore);
+            sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
+
+            HttpParams p = new BasicHttpParams();
+
+            HttpProtocolParams.setVersion(p, HttpVersion.HTTP_1_1);
+            HttpProtocolParams.setContentCharset(p, HTTP.UTF_8);
+
+            SchemeRegistry registry = new SchemeRegistry();
+            registry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
+            registry.register(new Scheme("https", sf, 443));
+
+            ClientConnectionManager ccm = new ThreadSafeClientConnManager(p, registry);
+
+            HttpConnectionParams.setConnectionTimeout(p, TIMEOUT_MILLISEC);
+            HttpConnectionParams.setSoTimeout(p, TIMEOUT_MILLISEC);
+            HttpClient httpclient = new DefaultHttpClient(ccm, p);
+            String url = "http://www.planosistemas.com.br/" +
+                    "WebService2.php?user=" + vc_CdClienteBanco + "&format=json&num=10&method=cancelarPedido&numpedido=" + numPedido + "";
+            HttpPost httppost = new HttpPost(url);
+
+            try {
+                Log.i(getClass().getSimpleName(), "send  task - start");
+                List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);
+                nameValuePairs.add(new BasicNameValuePair("user", "1"));
+                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
+                ResponseHandler<String> responseHandler = new BasicResponseHandler();
+                String responseBody = httpclient.execute(httppost, responseHandler);
+
+            } catch (ClientProtocolException e) {
+                // TODO Auto-generated catch block
+                return false;
+                //e.printStackTrace();
+                //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do item do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();
+
+            } catch (IOException e) {
+                // TODO Auto-generated catch block
+                return false;
+                //e.printStackTrace();
+                //Toast.makeText(getApplicationContext(), "Não foi possivel realizar a sincronização do item do pedido. Favor verificar a conexão com a internet.", Toast.LENGTH_LONG).show();
+
+            }
+        } catch (Throwable t) {
+            return false;
+        }
+        return true;
+    }
+}
diff --git a/app/src/main/res/anim/anim_moverdireita.xml b/app/src/main/res/anim/anim_moverdireita.xml
new file mode 100644
index 0000000..68433d0
--- /dev/null
+++ b/app/src/main/res/anim/anim_moverdireita.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="400"
+    android:fromYDelta="0"
+    android:fromXDelta="0"
+    android:toYDelta="0"
+    android:toXDelta="100%">
+
+</translate>
\ No newline at end of file
diff --git a/app/src/main/res/anim/fadein.xml b/app/src/main/res/anim/fadein.xml
new file mode 100644
index 0000000..4574ae3
--- /dev/null
+++ b/app/src/main/res/anim/fadein.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<alpha xmlns:android="http://schemas.android.com/apk/res/android"
+    android:interpolator="@android:anim/accelerate_interpolator"
+    android:fromAlpha="1.0"
+    android:toAlpha="0.0"
+    android:duration="500" />
\ No newline at end of file
diff --git a/app/src/main/res/anim/fadeout.xml b/app/src/main/res/anim/fadeout.xml
new file mode 100644
index 0000000..df03f89
--- /dev/null
+++ b/app/src/main/res/anim/fadeout.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<alpha xmlns:android="http://schemas.android.com/apk/res/android"
+    android:interpolator="@android:anim/accelerate_interpolator"
+    android:fromAlpha="0.0"
+    android:toAlpha="1.0"
+    android:duration="500" />
\ No newline at end of file
diff --git a/app/src/main/res/drawable-v21/ic_menu_camera.xml b/app/src/main/res/drawable-v21/ic_menu_camera.xml
new file mode 100644
index 0000000..634fe92
--- /dev/null
+++ b/app/src/main/res/drawable-v21/ic_menu_camera.xml
@@ -0,0 +1,12 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M12,12m-3.2,0a3.2,3.2 0,1 1,6.4 0a3.2,3.2 0,1 1,-6.4 0" />
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M9,2L7.17,4H4c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2V6c0,-1.1 -0.9,-2 -2,-2h-3.17L15,2H9zm3,15c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5z" />
+</vector>
diff --git a/app/src/main/res/drawable-v21/ic_menu_gallery.xml b/app/src/main/res/drawable-v21/ic_menu_gallery.xml
new file mode 100644
index 0000000..03c7709
--- /dev/null
+++ b/app/src/main/res/drawable-v21/ic_menu_gallery.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M22,16V4c0,-1.1 -0.9,-2 -2,-2H8c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2zm-11,-4l2.03,2.71L16,11l4,5H8l3,-4zM2,6v14c0,1.1 0.9,2 2,2h14v-2H4V6H2z" />
+</vector>
diff --git a/app/src/main/res/drawable-v21/ic_menu_manage.xml b/app/src/main/res/drawable-v21/ic_menu_manage.xml
new file mode 100644
index 0000000..aeb047d
--- /dev/null
+++ b/app/src/main/res/drawable-v21/ic_menu_manage.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M22.7,19l-9.1,-9.1c0.9,-2.3 0.4,-5 -1.5,-6.9 -2,-2 -5,-2.4 -7.4,-1.3L9,6 6,9 1.6,4.7C0.4,7.1 0.9,10.1 2.9,12.1c1.9,1.9 4.6,2.4 6.9,1.5l9.1,9.1c0.4,0.4 1,0.4 1.4,0l2.3,-2.3c0.5,-0.4 0.5,-1.1 0.1,-1.4z" />
+</vector>
\ No newline at end of file
diff --git a/app/src/main/res/drawable-v21/ic_menu_send.xml b/app/src/main/res/drawable-v21/ic_menu_send.xml
new file mode 100644
index 0000000..fdf1c90
--- /dev/null
+++ b/app/src/main/res/drawable-v21/ic_menu_send.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M2.01,21L23,12 2.01,3 2,10l15,2 -15,2z" />
+</vector>
diff --git a/app/src/main/res/drawable-v21/ic_menu_share.xml b/app/src/main/res/drawable-v21/ic_menu_share.xml
new file mode 100644
index 0000000..338d95a
--- /dev/null
+++ b/app/src/main/res/drawable-v21/ic_menu_share.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M18,16.08c-0.76,0 -1.44,0.3 -1.96,0.77L8.91,12.7c0.05,-0.23 0.09,-0.46 0.09,-0.7s-0.04,-0.47 -0.09,-0.7l7.05,-4.11c0.54,0.5 1.25,0.81 2.04,0.81 1.66,0 3,-1.34 3,-3s-1.34,-3 -3,-3 -3,1.34 -3,3c0,0.24 0.04,0.47 0.09,0.7L8.04,9.81C7.5,9.31 6.79,9 6,9c-1.66,0 -3,1.34 -3,3s1.34,3 3,3c0.79,0 1.5,-0.31 2.04,-0.81l7.12,4.16c-0.05,0.21 -0.08,0.43 -0.08,0.65 0,1.61 1.31,2.92 2.92,2.92 1.61,0 2.92,-1.31 2.92,-2.92s-1.31,-2.92 -2.92,-2.92z" />
+</vector>
diff --git a/app/src/main/res/drawable-v21/ic_menu_slideshow.xml b/app/src/main/res/drawable-v21/ic_menu_slideshow.xml
new file mode 100644
index 0000000..5e9e163
--- /dev/null
+++ b/app/src/main/res/drawable-v21/ic_menu_slideshow.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M4,6H2v14c0,1.1 0.9,2 2,2h14v-2H4V6zm16,-4H8c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2V4c0,-1.1 -0.9,-2 -2,-2zm-8,12.5v-9l6,4.5 -6,4.5z" />
+</vector>
diff --git a/app/src/main/res/drawable/estilobotaoazul.xml b/app/src/main/res/drawable/estilobotaoazul.xml
new file mode 100644
index 0000000..2c8c668
--- /dev/null
+++ b/app/src/main/res/drawable/estilobotaoazul.xml
@@ -0,0 +1,12 @@
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <stroke
+        android:width="0dp"
+        android:color="@color/corBranca"
+        />
+    <corners android:radius="20dp"/>
+    <gradient
+        android:startColor="#1673B0"
+        android:centerColor="#1673B0"
+        android:endColor="#1673B0"
+        android:angle="90"/>
+</shape>
\ No newline at end of file
diff --git a/app/src/main/res/drawable/estilobotaoverde.xml b/app/src/main/res/drawable/estilobotaoverde.xml
new file mode 100644
index 0000000..b7c1405
--- /dev/null
+++ b/app/src/main/res/drawable/estilobotaoverde.xml
@@ -0,0 +1,12 @@
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <stroke
+        android:width="0dp"
+        android:color="@color/corBranca"
+        />
+    <corners android:radius="20dp"/>
+    <gradient
+        android:startColor="@color/corVerde"
+        android:centerColor="@color/corVerde"
+        android:endColor="@color/corVerde"
+        android:angle="90"/>
+</shape>
\ No newline at end of file
diff --git a/app/src/main/res/drawable/gradient.xml b/app/src/main/res/drawable/gradient.xml
new file mode 100644
index 0000000..741cd3a
--- /dev/null
+++ b/app/src/main/res/drawable/gradient.xml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle" >
+    <gradient
+        android:startColor="#5cd055"
+        android:centerColor="#B3FFFFFF"
+        android:endColor="#B3FFFFFF"
+        android:angle="135"/>
+
+    <!--#1673B0 - Azul mais escuro-->
+</shape>
\ No newline at end of file
diff --git a/app/src/main/res/drawable/ic__adicionar.xml b/app/src/main/res/drawable/ic__adicionar.xml
new file mode 100644
index 0000000..e3979cd
--- /dev/null
+++ b/app/src/main/res/drawable/ic__adicionar.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#FFFFFF"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_adicionar_produto.xml b/app/src/main/res/drawable/ic_adicionar_produto.xml
new file mode 100644
index 0000000..77a1224
--- /dev/null
+++ b/app/src/main/res/drawable/ic_adicionar_produto.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#FFFFFF"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M11,9h2L13,6h3L16,4h-3L13,1h-2v3L8,4v2h3v3zM7,18c-1.1,0 -1.99,0.9 -1.99,2S5.9,22 7,22s2,-0.9 2,-2 -0.9,-2 -2,-2zM17,18c-1.1,0 -1.99,0.9 -1.99,2s0.89,2 1.99,2 2,-0.9 2,-2 -0.9,-2 -2,-2zM7.17,14.75l0.03,-0.12 0.9,-1.63h7.45c0.75,0 1.41,-0.41 1.75,-1.03l3.86,-7.01L19.42,4h-0.01l-1.1,2 -2.76,5L8.53,11l-0.13,-0.27L6.16,6l-0.95,-2 -0.94,-2L1,2v2h2l3.6,7.59 -1.35,2.45c-0.16,0.28 -0.25,0.61 -0.25,0.96 0,1.1 0.9,2 2,2h12v-2L7.42,15c-0.13,0 -0.25,-0.11 -0.25,-0.25z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_buscar.xml b/app/src/main/res/drawable/ic_buscar.xml
new file mode 100644
index 0000000..be5ad99
--- /dev/null
+++ b/app/src/main/res/drawable/ic_buscar.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#FFFFFF"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M15.5,14h-0.79l-0.28,-0.27C15.41,12.59 16,11.11 16,9.5 16,5.91 13.09,3 9.5,3S3,5.91 3,9.5 5.91,16 9.5,16c1.61,0 3.09,-0.59 4.23,-1.57l0.27,0.28v0.79l5,4.99L20.49,19l-4.99,-5zM9.5,14C7.01,14 5,11.99 5,9.5S7.01,5 9.5,5 14,7.01 14,9.5 11.99,14 9.5,14z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_cliente_branco.xml b/app/src/main/res/drawable/ic_cliente_branco.xml
new file mode 100644
index 0000000..7fa7a3c
--- /dev/null
+++ b/app/src/main/res/drawable/ic_cliente_branco.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#FFFFFF"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M16.5,12c1.38,0 2.49,-1.12 2.49,-2.5S17.88,7 16.5,7C15.12,7 14,8.12 14,9.5s1.12,2.5 2.5,2.5zM9,11c1.66,0 2.99,-1.34 2.99,-3S10.66,5 9,5C7.34,5 6,6.34 6,8s1.34,3 3,3zM16.5,14c-1.83,0 -5.5,0.92 -5.5,2.75L11,19h11v-2.25c0,-1.83 -3.67,-2.75 -5.5,-2.75zM9,13c-2.33,0 -7,1.17 -7,3.5L2,19h7v-2.25c0,-0.85 0.33,-2.34 2.37,-3.47C10.5,13.1 9.66,13 9,13z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_clientes_novo.xml b/app/src/main/res/drawable/ic_clientes_novo.xml
new file mode 100644
index 0000000..4f06031
--- /dev/null
+++ b/app/src/main/res/drawable/ic_clientes_novo.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#AAA2AB"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M16.5,12c1.38,0 2.49,-1.12 2.49,-2.5S17.88,7 16.5,7C15.12,7 14,8.12 14,9.5s1.12,2.5 2.5,2.5zM9,11c1.66,0 2.99,-1.34 2.99,-3S10.66,5 9,5C7.34,5 6,6.34 6,8s1.34,3 3,3zM16.5,14c-1.83,0 -5.5,0.92 -5.5,2.75L11,19h11v-2.25c0,-1.83 -3.67,-2.75 -5.5,-2.75zM9,13c-2.33,0 -7,1.17 -7,3.5L2,19h7v-2.25c0,-0.85 0.33,-2.34 2.37,-3.47C10.5,13.1 9.66,13 9,13z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_concluirprodutospedido.xml b/app/src/main/res/drawable/ic_concluirprodutospedido.xml
new file mode 100644
index 0000000..04b4b78
--- /dev/null
+++ b/app/src/main/res/drawable/ic_concluirprodutospedido.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#FFFFFF"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M14,10L2,10v2h12v-2zM14,6L2,6v2h12L14,6zM2,16h8v-2L2,14v2zM21.5,11.5L23,13l-6.99,7 -4.51,-4.5L13,14l3.01,3 5.49,-5.5z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_dtemissao_picker.xml b/app/src/main/res/drawable/ic_dtemissao_picker.xml
new file mode 100644
index 0000000..e043f96
--- /dev/null
+++ b/app/src/main/res/drawable/ic_dtemissao_picker.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#AAA2AB"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M9,11L7,11v2h2v-2zM13,11h-2v2h2v-2zM17,11h-2v2h2v-2zM19,4h-1L18,2h-2v2L8,4L8,2L6,2v2L5,4c-1.11,0 -1.99,0.9 -1.99,2L3,20c0,1.1 0.89,2 2,2h14c1.1,0 2,-0.9 2,-2L21,6c0,-1.1 -0.9,-2 -2,-2zM19,20L5,20L5,9h14v11z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_excluir.xml b/app/src/main/res/drawable/ic_excluir.xml
new file mode 100644
index 0000000..8bed121
--- /dev/null
+++ b/app/src/main/res/drawable/ic_excluir.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#FFFFFF"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M6,19c0,1.1 0.9,2 2,2h8c1.1,0 2,-0.9 2,-2V7H6v12zM19,4h-3.5l-1,-1h-5l-1,1H5v2h14V4z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_mostrar_senha.xml b/app/src/main/res/drawable/ic_mostrar_senha.xml
new file mode 100644
index 0000000..808b8a9
--- /dev/null
+++ b/app/src/main/res/drawable/ic_mostrar_senha.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#AAA2AB"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M12,4.5C7,4.5 2.73,7.61 1,12c1.73,4.39 6,7.5 11,7.5s9.27,-3.11 11,-7.5c-1.73,-4.39 -6,-7.5 -11,-7.5zM12,17c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5zM12,9c-1.66,0 -3,1.34 -3,3s1.34,3 3,3 3,-1.34 3,-3 -1.34,-3 -3,-3z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_opcoes_novo.xml b/app/src/main/res/drawable/ic_opcoes_novo.xml
new file mode 100644
index 0000000..2d80d0f
--- /dev/null
+++ b/app/src/main/res/drawable/ic_opcoes_novo.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#AAA2AB"
+    android:viewportHeight="24" android:viewportWidth="24"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M19.1,12.9a2.8,2.8 0,0 0,0.1 -0.9,2.8 2.8,0 0,0 -0.1,-0.9l2.1,-1.6a0.7,0.7 0,0 0,0.1 -0.6L19.4,5.5a0.7,0.7 0,0 0,-0.6 -0.2l-2.4,1a6.5,6.5 0,0 0,-1.6 -0.9l-0.4,-2.6a0.5,0.5 0,0 0,-0.5 -0.4H10.1a0.5,0.5 0,0 0,-0.5 0.4L9.3,5.4a5.6,5.6 0,0 0,-1.7 0.9l-2.4,-1a0.4,0.4 0,0 0,-0.5 0.2l-2,3.4c-0.1,0.2 0,0.4 0.2,0.6l2,1.6a2.8,2.8 0,0 0,-0.1 0.9,2.8 2.8,0 0,0 0.1,0.9L2.8,14.5a0.7,0.7 0,0 0,-0.1 0.6l1.9,3.4a0.7,0.7 0,0 0,0.6 0.2l2.4,-1a6.5,6.5 0,0 0,1.6 0.9l0.4,2.6a0.5,0.5 0,0 0,0.5 0.4h3.8a0.5,0.5 0,0 0,0.5 -0.4l0.3,-2.6a5.6,5.6 0,0 0,1.7 -0.9l2.4,1a0.4,0.4 0,0 0,0.5 -0.2l2,-3.4c0.1,-0.2 0,-0.4 -0.2,-0.6ZM12,15.6A3.6,3.6 0,1 1,15.6 12,3.6 3.6,0 0,1 12,15.6Z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_pedidos_branco.xml b/app/src/main/res/drawable/ic_pedidos_branco.xml
new file mode 100644
index 0000000..0457071
--- /dev/null
+++ b/app/src/main/res/drawable/ic_pedidos_branco.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#FFFFFF"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M4,14h4v-4L4,10v4zM4,19h4v-4L4,15v4zM4,9h4L8,5L4,5v4zM9,14h12v-4L9,10v4zM9,19h12v-4L9,15v4zM9,5v4h12L21,5L9,5z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_pedidos_novo.xml b/app/src/main/res/drawable/ic_pedidos_novo.xml
new file mode 100644
index 0000000..08a01e4
--- /dev/null
+++ b/app/src/main/res/drawable/ic_pedidos_novo.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#AAA2AB"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M4,14h4v-4L4,10v4zM4,19h4v-4L4,15v4zM4,9h4L8,5L4,5v4zM9,14h12v-4L9,10v4zM9,19h12v-4L9,15v4zM9,5v4h12L21,5L9,5z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_produto_branco.xml b/app/src/main/res/drawable/ic_produto_branco.xml
new file mode 100644
index 0000000..baac1d6
--- /dev/null
+++ b/app/src/main/res/drawable/ic_produto_branco.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#FFFFFF"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M7,18c-1.1,0 -1.99,0.9 -1.99,2S5.9,22 7,22s2,-0.9 2,-2 -0.9,-2 -2,-2zM1,2v2h2l3.6,7.59 -1.35,2.45c-0.16,0.28 -0.25,0.61 -0.25,0.96 0,1.1 0.9,2 2,2h12v-2L7.42,15c-0.14,0 -0.25,-0.11 -0.25,-0.25l0.03,-0.12 0.9,-1.63h7.45c0.75,0 1.41,-0.41 1.75,-1.03l3.58,-6.49c0.08,-0.14 0.12,-0.31 0.12,-0.48 0,-0.55 -0.45,-1 -1,-1L5.21,4l-0.94,-2L1,2zM17,18c-1.1,0 -1.99,0.9 -1.99,2s0.89,2 1.99,2 2,-0.9 2,-2 -0.9,-2 -2,-2z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_produtos_novo.xml b/app/src/main/res/drawable/ic_produtos_novo.xml
new file mode 100644
index 0000000..705bbc7
--- /dev/null
+++ b/app/src/main/res/drawable/ic_produtos_novo.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#AAA2AB"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M7,18c-1.1,0 -1.99,0.9 -1.99,2S5.9,22 7,22s2,-0.9 2,-2 -0.9,-2 -2,-2zM1,2v2h2l3.6,7.59 -1.35,2.45c-0.16,0.28 -0.25,0.61 -0.25,0.96 0,1.1 0.9,2 2,2h12v-2L7.42,15c-0.14,0 -0.25,-0.11 -0.25,-0.25l0.03,-0.12 0.9,-1.63h7.45c0.75,0 1.41,-0.41 1.75,-1.03l3.58,-6.49c0.08,-0.14 0.12,-0.31 0.12,-0.48 0,-0.55 -0.45,-1 -1,-1L5.21,4l-0.94,-2L1,2zM17,18c-1.1,0 -1.99,0.9 -1.99,2s0.89,2 1.99,2 2,-0.9 2,-2 -0.9,-2 -2,-2z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_salvar.xml b/app/src/main/res/drawable/ic_salvar.xml
new file mode 100644
index 0000000..74ca299
--- /dev/null
+++ b/app/src/main/res/drawable/ic_salvar.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#FFFFFF"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M17,3L5,3c-1.11,0 -2,0.9 -2,2v14c0,1.1 0.89,2 2,2h14c1.1,0 2,-0.9 2,-2L21,7l-4,-4zM12,19c-1.66,0 -3,-1.34 -3,-3s1.34,-3 3,-3 3,1.34 3,3 -1.34,3 -3,3zM15,9L5,9L5,5h10v4z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_sincronizar.xml b/app/src/main/res/drawable/ic_sincronizar.xml
new file mode 100644
index 0000000..7ae478f
--- /dev/null
+++ b/app/src/main/res/drawable/ic_sincronizar.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#FFFFFF"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M12,4L12,1L8,5l4,4L12,6c3.31,0 6,2.69 6,6 0,1.01 -0.25,1.97 -0.7,2.8l1.46,1.46C19.54,15.03 20,13.57 20,12c0,-4.42 -3.58,-8 -8,-8zM12,18c-3.31,0 -6,-2.69 -6,-6 0,-1.01 0.25,-1.97 0.7,-2.8L5.24,7.74C4.46,8.97 4,10.43 4,12c0,4.42 3.58,8 8,8v3l4,-4 -4,-4v3z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_venda_cliente.xml b/app/src/main/res/drawable/ic_venda_cliente.xml
new file mode 100644
index 0000000..c273ca4
--- /dev/null
+++ b/app/src/main/res/drawable/ic_venda_cliente.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#FFFFFF"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M15,12c2.21,0 4,-1.79 4,-4s-1.79,-4 -4,-4 -4,1.79 -4,4 1.79,4 4,4zM6,10L6,7L4,7v3L1,10v2h3v3h2v-3h3v-2L6,10zM15,14c-2.67,0 -8,1.34 -8,4v2h16v-2c0,-2.66 -5.33,-4 -8,-4z"/>
+</vector>
diff --git a/app/src/main/res/drawable/ic_visaogeral.xml b/app/src/main/res/drawable/ic_visaogeral.xml
new file mode 100644
index 0000000..8a9de3b
--- /dev/null
+++ b/app/src/main/res/drawable/ic_visaogeral.xml
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#AAA2AB"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M10,20h4L14,4h-4v16zM4,20h4v-8L4,12v8zM16,9v11h4L20,9h-4z"/>
+</vector>
diff --git a/app/src/main/res/drawable/imagem_icone_produtos.png b/app/src/main/res/drawable/imagem_icone_produtos.png
new file mode 100644
index 0000000..924a604
Binary files /dev/null and b/app/src/main/res/drawable/imagem_icone_produtos.png differ
diff --git a/app/src/main/res/drawable/imagem_icone_vendas_diarias.png b/app/src/main/res/drawable/imagem_icone_vendas_diarias.png
new file mode 100644
index 0000000..8546d36
Binary files /dev/null and b/app/src/main/res/drawable/imagem_icone_vendas_diarias.png differ
diff --git a/app/src/main/res/drawable/layoutsecaocliente.xml b/app/src/main/res/drawable/layoutsecaocliente.xml
new file mode 100644
index 0000000..b56c6e4
--- /dev/null
+++ b/app/src/main/res/drawable/layoutsecaocliente.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item>
+        <shape android:shape="rectangle">
+            <solid android:color="@color/corTransparente"/>
+            <corners android:radius="2dp" />
+        </shape>
+    </item>
+
+    <item
+        android:left="0dp"
+        android:right="0dp"
+        android:top="0dp"
+        android:bottom="0dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/azulEscuroNovaIdentidade"/>
+            <corners android:radius="2dp" />
+        </shape>
+    </item>
+</layer-list>
\ No newline at end of file
diff --git a/app/src/main/res/drawable/layoutsecaolistaproduto.xml b/app/src/main/res/drawable/layoutsecaolistaproduto.xml
new file mode 100644
index 0000000..783843d
--- /dev/null
+++ b/app/src/main/res/drawable/layoutsecaolistaproduto.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item>
+        <shape android:shape="rectangle">
+            <solid android:color="@color/corTransparente"/>
+            <corners android:radius="2dp" />
+        </shape>
+    </item>
+
+    <item
+        android:left="0dp"
+        android:right="0dp"
+        android:top="0dp"
+        android:bottom="0dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/corCinza"/>
+            <corners android:radius="2dp" />
+        </shape>
+    </item>
+</layer-list>
\ No newline at end of file
diff --git a/app/src/main/res/drawable/layoutsecaoproduto.xml b/app/src/main/res/drawable/layoutsecaoproduto.xml
new file mode 100644
index 0000000..de8cd66
--- /dev/null
+++ b/app/src/main/res/drawable/layoutsecaoproduto.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item>
+        <shape android:shape="rectangle">
+            <solid android:color="@color/corTransparente"/>
+            <corners android:radius="2dp" />
+        </shape>
+    </item>
+
+    <item
+        android:left="0dp"
+        android:right="0dp"
+        android:top="0dp"
+        android:bottom="0dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/corVerdeMuitoTransparente"/>
+            <corners android:radius="2dp" />
+        </shape>
+    </item>
+</layer-list>
\ No newline at end of file
diff --git a/app/src/main/res/drawable/layoutstyleestoqueprodutos.xml b/app/src/main/res/drawable/layoutstyleestoqueprodutos.xml
new file mode 100644
index 0000000..c36aa62
--- /dev/null
+++ b/app/src/main/res/drawable/layoutstyleestoqueprodutos.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item>
+        <shape android:shape="rectangle">
+            <solid android:color="@color/corPreta"/>
+            <corners android:radius="5dp" />
+        </shape>
+    </item>
+
+    <item
+        android:left="0dp"
+        android:right="0dp"
+        android:top="0dp"
+        android:bottom="5dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/corVerdeMuitoTransparente"/>
+            <corners android:radius="2dp" />
+
+        </shape>
+    </item>
+</layer-list>
\ No newline at end of file
diff --git a/app/src/main/res/drawable/layoutstylemovimentacaodiaria.xml b/app/src/main/res/drawable/layoutstylemovimentacaodiaria.xml
new file mode 100644
index 0000000..591b3b5
--- /dev/null
+++ b/app/src/main/res/drawable/layoutstylemovimentacaodiaria.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item>
+        <shape android:shape="rectangle">
+            <solid android:color="@color/corPreta"/>
+            <corners android:radius="5dp" />
+        </shape>
+    </item>
+
+    <item
+        android:left="0dp"
+        android:right="0dp"
+        android:top="0dp"
+        android:bottom="5dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/corVermelhoMuitoTransparente"/>
+            <corners android:radius="2dp" />
+
+        </shape>
+    </item>
+</layer-list>
\ No newline at end of file
diff --git a/app/src/main/res/drawable/layoutstyletiposvenda.xml b/app/src/main/res/drawable/layoutstyletiposvenda.xml
new file mode 100644
index 0000000..4c80723
--- /dev/null
+++ b/app/src/main/res/drawable/layoutstyletiposvenda.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item>
+        <shape android:shape="rectangle">
+            <solid android:color="@color/corPreta"/>
+            <corners android:radius="5dp" />
+        </shape>
+    </item>
+
+    <item
+        android:left="0dp"
+        android:right="0dp"
+        android:top="0dp"
+        android:bottom="5dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/corAzulMuitoTransparente"/>
+            <corners android:radius="2dp" />
+
+        </shape>
+    </item>
+</layer-list>
\ No newline at end of file
diff --git a/app/src/main/res/drawable/logo_expres_mobile_minuscula.png b/app/src/main/res/drawable/logo_expres_mobile_minuscula.png
new file mode 100644
index 0000000..89329fd
Binary files /dev/null and b/app/src/main/res/drawable/logo_expres_mobile_minuscula.png differ
diff --git a/app/src/main/res/drawable/logo_express_mobile_menor.png b/app/src/main/res/drawable/logo_express_mobile_menor.png
new file mode 100644
index 0000000..3e13c78
Binary files /dev/null and b/app/src/main/res/drawable/logo_express_mobile_menor.png differ
diff --git a/app/src/main/res/drawable/logoplano.png b/app/src/main/res/drawable/logoplano.png
new file mode 100644
index 0000000..a50b713
Binary files /dev/null and b/app/src/main/res/drawable/logoplano.png differ
diff --git a/app/src/main/res/layout/activity_adicionar_produtos_customizada.xml b/app/src/main/res/layout/activity_adicionar_produtos_customizada.xml
index d08d419..589e8b4 100755
--- a/app/src/main/res/layout/activity_adicionar_produtos_customizada.xml
+++ b/app/src/main/res/layout/activity_adicionar_produtos_customizada.xml
@@ -9,13 +9,46 @@
     <android.support.design.widget.AppBarLayout android:layout_height="wrap_content"
         android:layout_width="match_parent" android:theme="@style/AppTheme.AppBarOverlay">
 
-        <android.support.v7.widget.Toolbar android:id="@+id/toolbar"
-            android:layout_width="match_parent" android:layout_height="?attr/actionBarSize"
-            android:background="?attr/colorPrimary" app:popupTheme="@style/AppTheme.PopupOverlay" />
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/AppTheme.PopupOverlay" >
+
+            <TextView
+                android:id="@+id/lb_TituloProdutosPedidos"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Adicionar Produtos"
+                android:textColor="@color/corBranca"
+                android:textSize="20dp"/>
+
+            <com.miguelcatalan.materialsearchview.MaterialSearchView
+                android:id="@+id/sv_ProdutosPedidos"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:hint="Buscar pelo código ou descrição"
+                style="@style/MaterialSearchViewStyle"
+                >
+
+            </com.miguelcatalan.materialsearchview.MaterialSearchView>
+
+        </android.support.v7.widget.Toolbar>
 
     </android.support.design.widget.AppBarLayout>
 
     <include layout="@layout/content_adicionar_produtos_customizada" />
 
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/fab_SalvarProdutosPedido"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom|end"
+        android:layout_margin="@dimen/fab_margin"
+        android:src="@drawable/ic_concluirprodutospedido"
+        android:backgroundTint="@color/corVerde"
+        app:borderWidth="0dp"
+        />
 
 </android.support.design.widget.CoordinatorLayout>
diff --git a/app/src/main/res/layout/activity_cadastro_clientes.xml b/app/src/main/res/layout/activity_cadastro_clientes.xml
index 23be774..09d833d 100755
--- a/app/src/main/res/layout/activity_cadastro_clientes.xml
+++ b/app/src/main/res/layout/activity_cadastro_clientes.xml
@@ -17,5 +17,16 @@
 
     <include layout="@layout/content_cadastro_clientes" />
 
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/fab_SalvarCliente"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom|end"
+        android:layout_margin="@dimen/fab_margin"
+        android:src="@drawable/ic_salvar"
+        android:backgroundTint="@color/corVerde"
+        app:borderWidth="0dp"
+        />
+
 
 </android.support.design.widget.CoordinatorLayout>
diff --git a/app/src/main/res/layout/activity_home.xml b/app/src/main/res/layout/activity_home.xml
index e2a92b7..98e2992 100755
--- a/app/src/main/res/layout/activity_home.xml
+++ b/app/src/main/res/layout/activity_home.xml
@@ -8,9 +8,15 @@
     <include layout="@layout/app_bar_home" android:layout_width="match_parent"
         android:layout_height="match_parent" />
 
-    <android.support.design.widget.NavigationView android:id="@+id/nav_view"
-        android:layout_width="wrap_content" android:layout_height="match_parent"
-        android:layout_gravity="start" android:fitsSystemWindows="true"
-        app:headerLayout="@layout/nav_header_home" app:menu="@menu/activity_home_drawer" />
+    <android.support.design.widget.NavigationView
+        android:id="@+id/nav_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:fitsSystemWindows="true"
+        app:headerLayout="@layout/nav_header_home"
+        app:menu="@menu/activity_home_drawer"
+        app:itemTextColor="@color/corCinzaEscuro"
+        app:itemIconTint="@color/corCinzaEscuro"/>
 
 </android.support.v4.widget.DrawerLayout>
diff --git a/app/src/main/res/layout/activity_login.xml b/app/src/main/res/layout/activity_login.xml
index b7c9dae..b2d9fcd 100755
--- a/app/src/main/res/layout/activity_login.xml
+++ b/app/src/main/res/layout/activity_login.xml
@@ -1,11 +1,15 @@
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
-    android:layout_height="match_parent" android:gravity="center_horizontal"
-    android:orientation="vertical" android:paddingBottom="@dimen/activity_vertical_margin"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:gravity="center_horizontal"
+    android:orientation="vertical"
+    android:paddingBottom="@dimen/activity_vertical_margin"
     android:paddingLeft="@dimen/activity_horizontal_margin"
     android:paddingRight="@dimen/activity_horizontal_margin"
     android:paddingTop="@dimen/activity_vertical_margin"
-    android:background="@color/white"
+    android:background="@drawable/gradient"
     tools:context="com.example.desenvolvimento.navigationdrawercomercioexpress.LoginActivity">
 
     <!-- Login progress -->
@@ -24,6 +28,7 @@
                 android:layout_width="350dp"
                 android:layout_height="120dp"
                 android:layout_weight="0.15"
+                android:layout_marginTop="30dp"
                 android:src="@drawable/logo_expres_mobile"
                 android:layout_gravity="center_horizontal" />
 
@@ -35,13 +40,16 @@
                     android:layout_height="wrap_content" android:hint="@string/prompt_email"
                     android:inputType="textEmailAddress" android:maxLines="1"
                     android:singleLine="true"
+                    android:layout_marginTop="50dp"
                     android:textCursorDrawable="@drawable/cursor"/>
 
             </android.support.design.widget.TextInputLayout>
 
-            <android.support.design.widget.TextInputLayout android:layout_width="match_parent"
+            <android.support.design.widget.TextInputLayout
+                android:layout_width="match_parent"
                 android:layout_height="0dp"
-                android:layout_weight="1">
+                android:layout_weight="1"
+                >
 
                 <EditText android:id="@+id/password" android:layout_width="match_parent"
                     android:layout_height="wrap_content" android:hint="@string/prompt_password"
@@ -49,15 +57,18 @@
                     android:imeActionLabel="@string/action_sign_in_short"
                     android:imeOptions="actionUnspecified" android:inputType="textPassword"
                     android:maxLines="1" android:singleLine="true"
-                    android:textCursorDrawable="@drawable/cursor" />
+                    android:textCursorDrawable="@drawable/cursor"/>
             </android.support.design.widget.TextInputLayout>
 
-            <Button android:id="@+id/email_sign_in_button" style="?android:textAppearanceSmall"
-                android:layout_width="match_parent" android:layout_height="0dp"
+            <Button
+                android:id="@+id/email_sign_in_button"
+                style="?android:textAppearanceSmall"
+                android:layout_width="match_parent"
+                android:layout_height="0dp"
                 android:layout_marginTop="16dp" android:text="@string/action_sign_in"
                 android:textColor="@color/white"
                 android:textStyle="bold"
-                android:background="@drawable/estilo_botao"
+                android:background="@drawable/estilobotaoazul"
                 android:layout_gravity="center_horizontal"
                 android:layout_weight="1" />
 
diff --git a/app/src/main/res/layout/activity_manutencao_pedidos.xml b/app/src/main/res/layout/activity_manutencao_pedidos.xml
index 8b3505f..8ba6f18 100755
--- a/app/src/main/res/layout/activity_manutencao_pedidos.xml
+++ b/app/src/main/res/layout/activity_manutencao_pedidos.xml
@@ -17,5 +17,15 @@
 
     <include layout="@layout/content_manutencao_pedidos" />
 
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/fab_SalvarPedido"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom|end"
+        android:layout_margin="@dimen/fab_margin"
+        android:src="@drawable/ic_salvar"
+        android:backgroundTint="@color/corVerde"
+        app:borderWidth="0dp"
+        />
 
 </android.support.design.widget.CoordinatorLayout>
diff --git a/app/src/main/res/layout/activity_manutencao_produto_pedido.xml b/app/src/main/res/layout/activity_manutencao_produto_pedido.xml
index 0384aae..24c6d0a 100755
--- a/app/src/main/res/layout/activity_manutencao_produto_pedido.xml
+++ b/app/src/main/res/layout/activity_manutencao_produto_pedido.xml
@@ -17,5 +17,15 @@
 
     <include layout="@layout/content_manutencao_produto_pedido" />
 
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/fab_SalvarManutencaoProdutoPedido"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom|end"
+        android:layout_margin="@dimen/fab_margin"
+        android:src="@drawable/ic_salvar"
+        android:backgroundTint="@color/corVerde"
+        app:borderWidth="0dp"
+        />
 
 </android.support.design.widget.CoordinatorLayout>
diff --git a/app/src/main/res/layout/activity_opcoes.xml b/app/src/main/res/layout/activity_opcoes.xml
index 675619c..17f3339 100755
--- a/app/src/main/res/layout/activity_opcoes.xml
+++ b/app/src/main/res/layout/activity_opcoes.xml
@@ -8,9 +8,15 @@
     <include layout="@layout/app_bar_opcoes" android:layout_width="match_parent"
         android:layout_height="match_parent" />
 
-    <android.support.design.widget.NavigationView android:id="@+id/nav_view"
-        android:layout_width="wrap_content" android:layout_height="match_parent"
-        android:layout_gravity="start" android:fitsSystemWindows="true"
-        app:headerLayout="@layout/nav_header_opcoes" app:menu="@menu/activity_opcoes_drawer" />
+    <android.support.design.widget.NavigationView
+        android:id="@+id/nav_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:fitsSystemWindows="true"
+        app:headerLayout="@layout/nav_header_opcoes"
+        app:menu="@menu/activity_opcoes_drawer"
+        app:itemTextColor="@color/corCinzaEscuro"
+        app:itemIconTint="@color/corCinzaEscuro"/>
 
 </android.support.v4.widget.DrawerLayout>
diff --git a/app/src/main/res/layout/activity_oppening.xml b/app/src/main/res/layout/activity_oppening.xml
index 9a15c31..f20c547 100755
--- a/app/src/main/res/layout/activity_oppening.xml
+++ b/app/src/main/res/layout/activity_oppening.xml
@@ -5,7 +5,18 @@
     android:paddingRight="@dimen/activity_horizontal_margin"
     android:paddingTop="@dimen/activity_vertical_margin"
     android:paddingBottom="@dimen/activity_vertical_margin"
-    android:background="@drawable/fundo_oppening_tres"
+    android:background="@drawable/gradient"
     tools:context="com.example.desenvolvimento.navigationdrawercomercioexpress.Oppening">
 
+    <ImageView
+        android:id="@+id/img_LogoCentro"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_centerHorizontal="true"
+        android:layout_centerVertical="true"
+        android:scaleType="fitCenter"
+        android:layout_marginLeft="10dp"
+        android:layout_marginRight="10dp"
+        android:src="@drawable/logo_expres_mobile" />
+
 </RelativeLayout>
diff --git a/app/src/main/res/layout/activity_pedidos.xml b/app/src/main/res/layout/activity_pedidos.xml
index 3e42b09..558eeab 100755
--- a/app/src/main/res/layout/activity_pedidos.xml
+++ b/app/src/main/res/layout/activity_pedidos.xml
@@ -8,9 +8,15 @@
     <include layout="@layout/app_bar_pedidos" android:layout_width="match_parent"
         android:layout_height="match_parent" />
 
-    <android.support.design.widget.NavigationView android:id="@+id/nav_view"
-        android:layout_width="wrap_content" android:layout_height="match_parent"
-        android:layout_gravity="start" android:fitsSystemWindows="true"
-        app:headerLayout="@layout/nav_header_pedidos" app:menu="@menu/activity_pedidos_drawer" />
+    <android.support.design.widget.NavigationView
+        android:id="@+id/nav_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:fitsSystemWindows="true"
+        app:headerLayout="@layout/nav_header_pedidos"
+        app:menu="@menu/activity_pedidos_drawer"
+        app:itemTextColor="@color/corCinzaEscuro"
+        app:itemIconTint="@color/corCinzaEscuro"/>
 
 </android.support.v4.widget.DrawerLayout>
diff --git a/app/src/main/res/layout/activity_produtos.xml b/app/src/main/res/layout/activity_produtos.xml
index b75a4fd..d00beb7 100755
--- a/app/src/main/res/layout/activity_produtos.xml
+++ b/app/src/main/res/layout/activity_produtos.xml
@@ -8,9 +8,15 @@
     <include layout="@layout/app_bar_produtos" android:layout_width="match_parent"
         android:layout_height="match_parent" />
 
-    <android.support.design.widget.NavigationView android:id="@+id/nav_view"
-        android:layout_width="wrap_content" android:layout_height="match_parent"
-        android:layout_gravity="start" android:fitsSystemWindows="true"
-        app:headerLayout="@layout/nav_header_produtos" app:menu="@menu/activity_produtos_drawer" />
+    <android.support.design.widget.NavigationView
+        android:id="@+id/nav_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:fitsSystemWindows="true"
+        app:headerLayout="@layout/nav_header_produtos"
+        app:menu="@menu/activity_produtos_drawer"
+        app:itemTextColor="@color/corCinzaEscuro"
+        app:itemIconTint="@color/corCinzaEscuro"/>
 
 </android.support.v4.widget.DrawerLayout>
diff --git a/app/src/main/res/layout/activity_selecao_cliente.xml b/app/src/main/res/layout/activity_selecao_cliente.xml
index 312e5b2..eacdd6c 100755
--- a/app/src/main/res/layout/activity_selecao_cliente.xml
+++ b/app/src/main/res/layout/activity_selecao_cliente.xml
@@ -9,14 +9,35 @@
     <android.support.design.widget.AppBarLayout android:layout_height="wrap_content"
         android:layout_width="match_parent" android:theme="@style/AppTheme.AppBarOverlay">
 
-        <android.support.v7.widget.Toolbar android:id="@+id/toolbar"
-            android:layout_width="match_parent" android:layout_height="?attr/actionBarSize"
-            android:background="?attr/colorPrimary" app:popupTheme="@style/AppTheme.PopupOverlay" />
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/AppTheme.PopupOverlay" >
 
-    </android.support.design.widget.AppBarLayout>
+            <TextView
+                android:id="@+id/lb_TituloClientesPedidos"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Selecionar Cliente"
+                android:textColor="@color/corBranca"
+                android:textSize="20dp"/>
 
-    <include layout="@layout/content_selecao_cliente" />
+            <com.miguelcatalan.materialsearchview.MaterialSearchView
+                android:id="@+id/sv_ClientesPedidos"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:hint="Buscar pelo nome"
+                style="@style/MaterialSearchViewStyle"
+                >
+
+            </com.miguelcatalan.materialsearchview.MaterialSearchView>
 
+        </android.support.v7.widget.Toolbar>
 
+    </android.support.design.widget.AppBarLayout>
+
+    <include layout="@layout/content_selecao_cliente" />
 
 </android.support.design.widget.CoordinatorLayout>
diff --git a/app/src/main/res/layout/activity_sincronizar.xml b/app/src/main/res/layout/activity_sincronizar.xml
index df10912..1b2c75e 100755
--- a/app/src/main/res/layout/activity_sincronizar.xml
+++ b/app/src/main/res/layout/activity_sincronizar.xml
@@ -12,6 +12,8 @@
         android:layout_width="wrap_content" android:layout_height="match_parent"
         android:layout_gravity="start" android:fitsSystemWindows="true"
         app:headerLayout="@layout/nav_header_sincronizar"
-        app:menu="@menu/activity_sincronizar_drawer" />
+        app:menu="@menu/activity_sincronizar_drawer"
+        app:itemTextColor="@color/corCinzaEscuro"
+        app:itemIconTint="@color/corCinzaEscuro"/>
 
 </android.support.v4.widget.DrawerLayout>
diff --git a/app/src/main/res/layout/activity_visao_geral_nova.xml b/app/src/main/res/layout/activity_visao_geral_nova.xml
new file mode 100644
index 0000000..bb7cb3f
--- /dev/null
+++ b/app/src/main/res/layout/activity_visao_geral_nova.xml
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:openDrawer="start">
+
+    <include
+        layout="@layout/app_bar_visao_geral_nova"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+    <android.support.design.widget.NavigationView
+        android:id="@+id/nav_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:fitsSystemWindows="true"
+        app:headerLayout="@layout/nav_header_pedidos"
+        app:menu="@menu/activity_pedidos_drawer"
+        app:itemTextColor="@color/corCinzaEscuro"
+        app:itemIconTint="@color/corCinzaEscuro"/>
+
+</android.support.v4.widget.DrawerLayout>
diff --git a/app/src/main/res/layout/app_bar_home.xml b/app/src/main/res/layout/app_bar_home.xml
index 6f7689c..1645312 100755
--- a/app/src/main/res/layout/app_bar_home.xml
+++ b/app/src/main/res/layout/app_bar_home.xml
@@ -9,17 +9,45 @@
     <android.support.design.widget.AppBarLayout android:layout_height="wrap_content"
         android:layout_width="match_parent" android:theme="@style/AppTheme.AppBarOverlay">
 
-        <android.support.v7.widget.Toolbar android:id="@+id/toolbar"
-            android:layout_width="match_parent" android:layout_height="?attr/actionBarSize"
-            android:background="?attr/colorPrimary" app:popupTheme="@style/AppTheme.PopupOverlay" />
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/AppTheme.PopupOverlay" >
+
+            <TextView
+                android:id="@+id/lb_TituloClientes"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Seleção de Clientes"
+                android:textColor="@color/corBranca"
+                android:textSize="20dp"/>
+
+            <com.miguelcatalan.materialsearchview.MaterialSearchView
+                android:id="@+id/sv_Clientes"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:hint="Buscar pelo nome"
+                style="@style/MaterialSearchViewStyle"
+                >
+
+            </com.miguelcatalan.materialsearchview.MaterialSearchView>
+
+        </android.support.v7.widget.Toolbar>
 
     </android.support.design.widget.AppBarLayout>
 
     <include layout="@layout/content_home" />
 
-    <android.support.design.widget.FloatingActionButton android:id="@+id/fab"
-        android:layout_width="wrap_content" android:layout_height="wrap_content"
-        android:layout_gravity="bottom|end" android:layout_margin="@dimen/fab_margin"
-        android:src="@android:drawable/ic_input_add" />
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/fab"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom|end"
+        android:layout_margin="@dimen/fab_margin"
+        android:src="@drawable/ic__adicionar"
+        android:backgroundTint="@color/corVerde"
+        app:borderWidth="0dp"/>
 
 </android.support.design.widget.CoordinatorLayout>
diff --git a/app/src/main/res/layout/app_bar_pedidos.xml b/app/src/main/res/layout/app_bar_pedidos.xml
index ef0f196..ee00bcd 100755
--- a/app/src/main/res/layout/app_bar_pedidos.xml
+++ b/app/src/main/res/layout/app_bar_pedidos.xml
@@ -6,20 +6,51 @@
     android:layout_height="match_parent" android:fitsSystemWindows="true"
     tools:context="com.example.desenvolvimento.navigationdrawercomercioexpress.Pedidos">
 
-    <android.support.design.widget.AppBarLayout android:layout_height="wrap_content"
-        android:layout_width="match_parent" android:theme="@style/AppTheme.AppBarOverlay">
+    <android.support.design.widget.AppBarLayout
+        android:layout_height="wrap_content"
+        android:layout_width="match_parent"
+        android:theme="@style/AppTheme.AppBarOverlay">
 
-        <android.support.v7.widget.Toolbar android:id="@+id/toolbar"
-            android:layout_width="match_parent" android:layout_height="?attr/actionBarSize"
-            android:background="?attr/colorPrimary" app:popupTheme="@style/AppTheme.PopupOverlay" />
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/AppTheme.PopupOverlay">
+
+            <TextView
+                android:id="@+id/lb_TituloPedidos"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Seleção de Pedidos"
+                android:textColor="@color/corBranca"
+                android:textSize="20dp"/>
+
+            <com.miguelcatalan.materialsearchview.MaterialSearchView
+                android:id="@+id/sv_Pedidos"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:hint="Buscar por cliente"
+                style="@style/MaterialSearchViewStyle"
+                >
+
+            </com.miguelcatalan.materialsearchview.MaterialSearchView>
+
+        </android.support.v7.widget.Toolbar>
 
     </android.support.design.widget.AppBarLayout>
 
     <include layout="@layout/content_pedidos" />
 
-    <android.support.design.widget.FloatingActionButton android:id="@+id/fab"
-        android:layout_width="wrap_content" android:layout_height="wrap_content"
-        android:layout_gravity="bottom|end" android:layout_margin="@dimen/fab_margin"
-        android:src="@android:drawable/ic_input_add" />
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/fab"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom|end"
+        android:layout_margin="@dimen/fab_margin"
+        android:src="@drawable/ic__adicionar"
+        android:backgroundTint="@color/corVerde"
+        app:borderWidth="0dp"
+        />
 
 </android.support.design.widget.CoordinatorLayout>
diff --git a/app/src/main/res/layout/app_bar_produtos.xml b/app/src/main/res/layout/app_bar_produtos.xml
index bfc653f..8a5932f 100755
--- a/app/src/main/res/layout/app_bar_produtos.xml
+++ b/app/src/main/res/layout/app_bar_produtos.xml
@@ -9,9 +9,32 @@
     <android.support.design.widget.AppBarLayout android:layout_height="wrap_content"
         android:layout_width="match_parent" android:theme="@style/AppTheme.AppBarOverlay">
 
-        <android.support.v7.widget.Toolbar android:id="@+id/toolbar"
-            android:layout_width="match_parent" android:layout_height="?attr/actionBarSize"
-            android:background="?attr/colorPrimary" app:popupTheme="@style/AppTheme.PopupOverlay" />
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/AppTheme.PopupOverlay" >
+
+            <TextView
+                android:id="@+id/lb_TituloProdutos"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Seleção de Produtos"
+                android:textColor="@color/corBranca"
+                android:textSize="20dp"/>
+
+            <com.miguelcatalan.materialsearchview.MaterialSearchView
+                android:id="@+id/sv_Produtos"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:hint="Buscar pelo código ou descrição"
+                style="@style/MaterialSearchViewStyle"
+                >
+
+            </com.miguelcatalan.materialsearchview.MaterialSearchView>
+
+        </android.support.v7.widget.Toolbar>
 
     </android.support.design.widget.AppBarLayout>
 
diff --git a/app/src/main/res/layout/app_bar_visao_geral_nova.xml b/app/src/main/res/layout/app_bar_visao_geral_nova.xml
new file mode 100644
index 0000000..c3829e6
--- /dev/null
+++ b/app/src/main/res/layout/app_bar_visao_geral_nova.xml
@@ -0,0 +1,80 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".VisaoGeralNova">
+
+    <android.support.design.widget.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:theme="@style/AppTheme.AppBarOverlay">
+
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/AppTheme.PopupOverlay" />
+
+    </android.support.design.widget.AppBarLayout>
+
+    <include layout="@layout/content_visao_geral_nova" />
+
+    <com.github.clans.fab.FloatingActionMenu
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/fab_incluir"
+        android:layout_alignParentBottom="true"
+        android:layout_alignParentEnd="true"
+        android:layout_alignParentRight="true"
+        android:layout_margin="16dp"
+        android:layout_gravity="bottom|end"
+        app:menu_backgroundColor="@android:color/transparent"
+        app:menu_showShadow="true"
+        app:menu_fab_label=""
+        app:menu_openDirection="up"
+        app:menu_colorNormal="@color/corVerde"
+        app:menu_colorPressed="@color/corVerde"
+        app:menu_colorRipple="@color/corVerde"
+        >
+
+        <com.github.clans.fab.FloatingActionButton
+            android:id="@+id/fab_ClienteVisao"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            app:fab_label="Clientes"
+            app:fab_size="mini"
+            app:fab_colorNormal="@color/corVerde"
+            app:fab_colorPressed="@color/corVerde"
+            app:fab_colorRipple="@color/corVerde"
+            android:src="@drawable/ic_cliente_branco" />
+
+        <com.github.clans.fab.FloatingActionButton
+            android:id="@+id/fab_PedidoVisao"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            app:fab_label="Pedidos"
+            app:fab_size="mini"
+            app:fab_colorNormal="@color/corVerde"
+            app:fab_colorPressed="@color/corVerde"
+            app:fab_colorRipple="@color/corVerde"
+            android:src="@drawable/ic_pedidos_branco" />
+
+
+        <com.github.clans.fab.FloatingActionButton
+            android:id="@+id/fab_ProdutoVisao"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            app:fab_label="Produtos"
+            app:fab_size="mini"
+            app:fab_colorNormal="@color/corVerde"
+            app:fab_colorPressed="@color/corVerde"
+            app:fab_colorRipple="@color/corVerde"
+            android:src="@drawable/ic_produto_branco" />
+
+
+    </com.github.clans.fab.FloatingActionMenu>
+
+</android.support.design.widget.CoordinatorLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/content_adicionar_produtos_customizada.xml b/app/src/main/res/layout/content_adicionar_produtos_customizada.xml
index 162f7ca..ca8307d 100755
--- a/app/src/main/res/layout/content_adicionar_produtos_customizada.xml
+++ b/app/src/main/res/layout/content_adicionar_produtos_customizada.xml
@@ -18,6 +18,7 @@
         android:hint="Selecione pelo código ou a descrição"
         android:padding="10dip"
         android:textColor="@color/black"
+        android:visibility="gone"
         android:textCursorDrawable="@drawable/cursor">
 
     </EditText>
@@ -27,6 +28,7 @@
         android:padding="5dp"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
+        android:visibility="gone"
         android:layout_alignTop="@+id/tb_buscarprodutoPedido"
         android:layout_alignBottom="@+id/tb_buscarprodutoPedido"
         android:layout_alignRight="@+id/tb_buscarprodutoPedido"
@@ -40,6 +42,6 @@
         android:id="@+id/lista"
         android:fastScrollAlwaysVisible="true"
         android:fastScrollEnabled="true"
-        android:layout_marginTop="50dp"/>
+        android:layout_marginTop="10dp"/>
 
 </RelativeLayout>
diff --git a/app/src/main/res/layout/content_cadastro_clientes.xml b/app/src/main/res/layout/content_cadastro_clientes.xml
index c47f657..15e56c8 100755
--- a/app/src/main/res/layout/content_cadastro_clientes.xml
+++ b/app/src/main/res/layout/content_cadastro_clientes.xml
@@ -14,37 +14,6 @@
     <RelativeLayout android:layout_width="fill_parent"
         android:layout_height="match_parent" >
 
-        <TextView
-            android:id="@+id/lb_email2"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_below="@+id/tb_nmcontato"
-            android:layout_alignParentStart="true"
-            android:layout_alignParentLeft="true"
-            android:layout_marginTop="15dp"
-            android:text="@string/email"
-            android:textAppearance="?android:attr/textAppearanceMedium"
-            android:textColor="@color/black" />
-
-        <EditText
-            android:id="@+id/tb_email2"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_below="@+id/lb_email"
-            android:layout_alignEnd="@+id/tb_endereco"
-            android:layout_alignRight="@+id/tb_endereco"
-            android:layout_alignParentStart="true"
-            android:layout_alignParentLeft="true"
-            android:ems="10"
-            android:hint="email@provedor.com.br"
-            android:inputType="textEmailAddress"
-            android:padding="10dip"
-            android:singleLine="true"
-            android:textAllCaps="true"
-            android:textColor="@color/black"
-            android:textColorHint="@color/cor_dica"
-            android:textCursorDrawable="@drawable/cursor" />
-
         <TextView android:layout_width="fill_parent"
             android:layout_height="wrap_content"
             android:textAppearance="?android:attr/textAppearanceSmall"
@@ -54,8 +23,8 @@
             android:layout_alignParentLeft="true"
             android:layout_alignParentStart="true"
             android:textAlignment="center"
-            android:visibility="invisible"
-            android:layout_marginTop="-5dp" />
+            android:visibility="gone"
+            android:layout_marginTop="5dp" />
 
         <TextView android:layout_width="wrap_content"
             android:layout_height="wrap_content"
@@ -603,113 +572,7 @@
             android:layout_alignEnd="@+id/tb_cnpj"
             />
 
-        <TextView android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text=" "
-            android:id="@+id/lb_sccadastrar"
-            android:textColor="@color/black"
-            android:layout_below="@+id/cb_tipcliente"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true"
-            android:layout_marginTop="0dp" />
-
-        <Button android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/btn_cadastrar"
-            android:id="@+id/button"
-            android:layout_below="@+id/lb_sccadastrar"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true"
-            android:layout_marginTop="15dp"
-            android:layout_alignRight="@+id/tb_bairro"
-            android:layout_alignEnd="@+id/tb_bairro"
-            android:layout_gravity="center"
-            android:textColor="@color/white"
-            android:textStyle="bold"
-            android:textAllCaps="true"
-            android:background="@drawable/estilo_botao"/>
-
-        <TextView android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text=" "
-            android:id="@+id/lb_scalterar"
-            android:textColor="@color/black"
-            android:layout_below="@+id/button"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true"
-            android:layout_marginTop="0dp" />
 
-        <Button android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/btn_alterar"
-            android:id="@+id/sc_alterar"
-            android:layout_below="@+id/lb_scalterar"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true"
-            android:layout_marginTop="15dp"
-            android:layout_alignRight="@+id/tb_bairro"
-            android:layout_alignEnd="@+id/tb_bairro"
-            android:layout_gravity="center"
-            android:textColor="@color/white"
-            android:textStyle="bold"
-            android:textAllCaps="true"
-            android:background="@drawable/estilo_botao"/>
-
-        <TextView android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text=" "
-            android:id="@+id/lb_scexcluir"
-            android:textColor="@color/black"
-            android:layout_below="@+id/sc_alterar"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true"
-            android:layout_marginTop="0dp" />
-
-        <Button android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="Excluir"
-            android:id="@+id/sc_excluir"
-            android:layout_below="@+id/lb_scexcluir"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true"
-            android:layout_marginTop="15dp"
-            android:layout_alignRight="@+id/tb_bairro"
-            android:layout_alignEnd="@+id/tb_bairro"
-            android:layout_gravity="center"
-            android:textColor="@color/white"
-            android:textStyle="bold"
-            android:textAllCaps="true"
-            android:background="@drawable/estilo_botao_excluir"/>
-
-        <TextView android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text=" "
-            android:id="@+id/lb_sccancelar"
-            android:textColor="@color/black"
-            android:layout_below="@+id/sc_excluir"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true"
-            android:layout_marginTop="0dp" />
-
-        <Button android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/btn_cancelar"
-            android:id="@+id/sc_cancelar"
-            android:layout_below="@+id/lb_sccancelar"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true"
-            android:layout_marginTop="15dp"
-            android:layout_alignRight="@+id/tb_bairro"
-            android:layout_alignEnd="@+id/tb_bairro"
-            android:layout_gravity="center"
-            android:textColor="@color/white"
-            android:textStyle="bold"
-            android:textAllCaps="true"
-            android:background="@drawable/estilo_botao"/>
 
         <TextView android:layout_width="wrap_content"
             android:layout_height="wrap_content"
@@ -719,7 +582,9 @@
             android:layout_alignParentBottom="true"
             android:layout_alignParentLeft="true"
             android:layout_alignParentStart="true"
-            android:layout_gravity="center" />
+            android:layout_gravity="center"
+            android:layout_below="@+id/cb_tipcliente"
+            android:layout_marginBottom="30dp"/>
 
     </RelativeLayout>
 
diff --git a/app/src/main/res/layout/content_home.xml b/app/src/main/res/layout/content_home.xml
index adbc339..a9331f2 100755
--- a/app/src/main/res/layout/content_home.xml
+++ b/app/src/main/res/layout/content_home.xml
@@ -20,7 +20,8 @@
             android:background="@drawable/edittext_foco"
             android:textColor="@color/black"
             android:textCursorDrawable="@drawable/cursor"
-            android:padding="10dip">
+            android:padding="10dip"
+        android:visibility="gone">
 
         </EditText>
 
@@ -33,6 +34,7 @@
             android:layout_alignBottom="@+id/tb_buscarcliente"
             android:layout_alignRight="@+id/tb_buscarcliente"
             android:src="@android:drawable/ic_search_category_default"
+            android:visibility="gone"
             />
 
     <ListView
@@ -43,7 +45,7 @@
         android:layout_alignParentStart="true"
         android:fastScrollAlwaysVisible="true"
         android:fastScrollEnabled="true"
-        android:layout_marginTop="50dp"
+        android:layout_marginTop="0dp"
         />
 
     <GridLayout
diff --git a/app/src/main/res/layout/content_manutencao_pedidos.xml b/app/src/main/res/layout/content_manutencao_pedidos.xml
index dea1b14..f411d1e 100755
--- a/app/src/main/res/layout/content_manutencao_pedidos.xml
+++ b/app/src/main/res/layout/content_manutencao_pedidos.xml
@@ -1,339 +1,372 @@
 <?xml version="1.0" encoding="utf-8"?>
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+<ScrollView
+    xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
-    xmlns:app="http://schemas.android.com/apk/res-auto" android:layout_width="match_parent"
-    android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin"
-    android:paddingBottom="@dimen/activity_vertical_margin"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
     app:layout_behavior="@string/appbar_scrolling_view_behavior"
     tools:showIn="@layout/activity_manutencao_pedidos"
     tools:context="com.example.desenvolvimento.navigationdrawercomercioexpress.ManutencaoPedidos"
     android:focusable="true"
+    android:orientation="vertical"
+    android:fillViewport="true"
     android:focusableInTouchMode="true"
+    android:background="@color/corBranca"
      >
 
-    <RelativeLayout android:layout_width="fill_parent"
+    <RelativeLayout
+        android:layout_width="match_parent"
         android:layout_height="match_parent" >
 
+        <android.support.constraint.ConstraintLayout
+            android:id="@+id/la_Cliente"
+            android:layout_width="match_parent"
+            android:layout_height="90sp"
+            android:background="@drawable/layoutsecaocliente"
+            android:layout_marginTop="0sp"
+            android:orientation="horizontal">
+
+            <ImageView
+                android:id="@+id/img_SelecionarCliente"
+                android:layout_width="wrap_content"
+                android:layout_height="90sp"
+                android:textAlignment="center"
+                android:layout_marginLeft="20sp"
+                android:padding="5sp"
+                android:src="@drawable/ic_cliente_branco"
+                android:gravity="center_vertical"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toTopOf="parent"/>
 
+            <TextView
+                android:id="@+id/lb_SelecionarClienteResultado"
+                android:layout_width="match_parent"
+                android:layout_height="90sp"
+                android:layout_centerVertical="true"
+                android:text="@string/campo_lb_selecionarcliente"
+                android:textColor="@color/corBranca"
+                android:layout_marginLeft="70sp"
+                android:textSize="16sp"
+                android:gravity="center_vertical"
+                android:layout_marginRight="60sp"
+                app:layout_constraintStart_toEndOf="@+id/img_SelecionarCliente"
+                app:layout_constraintTop_toTopOf="@+id/img_SelecionarCliente"
+                />
+
+            <android.support.design.widget.FloatingActionButton
+                android:id="@+id/fab_AddClienteVenda"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                app:fabCustomSize="55sp"
+                android:layout_alignParentRight="true"
+                android:layout_centerVertical="true"
+                android:layout_marginTop="-10dp"
+                android:layout_marginRight="5dp"
+                android:backgroundTint="@color/azulEscuroNovaIdentidade"
+                app:borderWidth="0dp"
+                android:contentDescription="Teste"
+                app:fab_colorNormal="@color/corCinza"
+                app:srcCompat="@drawable/ic_venda_cliente"
+                app:layout_constraintRight_toRightOf="parent"
+                app:layout_constraintBottom_toBottomOf="@+id/lb_SelecionarClienteResultado"
+                app:layout_constraintStart_toEndOf="@+id/lb_SelecionarClienteResultado"
+                app:layout_constraintTop_toTopOf="@+id/lb_SelecionarClienteResultado"
+                />
+
+        </android.support.constraint.ConstraintLayout>
+
+        <android.support.constraint.ConstraintLayout
+            android:id="@+id/la_Produto"
+            android:layout_width="match_parent"
+            android:layout_height="90sp"
+            android:background="@drawable/layoutsecaoproduto"
+            android:layout_marginTop="0sp"
+            android:layout_below="@+id/la_Cliente"
+            android:orientation="horizontal">
+
+            <ImageView
+                android:id="@+id/img_SelecionarProduto"
+                android:layout_width="wrap_content"
+                android:layout_height="90sp"
+                android:textAlignment="center"
+                android:layout_marginLeft="20sp"
+                android:padding="5sp"
+                android:src="@drawable/ic_produto_branco"
+                android:gravity="center_vertical"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toTopOf="parent"/>
+
+            <TextView
+                android:id="@+id/lb_SelecionarProdutoResultado"
+                android:layout_width="match_parent"
+                android:layout_height="90sp"
+                android:layout_centerVertical="true"
+                android:text="@string/campo_lb_selecionarproduto"
+                android:textColor="@color/corBranca"
+                android:layout_marginLeft="70sp"
+                android:textSize="16sp"
+                android:gravity="center_vertical"
+                android:layout_marginRight="60sp"
+                app:layout_constraintStart_toEndOf="@+id/img_SelecionarProduto"
+                app:layout_constraintTop_toTopOf="@+id/img_SelecionarProduto"
+                />
+
+            <android.support.design.widget.FloatingActionButton
+                android:id="@+id/fab_AddProdutoVenda"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                app:fabCustomSize="55sp"
+                android:layout_alignParentRight="true"
+                android:layout_centerVertical="true"
+                android:layout_marginTop="-10dp"
+                android:layout_marginRight="5dp"
+                android:backgroundTint="@color/corVerdeMuitoTransparente"
+                app:borderWidth="0dp"
+                android:contentDescription="Teste"
+                app:fab_colorNormal="@color/corCinza"
+                app:srcCompat="@drawable/ic_adicionar_produto"
+                app:layout_constraintRight_toRightOf="parent"
+                app:layout_constraintBottom_toBottomOf="@+id/lb_SelecionarProdutoResultado"
+                app:layout_constraintStart_toEndOf="@+id/lb_SelecionarProdutoResultado"
+                app:layout_constraintTop_toTopOf="@+id/lb_SelecionarProdutoResultado"
+                />
+
+        </android.support.constraint.ConstraintLayout>
+
+        <RelativeLayout
+            android:id="@+id/la_ListaProdutos"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/la_Produto"
+            android:visibility="gone"
+            android:background="@drawable/layoutsecaolistaproduto">
 
 
             <TextView
+                android:id="@+id/lb_ocultarProdutos"
                 android:layout_width="fill_parent"
-                android:layout_height="50dp"
-                android:gravity="center"
+                android:layout_height="50sp"
+                android:layout_marginLeft="15sp"
+                android:gravity="center_vertical"
                 android:textAppearance="?android:attr/textAppearanceMedium"
-                android:text=""
-                android:textColor="@color/white"
-                android:id="@+id/lb_rzsocialClientePedidos"
-                android:background="@color/white"
-                android:layout_alignParentTop="true"
+                android:text="@string/campo_mostrarprodutos"
+                android:enabled="true"
+                android:textColor="@color/corBranca"
                 android:layout_alignParentLeft="true"
-                android:layout_alignParentStart="true" />
-
-        <ImageView
-            android:id="@+id/imageView1"
-            android:padding="-5dp"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignTop="@+id/lb_rzsocialClientePedidos"
-            android:layout_alignBottom="@+id/lb_rzsocialClientePedidos"
-            android:layout_alignLeft="@+id/lb_rzsocialClientePedidos"
-            android:src="@drawable/ic_action"
-            android:background="@color/cor_botao"
-            />
-
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="60dp"
-            android:gravity="center"
-            android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text="Toque para selecionar um cliente..."
-            android:textColor="@color/black"
-            android:id="@+id/lb_rzsocialClientePedidosTeste"
-            android:layout_alignTop="@+id/lb_rzsocialClientePedidos"
-            android:layout_alignBottom="@+id/lb_rzsocialClientePedidos"
-            android:layout_alignLeft="@+id/lb_rzsocialClientePedidos"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true" />
+                android:layout_alignParentStart="true"/>
 
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="50dp"
-            android:gravity="center"
-            android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text=""
-            android:layout_marginTop="10dp"
-            android:textColor="@color/black"
-            android:enabled="false"
-            android:id="@+id/lb_descricaoProdutoPedidos"
-            android:background="@color/white"
-            android:layout_below="@+id/lb_rzsocialClientePedidos"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true" />
+            <TextView
+                android:id="@+id/lb_valorTotalProdutos"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="190dp"
+                android:textAppearance="?android:attr/textAppearanceSmall"
+                android:text="Total: R$"
+                android:enabled="false"
+                android:textColor="@color/corBranca"
+                android:layout_alignTop="@+id/lb_ocultarProdutos"
+                android:layout_alignBottom="@+id/lb_ocultarProdutos"
+                android:layout_alignRight="@+id/lb_ocultarProdutos"
+                android:layout_alignParentRight="true"
+                android:layout_marginTop="5dp"/>
 
-        <ImageView
-            android:id="@+id/imageViewProduto"
-            android:padding="-5dp"
-            android:enabled="false"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignTop="@+id/lb_descricaoProdutoPedidos"
-            android:layout_alignBottom="@+id/lb_descricaoProdutoPedidos"
-            android:layout_alignLeft="@+id/lb_descricaoProdutoPedidos"
-            android:src="@drawable/ic_action_plus"
-            android:background="@color/verde_claro"
-            />
+            <TextView
+                android:id="@+id/lb_qtdeTotalProdutos"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="190dp"
+                android:textAppearance="?android:attr/textAppearanceSmall"
+                android:text="Qtde: "
+                android:enabled="false"
+                android:textColor="@color/corBranca"
+                android:layout_alignParentRight="true"
+                android:layout_marginBottom="10sp"
+                android:layout_marginTop="25dp"/>
 
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="60dp"
-            android:gravity="center"
-            android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text="Adicionar Produto"
-            android:enabled="false"
-            android:textColor="@color/black"
-            android:id="@+id/lb_descricaoProdutoPedidosTeste"
-            android:layout_alignTop="@+id/lb_descricaoProdutoPedidos"
-            android:layout_alignBottom="@+id/lb_descricaoProdutoPedidos"
-            android:layout_alignLeft="@+id/lb_descricaoProdutoPedidos"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true" />
 
-        <Button android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="Selecionar cliente"
-            android:id="@+id/sc_selecionarcliente"
-            android:layout_below="@+id/lb_rzsocialClientePedidos"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true"
-            android:layout_marginTop="5dp"
-            android:visibility="invisible"
-            android:layout_alignRight="@+id/tb_bairro"
-            android:layout_alignEnd="@+id/tb_bairro"
-            android:layout_gravity="center"
-            android:textColor="@color/white"
-            android:textStyle="bold"
-            android:background="@drawable/estilo_botao"/>
+            <ListView
+                android:id="@+id/listViewItemPedidos"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_below="@+id/lb_ocultarProdutos"
+                android:layout_alignParentLeft="true"
+                android:layout_alignParentStart="true"
+                android:layout_marginTop="25sp"
+                android:layout_marginLeft="15sp"
+                android:layout_marginRight="15sp"
+                android:layout_marginBottom="15sp"
+                android:visibility="gone" />
 
-        <Button android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="Selecionar produto"
-            android:id="@+id/sc_selecionarprodutos"
-            android:layout_below="@+id/lb_descricaoProdutoPedidos"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true"
-            android:layout_marginTop="5dp"
-            android:visibility="invisible"
-            android:layout_alignRight="@+id/tb_bairro"
-            android:layout_alignEnd="@+id/tb_bairro"
-            android:layout_gravity="center"
-            android:textColor="@color/white"
-            android:textStyle="bold"
-            android:background="@drawable/estilo_botao"/>
+        </RelativeLayout>
 
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="50dp"
-            android:gravity="center"
-            android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text=""
-            android:layout_marginTop="10dp"
-            android:textColor="@color/black"
-            android:enabled="false"
-            android:id="@+id/lb_fundoOcultarProdutos"
-            android:background="@color/white"
-            android:layout_below="@+id/lb_descricaoProdutoPedidos"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true" />
 
         <TextView
-            android:layout_width="fill_parent"
+            android:id="@+id/lb_dtEmissao"
+            android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:layout_marginLeft="15dp"
-            android:gravity="center_vertical"
             android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text="Mostrar Produtos"
-            android:enabled="true"
-            android:textColor="@color/black"
-            android:id="@+id/lb_ocultarProdutos"
-            android:layout_alignTop="@+id/lb_fundoOcultarProdutos"
-            android:layout_alignBottom="@+id/lb_fundoOcultarProdutos"
-            android:layout_alignLeft="@+id/lb_fundoOcultarProdutos"
+            android:text="@string/campo_dtemissao"
+            android:textSize="16sp"
+            android:layout_marginLeft="15sp"
+            android:textColor="@color/cor_teste"
+            android:layout_below="@+id/la_ListaProdutos"
             android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true" />
+            android:layout_alignParentStart="true"
+            android:layout_marginTop="15dp" />
 
         <TextView
-            android:layout_width="fill_parent"
+            android:id="@+id/lb_dtEmissaoResultado"
+            android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:layout_marginLeft="190dp"
-            android:textAppearance="?android:attr/textAppearanceSmall"
-            android:text="Total: R$"
+            android:textAppearance="?android:attr/textAppearanceMedium"
+            android:text=""
+            android:textColor="@color/cor_teste"
+            android:layout_marginTop="-2sp"
             android:enabled="false"
-            android:textColor="@color/black"
-            android:id="@+id/lb_valorTotalProdutos"
-            android:layout_alignTop="@+id/lb_fundoOcultarProdutos"
-            android:layout_alignBottom="@+id/lb_fundoOcultarProdutos"
-            android:layout_alignRight="@+id/lb_fundoOcultarProdutos"
-            android:layout_alignParentRight="true"
-            android:layout_marginTop="5dp"/>
+            android:textSize="18sp"
+            android:layout_toEndOf="@+id/lb_dtEmissao"
+            android:layout_alignBottom="@+id/lb_dtEmissao"
+            android:layout_alignTop="@+id/lb_dtEmissao"
+            android:layout_marginLeft="5sp"/>
 
         <TextView
+            android:id="@+id/lb_vlDesconto"
             android:layout_width="fill_parent"
             android:layout_height="wrap_content"
-            android:layout_marginLeft="190dp"
-            android:textAppearance="?android:attr/textAppearanceSmall"
-            android:text="Qtde: "
-            android:enabled="false"
-            android:textColor="@color/black"
-            android:id="@+id/lb_qtdeTotalProdutos"
-            android:layout_alignTop="@+id/lb_fundoOcultarProdutos"
-            android:layout_alignBottom="@+id/lb_fundoOcultarProdutos"
-            android:layout_alignRight="@+id/lb_fundoOcultarProdutos"
-            android:layout_alignParentRight="true"
-            android:layout_marginTop="25dp"/>
-
-
-            <ListView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:id="@+id/listViewItemPedidos"
-                android:layout_below="@+id/lb_fundoOcultarProdutos"
-                android:layout_alignParentLeft="true"
-                android:layout_alignParentStart="true"
-                android:layout_marginTop="5dp"
-                android:visibility="invisible"
-                android:background="@color/white" />
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
             android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text="Data de Emissão: "
-            android:textSize="14dp"
-            android:id="@+id/tb_dtemissao"
+            android:text="@string/campo_vldescontopedido"
+            android:textSize="16sp"
+            android:layout_marginLeft="15sp"
             android:textColor="@color/cor_teste"
-            android:layout_below="@+id/listViewItemPedidos"
+            android:layout_below="@+id/lb_dtEmissao"
             android:layout_alignParentLeft="true"
             android:layout_alignParentStart="true"
             android:layout_marginTop="15dp" />
 
-        <TextView
+        <EditText
+            android:id="@+id/tb_vlDesconto"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text=""
-            android:id="@+id/tb_dtemissaoResultado"
+            android:inputType="number"
+            android:layout_below="@+id/lb_vlDesconto"
+            android:layout_alignParentLeft="true"
+            android:layout_alignParentStart="true"
+            android:layout_alignParentRight="true"
+            android:layout_alignParentEnd="true"
+            android:layout_marginLeft="15sp"
+            android:layout_marginRight="15sp"
+            android:singleLine="true"
+            android:padding="10dip"
             android:textColor="@color/black"
-            android:layout_below="@+id/listViewItemPedidos"
-            android:layout_alignTop="@+id/tb_dtemissao"
-            android:layout_alignBottom="@+id/tb_dtemissao"
-            android:layout_marginTop="-5dp"
-            android:enabled="false"
-            android:layout_marginLeft="120dp"/>
+            android:textCursorDrawable="@drawable/cursor"
+            />
 
         <TextView
+            android:id="@+id/lb_percDesconto"
             android:layout_width="fill_parent"
             android:layout_height="wrap_content"
             android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text="Valor do Desconto: "
+            android:text="Desconto (%): "
             android:textSize="14dp"
-            android:id="@+id/lb_vldescontoPedido"
             android:textColor="@color/cor_teste"
-            android:layout_below="@+id/tb_dtemissao"
+            android:layout_below="@+id/lb_vlDesconto"
             android:layout_alignParentLeft="true"
             android:layout_alignParentStart="true"
+            android:visibility="gone"
             android:layout_marginTop="15dp" />
 
-        <EditText android:layout_width="wrap_content"
+        <EditText
+            android:id="@+id/tb_percDesconto"
+            android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:id="@+id/tb_vldescontoPedido"
             android:inputType="numberDecimal"
-            android:layout_below="@+id/lb_vldescontoPedido"
+            android:layout_below="@+id/lb_percDesconto"
             android:layout_alignParentLeft="true"
             android:layout_alignParentStart="true"
             android:layout_alignParentRight="true"
             android:layout_alignParentEnd="true"
+            android:layout_marginLeft="15sp"
+            android:layout_marginRight="15sp"
             android:singleLine="true"
             android:padding="10dip"
             android:textColor="@color/black"
-            android:enabled="false"
-            android:selectAllOnFocus="true"
+            android:visibility="gone"
             android:textCursorDrawable="@drawable/cursor"
             />
 
         <TextView
+            android:id="@+id/lb_vlFrete"
             android:layout_width="fill_parent"
             android:layout_height="wrap_content"
             android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text="Desconto (%): "
-            android:textSize="14dp"
-            android:id="@+id/lb_percdescontoPedido"
+            android:text="@string/campo_vlfrete"
+            android:textSize="16sp"
+            android:layout_marginLeft="15sp"
             android:textColor="@color/cor_teste"
-            android:layout_below="@+id/tb_vldescontoPedido"
+            android:layout_below="@+id/tb_vlDesconto"
             android:layout_alignParentLeft="true"
             android:layout_alignParentStart="true"
-            android:visibility="invisible"
             android:layout_marginTop="15dp" />
 
-        <EditText android:layout_width="wrap_content"
+        <EditText
+            android:id="@+id/tb_vlFrete"
+            android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:id="@+id/tb_percdescontoPedido"
-            android:inputType="numberDecimal"
-            android:layout_below="@+id/lb_percdescontoPedido"
+            android:inputType="number"
+            android:layout_below="@+id/lb_vlFrete"
             android:layout_alignParentLeft="true"
             android:layout_alignParentStart="true"
             android:layout_alignParentRight="true"
             android:layout_alignParentEnd="true"
+            android:layout_marginLeft="15sp"
+            android:layout_marginRight="15sp"
             android:singleLine="true"
             android:padding="10dip"
             android:textColor="@color/black"
-            android:enabled="false"
-            android:visibility="invisible"
-            android:selectAllOnFocus="true"
             android:textCursorDrawable="@drawable/cursor"
             />
 
         <TextView
+            android:id="@+id/lb_condPgto"
             android:layout_width="fill_parent"
             android:layout_height="wrap_content"
             android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text="Condição de Pagamento: "
-            android:textSize="14dp"
-            android:id="@+id/lb_condPgto"
+            android:text="@string/campo_condpagamento"
+            android:textSize="16sp"
+            android:layout_marginLeft="15sp"
             android:textColor="@color/cor_teste"
-            android:layout_below="@+id/tb_vldescontoPedido"
+            android:layout_below="@+id/tb_vlFrete"
             android:layout_alignParentLeft="true"
             android:layout_alignParentStart="true"
             android:layout_marginTop="15dp" />
 
-        <EditText android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
+        <EditText
             android:id="@+id/tb_condPgto"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
             android:inputType="textCapSentences"
             android:layout_below="@+id/lb_condPgto"
             android:layout_alignParentLeft="true"
             android:layout_alignParentStart="true"
             android:layout_alignParentRight="true"
             android:layout_alignParentEnd="true"
+            android:layout_marginLeft="15sp"
+            android:layout_marginRight="15sp"
             android:singleLine="true"
             android:padding="10dip"
             android:textColor="@color/black"
-            android:enabled="false"
             android:textCursorDrawable="@drawable/cursor"
             />
 
         <TextView
+            android:id="@+id/lb_obsPedido"
             android:layout_width="fill_parent"
             android:layout_height="wrap_content"
             android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text="Observação do Pedido: "
-            android:textSize="14dp"
-            android:id="@+id/lb_obsPedido"
+            android:text="@string/campo_observacaopedido"
+            android:textSize="16sp"
+            android:layout_marginLeft="15sp"
             android:textColor="@color/cor_teste"
             android:layout_below="@+id/tb_condPgto"
             android:layout_alignParentLeft="true"
@@ -341,36 +374,55 @@
             android:layout_marginTop="15dp" />
 
 
-        <EditText android:layout_width="wrap_content"
-            android:layout_height="150dp"
+        <EditText
             android:id="@+id/tb_obsPedido"
+            android:layout_width="wrap_content"
+            android:layout_height="150dp"
             android:gravity="top"
-            android:inputType="textMultiLine"
+            android:inputType="textCapSentences|textMultiLine"
             android:layout_below="@+id/lb_obsPedido"
             android:layout_alignParentLeft="true"
             android:layout_alignParentStart="true"
             android:layout_alignParentRight="true"
             android:layout_alignParentEnd="true"
+            android:layout_marginLeft="15sp"
+            android:layout_marginRight="15sp"
             android:padding="10dip"
             android:textColor="@color/black"
-            android:enabled="false"
             android:textCursorDrawable="@drawable/cursor"
 
             />
 
         <TextView
+            android:id="@+id/lb_valorTotal"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:textAppearance="?android:attr/textAppearanceMedium"
-            android:text="Total Liquido do Pedido: R$ 0,00"
-            android:textSize="14dp"
-            android:id="@+id/lb_valorTotal"
+            android:text="@string/campo_vltotalpedido"
+            android:textSize="16sp"
+            android:layout_marginLeft="15sp"
             android:textColor="@color/cor_teste"
             android:layout_below="@+id/tb_obsPedido"
             android:layout_alignParentLeft="true"
             android:layout_alignParentStart="true"
-            android:layout_marginTop="15dp" />
+            android:layout_marginTop="15dp"
+            android:layout_marginBottom="15sp"/>
 
+        <TextView
+            android:id="@+id/lb_vlTotalResultado"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textAppearance="?android:attr/textAppearanceMedium"
+            android:text="R$0,00"
+            android:textSize="24sp"
+            android:textStyle="bold"
+            android:textColor="@color/black"
+            android:layout_toEndOf="@+id/lb_valorTotal"
+            android:layout_alignBottom="@+id/lb_valorTotal"
+            android:layout_alignTop="@+id/lb_valorTotal"
+            android:layout_marginTop="-7sp"
+            android:layout_marginLeft="10sp"
+            android:enabled="false"/>
 
     </RelativeLayout>
 
diff --git a/app/src/main/res/layout/content_manutencao_produto_pedido.xml b/app/src/main/res/layout/content_manutencao_produto_pedido.xml
index 1267dec..e1e8647 100755
--- a/app/src/main/res/layout/content_manutencao_produto_pedido.xml
+++ b/app/src/main/res/layout/content_manutencao_produto_pedido.xml
@@ -113,7 +113,6 @@
             android:singleLine="true"
             android:padding="10dip"
             android:textColor="@color/black"
-            android:selectAllOnFocus="true"
             android:textCursorDrawable="@drawable/cursor"
             />
 
@@ -140,40 +139,8 @@
             android:singleLine="true"
             android:padding="10dip"
             android:textColor="@color/black"
-            android:selectAllOnFocus="true"
             android:textCursorDrawable="@drawable/cursor"
             />
 
-
-        <Button android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="@string/btn_excluir"
-        android:id="@+id/sc_excluirProduto"
-        android:layout_below="@+id/tb_descontoProdutoManutencao"
-        android:layout_alignParentLeft="true"
-        android:layout_alignParentStart="true"
-        android:layout_marginTop="15dp"
-        android:layout_alignRight="@+id/tb_valorUnitarioManutencao"
-        android:layout_alignEnd="@+id/tb_valorUnitarioManutencao"
-        android:layout_gravity="center"
-        android:textColor="@color/white"
-        android:textStyle="bold"
-        android:background="@drawable/estilo_botao_excluir"/>
-
-        <Button android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/btn_cancelar"
-            android:id="@+id/sc_cancelar"
-            android:layout_below="@+id/sc_excluirProduto"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true"
-            android:layout_marginTop="15dp"
-            android:layout_alignRight="@+id/tb_valorUnitarioManutencao"
-            android:layout_alignEnd="@+id/tb_valorUnitarioManutencao"
-            android:layout_gravity="center"
-            android:textColor="@color/white"
-            android:textStyle="bold"
-            android:background="@drawable/estilo_botao"/>
-
     </RelativeLayout>
 </ScrollView>
\ No newline at end of file
diff --git a/app/src/main/res/layout/content_opcoes.xml b/app/src/main/res/layout/content_opcoes.xml
index 6edb9bf..730decc 100755
--- a/app/src/main/res/layout/content_opcoes.xml
+++ b/app/src/main/res/layout/content_opcoes.xml
@@ -28,7 +28,7 @@
         android:layout_gravity="center"
         android:textColor="@color/white"
         android:textStyle="bold"
-        android:background="@drawable/estilo_botao"
+        android:background="@drawable/estilobotaoazul"
         android:layout_below="@+id/tb_usuarioOpcoes"
         android:layout_centerHorizontal="true"
         android:layout_marginTop="10dp"/>
@@ -62,7 +62,7 @@
         android:layout_gravity="center"
         android:textColor="@color/white"
         android:textStyle="bold"
-        android:background="@drawable/estilo_botao"
+        android:background="@drawable/estilobotaoazul"
         android:layout_below="@+id/lb_ultimaatualizacaoData"
         android:layout_centerHorizontal="true"
         android:layout_marginTop="10dp"/>
@@ -85,7 +85,7 @@
         android:layout_gravity="center"
         android:textColor="@color/white"
         android:textStyle="bold"
-        android:background="@drawable/estilo_botao"
+        android:background="@drawable/estilobotaoazul"
         android:layout_below="@+id/lb_filialselecionada"
         android:layout_centerHorizontal="true"
         android:layout_marginTop="10dp"/>
diff --git a/app/src/main/res/layout/content_pedidos.xml b/app/src/main/res/layout/content_pedidos.xml
index 64f2fdb..d9acaee 100755
--- a/app/src/main/res/layout/content_pedidos.xml
+++ b/app/src/main/res/layout/content_pedidos.xml
@@ -21,7 +21,8 @@
         android:background="@drawable/edittext_foco"
         android:textColor="@color/black"
         android:textCursorDrawable="@drawable/cursor"
-        android:padding="10dip">
+        android:padding="10dip"
+        android:visibility="gone">
 
     </EditText>
 
@@ -34,6 +35,7 @@
         android:layout_alignBottom="@+id/tb_buscarclienteSelecaoPedidos"
         android:layout_alignRight="@+id/tb_buscarclienteSelecaoPedidos"
         android:src="@android:drawable/ic_search_category_default"
+        android:visibility="gone"
         />
 
     <ListView
@@ -42,7 +44,7 @@
         android:id="@+id/listViewPedidos"
         android:layout_alignParentLeft="true"
         android:layout_alignParentStart="true"
-        android:layout_marginTop="50dp"
+        android:layout_marginTop="0dp"
         />
 
 
diff --git a/app/src/main/res/layout/content_produtos.xml b/app/src/main/res/layout/content_produtos.xml
index b951148..edc2a16 100755
--- a/app/src/main/res/layout/content_produtos.xml
+++ b/app/src/main/res/layout/content_produtos.xml
@@ -20,7 +20,8 @@
         android:hint="Selecione pelo código ou a descrição"
         android:padding="10dip"
         android:textColor="@color/black"
-        android:textCursorDrawable="@drawable/cursor">
+        android:textCursorDrawable="@drawable/cursor"
+        android:visibility="gone">
 
     </EditText>
 
@@ -33,6 +34,7 @@
         android:layout_alignBottom="@+id/tb_buscarprodutoPedido"
         android:layout_alignRight="@+id/tb_buscarprodutoPedido"
         android:src="@android:drawable/ic_search_category_default"
+        android:visibility="gone"
         />
 
 
@@ -42,6 +44,6 @@
         android:id="@+id/lista"
         android:fastScrollAlwaysVisible="true"
         android:fastScrollEnabled="true"
-        android:layout_marginTop="50dp"/>
+        android:layout_marginTop="0dp"/>
 
 </RelativeLayout>
diff --git a/app/src/main/res/layout/content_selecao_cliente.xml b/app/src/main/res/layout/content_selecao_cliente.xml
index 6497e13..78d3049 100755
--- a/app/src/main/res/layout/content_selecao_cliente.xml
+++ b/app/src/main/res/layout/content_selecao_cliente.xml
@@ -18,7 +18,8 @@
         android:background="@drawable/edittext_foco"
         android:textColor="@color/black"
         android:textCursorDrawable="@drawable/cursor"
-        android:padding="10dip">
+        android:padding="10dip"
+        android:visibility="gone">
 
     </EditText>
 
@@ -31,6 +32,7 @@
         android:layout_alignBottom="@+id/tb_buscarclienteSelecaoClientes"
         android:layout_alignRight="@+id/tb_buscarclienteSelecaoClientes"
         android:src="@android:drawable/ic_search_category_default"
+        android:visibility="gone"
         />
 
     <ListView
@@ -41,7 +43,7 @@
         android:layout_alignParentStart="true"
         android:fastScrollAlwaysVisible="true"
         android:fastScrollEnabled="true"
-        android:layout_marginTop="50dp"
+        android:layout_marginTop="10dp"
         />
 
     <GridLayout
diff --git a/app/src/main/res/layout/content_visao_geral_nova.xml b/app/src/main/res/layout/content_visao_geral_nova.xml
new file mode 100644
index 0000000..e75155e
--- /dev/null
+++ b/app/src/main/res/layout/content_visao_geral_nova.xml
@@ -0,0 +1,368 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ScrollView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    app:layout_behavior="@string/appbar_scrolling_view_behavior"
+    tools:context=".VisaoGeralNova"
+    android:background="@color/corBranca"
+    android:orientation="vertical"
+    tools:showIn="@layout/app_bar_visao_geral_nova">
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+
+        <RelativeLayout
+            android:id="@+id/layout_movimentacaoDiariaBackground"
+            android:layout_width="match_parent"
+            android:layout_height="180dp"
+            android:alpha="0.1"
+            android:background="@drawable/layoutstylemovimentacaodiaria">
+
+        </RelativeLayout>
+
+        <RelativeLayout
+            android:id="@+id/layout_movimentacaoDiaria"
+            android:layout_width="match_parent"
+            android:layout_height="180dp"
+            android:layout_below="@+id/layout_movimentacaoDiariaBackground"
+            android:layout_marginTop="-180dp">
+
+            <RelativeLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:gravity="center_horizontal">
+
+                <TextView
+                    android:id="@+id/lb_dataMovimentacaoDiaria"
+                    android:layout_width="wrap_content"
+                    android:layout_height="30dp"
+                    android:layout_marginLeft="0dp"
+                    android:layout_marginTop="15dp"
+                    android:gravity="center_horizontal"
+                    android:text="Quinta-feira, 01 de Agosto de 2019"
+                    android:textAlignment="viewEnd"
+                    android:textColor="@color/corPreta"
+                    android:textSize="16dp" />
+
+                <ImageView
+                    android:id="@+id/img_dtEmissaoPicker"
+                    android:layout_width="40dp"
+                    android:layout_height="40dp"
+                    android:layout_alignTop="@+id/lb_dataMovimentacaoDiaria"
+                    android:layout_alignBottom="@+id/lb_dataMovimentacaoDiaria"
+                    android:layout_centerVertical="true"
+                    android:layout_marginLeft="10dp"
+                    android:layout_marginTop="-5dp"
+                    android:layout_toEndOf="@+id/lb_dataMovimentacaoDiaria"
+                    android:src="@drawable/ic_dtemissao_picker" />
+
+            </RelativeLayout>
+
+            <RelativeLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:gravity="center_horizontal">
+
+                <ImageView
+                    android:id="@+id/img_movimentacaoDiaria"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="10dp"
+                    android:layout_marginTop="40dp"
+                    android:layout_marginBottom="20dp"
+                    android:src="@drawable/imagem_icone_vendas_diarias" />
+
+                <TextView
+                    android:id="@+id/lb_vlVendaBruta"
+                    android:layout_width="100dp"
+                    android:layout_height="wrap_content"
+                    android:layout_alignTop="@+id/img_movimentacaoDiaria"
+                    android:layout_alignBottom="@+id/img_movimentacaoDiaria"
+                    android:layout_marginTop="20dp"
+                    android:layout_toEndOf="@+id/img_movimentacaoDiaria"
+                    android:text="@string/campo_visaogeral_valor_venda_bruta"
+                    android:textAlignment="viewEnd"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp" />
+
+                <TextView
+                    android:id="@+id/lb_vlVendaBrutaResultado"
+                    android:layout_width="220dp"
+                    android:layout_height="wrap_content"
+                    android:layout_alignTop="@+id/lb_vlVendaBruta"
+                    android:layout_alignBottom="@+id/lb_vlVendaBruta"
+                    android:layout_marginLeft="10dp"
+                    android:layout_toEndOf="@+id/lb_vlVendaBruta"
+                    android:text="R$ 1500,00"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp"
+                    android:textStyle="bold" />
+
+                <TextView
+                    android:id="@+id/lb_vlDescontosVenda"
+                    android:layout_width="100dp"
+                    android:layout_height="wrap_content"
+                    android:layout_alignTop="@+id/img_movimentacaoDiaria"
+                    android:layout_alignBottom="@+id/img_movimentacaoDiaria"
+                    android:layout_marginTop="40dp"
+                    android:layout_toEndOf="@+id/img_movimentacaoDiaria"
+                    android:text="@string/campo_visaogeral_valor_descontos"
+                    android:textAlignment="viewEnd"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp" />
+
+                <TextView
+                    android:id="@+id/lb_vlDescontosVendaResultado"
+                    android:layout_width="220dp"
+                    android:layout_height="wrap_content"
+                    android:layout_alignTop="@+id/lb_vlDescontosVenda"
+                    android:layout_alignBottom="@+id/lb_vlDescontosVenda"
+                    android:layout_marginLeft="10dp"
+                    android:layout_toEndOf="@+id/lb_vlDescontosVenda"
+                    android:text="R$ 200,00"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp"
+                    android:textStyle="bold" />
+
+                <TextView
+                    android:id="@+id/lb_vlVendaLiquida"
+                    android:layout_width="100dp"
+                    android:layout_height="wrap_content"
+                    android:layout_alignTop="@+id/img_movimentacaoDiaria"
+                    android:layout_alignBottom="@+id/img_movimentacaoDiaria"
+                    android:layout_marginTop="60dp"
+                    android:layout_toEndOf="@+id/img_movimentacaoDiaria"
+                    android:text="@string/campo_visaogeral_valor_liquido"
+                    android:textAlignment="viewEnd"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp" />
+
+                <TextView
+                    android:id="@+id/lb_vlVendaLiquidaResultado"
+                    android:layout_width="220dp"
+                    android:layout_height="wrap_content"
+                    android:layout_alignTop="@+id/lb_vlVendaLiquida"
+                    android:layout_alignBottom="@+id/lb_vlVendaLiquida"
+                    android:layout_marginLeft="10dp"
+                    android:layout_toEndOf="@+id/lb_vlVendaLiquida"
+                    android:text="R$ 1300,00"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp"
+                    android:textStyle="bold" />
+
+                <TextView
+                    android:id="@+id/lb_vlLucroMedio"
+                    android:layout_width="100dp"
+                    android:layout_height="wrap_content"
+                    android:layout_alignTop="@+id/img_movimentacaoDiaria"
+                    android:layout_alignBottom="@+id/img_movimentacaoDiaria"
+                    android:layout_marginTop="80dp"
+                    android:layout_toEndOf="@+id/img_movimentacaoDiaria"
+                    android:text="@string/campo_visaogeral_lucro_medio"
+                    android:textAlignment="viewEnd"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp"
+                    android:visibility="invisible" />
+
+                <TextView
+                    android:id="@+id/lb_vlLucroMedioResultado"
+                    android:layout_width="220dp"
+                    android:layout_height="wrap_content"
+                    android:layout_alignTop="@+id/lb_vlLucroMedio"
+                    android:layout_alignBottom="@+id/lb_vlLucroMedio"
+                    android:layout_marginLeft="10dp"
+                    android:layout_toEndOf="@+id/lb_vlLucroMedio"
+                    android:text="51%"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp"
+                    android:textStyle="bold"
+                    android:visibility="invisible" />
+            </RelativeLayout>
+
+        </RelativeLayout>
+
+        <RelativeLayout
+            android:id="@+id/layout_demonstrativoTiposVendaBackground"
+            android:layout_width="match_parent"
+            android:layout_height="120dp"
+            android:layout_below="@+id/layout_movimentacaoDiariaBackground"
+            android:alpha="0.1"
+            android:background="@drawable/layoutstyletiposvenda">
+
+        </RelativeLayout>
+
+        <RelativeLayout
+            android:id="@+id/layout_demonstrativoTiposVenda"
+            android:layout_width="match_parent"
+            android:layout_height="130dp"
+            android:layout_below="@+id/layout_demonstrativoTiposVendaBackground"
+            android:layout_marginTop="-110dp">
+
+            <RelativeLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:gravity="center_horizontal">
+
+                <TextView
+                    android:id="@+id/lb_quantidadeTipoVendaAbertos"
+                    android:layout_width="240dp"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="0dp"
+                    android:layout_marginTop="0dp"
+                    android:text="@string/label_quantidade_tipovenda_pedido"
+                    android:textAlignment="viewEnd"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp" />
+
+                <TextView
+                    android:id="@+id/lb_quantidadeTipoVendaAbertosResultado"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_alignTop="@+id/lb_quantidadeTipoVendaAbertos"
+                    android:layout_alignBottom="@+id/lb_quantidadeTipoVendaAbertos"
+                    android:layout_marginLeft="10dp"
+                    android:layout_toEndOf="@+id/lb_quantidadeTipoVendaAbertos"
+                    android:text="7 pedidos"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp"
+                    android:textStyle="bold" />
+
+                <TextView
+                    android:id="@+id/lb_quantidadeTipoVendaCancelados"
+                    android:layout_width="240dp"
+                    android:layout_height="wrap_content"
+                    android:layout_below="@+id/lb_quantidadeTipoVendaAbertos"
+                    android:layout_marginLeft="0dp"
+                    android:layout_marginTop="5dp"
+                    android:text="@string/label_quantidade_tipovenda_cancelados_pedidos"
+                    android:textAlignment="viewEnd"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp" />
+
+                <TextView
+                    android:id="@+id/lb_quantidadeTipoVendaCanceladosResultado"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_alignTop="@+id/lb_quantidadeTipoVendaCancelados"
+                    android:layout_alignBottom="@+id/lb_quantidadeTipoVendaCancelados"
+                    android:layout_marginLeft="10dp"
+                    android:layout_toEndOf="@+id/lb_quantidadeTipoVendaCancelados"
+                    android:text="2 pedidos"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp"
+                    android:textStyle="bold" />
+
+                <TextView
+                    android:id="@+id/lb_vlDescontoTipoVenda"
+                    android:layout_width="240dp"
+                    android:layout_height="wrap_content"
+                    android:layout_below="@+id/lb_quantidadeTipoVendaCancelados"
+                    android:layout_marginLeft="0dp"
+                    android:layout_marginTop="5dp"
+                    android:text="@string/label_valordescontos_tipovenda"
+                    android:textAlignment="viewEnd"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp" />
+
+                <TextView
+                    android:id="@+id/lb_vlDescontoTipoVendaResultado"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_alignTop="@+id/lb_vlDescontoTipoVenda"
+                    android:layout_alignBottom="@+id/lb_vlDescontoTipoVenda"
+                    android:layout_marginLeft="10dp"
+                    android:layout_toEndOf="@+id/lb_vlDescontoTipoVenda"
+                    android:text="R$ 230,00"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp"
+                    android:textStyle="bold" />
+
+                <TextView
+                    android:id="@+id/lb_vlTotalTipoVenda"
+                    android:layout_width="240dp"
+                    android:layout_height="wrap_content"
+                    android:layout_below="@+id/lb_vlDescontoTipoVenda"
+                    android:layout_marginLeft="0dp"
+                    android:layout_marginTop="5dp"
+                    android:text="Valor total dos pedidos em aberto: "
+                    android:textAlignment="viewEnd"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp" />
+
+                <TextView
+                    android:id="@+id/lb_vlTotalTipoVendaResultado"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_alignTop="@+id/lb_vlTotalTipoVenda"
+                    android:layout_alignBottom="@+id/lb_vlTotalTipoVenda"
+                    android:layout_marginLeft="10dp"
+                    android:layout_toEndOf="@+id/lb_vlTotalTipoVenda"
+                    android:text="R$ 1500,00"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="14dp"
+                    android:textStyle="bold" />
+
+            </RelativeLayout>
+
+        </RelativeLayout>
+
+        <RelativeLayout
+            android:id="@+id/layout_estoqueProdutosBackground"
+            android:layout_width="match_parent"
+            android:layout_height="100dp"
+            android:layout_below="@+id/layout_demonstrativoTiposVenda"
+            android:alpha="0.1"
+            android:layout_marginTop="-25dp"
+            android:background="@drawable/layoutstyleestoqueprodutos">
+
+        </RelativeLayout>
+
+        <RelativeLayout
+            android:id="@+id/layout_estoqueProdutos"
+            android:layout_width="match_parent"
+            android:layout_height="100dp"
+            android:layout_below="@+id/layout_estoqueProdutosBackground"
+            android:layout_marginTop="-100dp">
+
+            <RelativeLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:gravity="center_horizontal">
+
+                <ImageView
+                    android:id="@+id/img_estoqueProdutos"
+                    android:layout_width="80dp"
+                    android:layout_height="80dp"
+                    android:layout_marginLeft="40dp"
+                    android:layout_marginTop="10dp"
+                    android:src="@drawable/imagem_icone_produtos" />
+
+                <TextView
+                    android:id="@+id/lb_produtosAtencao"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_alignTop="@+id/img_estoqueProdutos"
+                    android:layout_alignBottom="@+id/img_estoqueProdutos"
+                    android:layout_marginLeft="10dp"
+                    android:layout_marginTop="15dp"
+                    android:layout_marginRight="20dp"
+                    android:layout_toEndOf="@+id/img_estoqueProdutos"
+                    android:text="@string/label_semprodutosatencao"
+                    android:textColor="@color/corCinzaEscuro"
+                    android:textSize="15dp"
+                    android:textStyle="bold" />
+
+            </RelativeLayout>
+
+        </RelativeLayout>
+
+
+
+    </RelativeLayout>
+
+</ScrollView>
\ No newline at end of file
diff --git a/app/src/main/res/layout/lista_produtos_pedido.xml b/app/src/main/res/layout/lista_produtos_pedido.xml
index ee100b9..50908ff 100644
--- a/app/src/main/res/layout/lista_produtos_pedido.xml
+++ b/app/src/main/res/layout/lista_produtos_pedido.xml
@@ -24,6 +24,7 @@
             android:textSize="18sp"
             android:minHeight="60dp"
             android:textStyle="bold"
+            android:textColor="@color/corBranca"
             />
 
         <LinearLayout
@@ -37,6 +38,7 @@
                 android:layout_height="wrap_content"
                 android:text="Quantidade: "
                 android:textSize="18sp"
+                android:textColor="@color/corBranca"
                 />
 
             <TextView
@@ -45,6 +47,7 @@
                 android:layout_height="wrap_content"
                 android:textSize="18sp"
                 android:text="10"
+                android:textColor="@color/corBranca"
                 />
 
         </LinearLayout>
@@ -53,13 +56,15 @@
             android:layout_width="match_parent"
             android:layout_height="match_parent"
             android:orientation="horizontal"
-            android:layout_marginTop="10dp">
+            android:layout_marginTop="10sp"
+            android:layout_marginBottom="10sp">
 
             <TextView
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:text="Valor: "
                 android:textSize="18sp"
+                android:textColor="@color/corBranca"
                 />
 
             <TextView
@@ -68,6 +73,7 @@
                 android:layout_height="wrap_content"
                 android:textSize="18sp"
                 android:text="10"
+                android:textColor="@color/corBranca"
                 />
 
         </LinearLayout>
diff --git a/app/src/main/res/layout/nav_header_cliente.xml b/app/src/main/res/layout/nav_header_cliente.xml
index ad322c5..7c2cb29 100755
--- a/app/src/main/res/layout/nav_header_cliente.xml
+++ b/app/src/main/res/layout/nav_header_cliente.xml
@@ -12,6 +12,7 @@
 
     <ImageView android:layout_width="80dp" android:layout_height="90dp"
         android:paddingTop="@dimen/nav_header_vertical_spacing"
+        android:layout_marginTop="10dp"
         android:src="@drawable/logo_express" android:id="@+id/imageView" />
 
     <TextView android:layout_width="match_parent" android:layout_height="wrap_content"
diff --git a/app/src/main/res/layout/nav_header_home.xml b/app/src/main/res/layout/nav_header_home.xml
index fbf6038..dbbb78c 100755
--- a/app/src/main/res/layout/nav_header_home.xml
+++ b/app/src/main/res/layout/nav_header_home.xml
@@ -11,6 +11,7 @@
 
     <ImageView android:layout_width="80dp" android:layout_height="90dp"
         android:paddingTop="@dimen/nav_header_vertical_spacing"
+        android:layout_marginTop="10dp"
         android:src="@drawable/logo_express" android:id="@+id/imageView" />
 
     <TextView android:layout_width="match_parent" android:layout_height="wrap_content"
diff --git a/app/src/main/res/layout/nav_header_opcoes.xml b/app/src/main/res/layout/nav_header_opcoes.xml
index fbf6038..dbbb78c 100755
--- a/app/src/main/res/layout/nav_header_opcoes.xml
+++ b/app/src/main/res/layout/nav_header_opcoes.xml
@@ -11,6 +11,7 @@
 
     <ImageView android:layout_width="80dp" android:layout_height="90dp"
         android:paddingTop="@dimen/nav_header_vertical_spacing"
+        android:layout_marginTop="10dp"
         android:src="@drawable/logo_express" android:id="@+id/imageView" />
 
     <TextView android:layout_width="match_parent" android:layout_height="wrap_content"
diff --git a/app/src/main/res/layout/nav_header_pedidos.xml b/app/src/main/res/layout/nav_header_pedidos.xml
index fbf6038..dbbb78c 100755
--- a/app/src/main/res/layout/nav_header_pedidos.xml
+++ b/app/src/main/res/layout/nav_header_pedidos.xml
@@ -11,6 +11,7 @@
 
     <ImageView android:layout_width="80dp" android:layout_height="90dp"
         android:paddingTop="@dimen/nav_header_vertical_spacing"
+        android:layout_marginTop="10dp"
         android:src="@drawable/logo_express" android:id="@+id/imageView" />
 
     <TextView android:layout_width="match_parent" android:layout_height="wrap_content"
diff --git a/app/src/main/res/layout/nav_header_produtos.xml b/app/src/main/res/layout/nav_header_produtos.xml
index fbf6038..dbbb78c 100755
--- a/app/src/main/res/layout/nav_header_produtos.xml
+++ b/app/src/main/res/layout/nav_header_produtos.xml
@@ -11,6 +11,7 @@
 
     <ImageView android:layout_width="80dp" android:layout_height="90dp"
         android:paddingTop="@dimen/nav_header_vertical_spacing"
+        android:layout_marginTop="10dp"
         android:src="@drawable/logo_express" android:id="@+id/imageView" />
 
     <TextView android:layout_width="match_parent" android:layout_height="wrap_content"
diff --git a/app/src/main/res/layout/nav_header_sincronizar.xml b/app/src/main/res/layout/nav_header_sincronizar.xml
index fbf6038..dbbb78c 100755
--- a/app/src/main/res/layout/nav_header_sincronizar.xml
+++ b/app/src/main/res/layout/nav_header_sincronizar.xml
@@ -11,6 +11,7 @@
 
     <ImageView android:layout_width="80dp" android:layout_height="90dp"
         android:paddingTop="@dimen/nav_header_vertical_spacing"
+        android:layout_marginTop="10dp"
         android:src="@drawable/logo_express" android:id="@+id/imageView" />
 
     <TextView android:layout_width="match_parent" android:layout_height="wrap_content"
diff --git a/app/src/main/res/layout/nav_header_visao_geral_nova.xml b/app/src/main/res/layout/nav_header_visao_geral_nova.xml
new file mode 100644
index 0000000..1a8c6de
--- /dev/null
+++ b/app/src/main/res/layout/nav_header_visao_geral_nova.xml
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="@dimen/nav_header_height"
+    android:background="@drawable/side_nav_bar"
+    android:gravity="bottom"
+    android:orientation="vertical"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:theme="@style/ThemeOverlay.AppCompat.Dark">
+
+    <ImageView android:layout_width="80dp" android:layout_height="90dp"
+        android:paddingTop="@dimen/nav_header_vertical_spacing"
+        android:layout_marginTop="10dp"
+        android:src="@drawable/logo_express" android:id="@+id/imageView" />
+
+    <TextView android:layout_width="match_parent" android:layout_height="wrap_content"
+        android:paddingTop="@dimen/nav_header_vertical_spacing" android:text="Menu"
+        android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
+
+    <TextView android:layout_width="wrap_content" android:layout_height="wrap_content"
+        android:text="" android:id="@+id/textView" />
+
+</LinearLayout>
diff --git a/app/src/main/res/menu/activity_cliente_drawer.xml b/app/src/main/res/menu/activity_cliente_drawer.xml
index 2dc89a0..0442acb 100755
--- a/app/src/main/res/menu/activity_cliente_drawer.xml
+++ b/app/src/main/res/menu/activity_cliente_drawer.xml
@@ -2,18 +2,35 @@
 <menu xmlns:android="http://schemas.android.com/apk/res/android">
 
     <group android:checkableBehavior="single">
-        <item android:id="@+id/nav_camara" android:icon="@android:drawable/ic_menu_save"
-            android:title="Clientes" />
-        <item android:id="@+id/nav_gallery" android:icon="@android:drawable/ic_menu_agenda"
+        <item android:id="@+id/nav_visaogeral"
+            android:icon="@drawable/ic_visaogeral"
+            android:title="Visão Geral" />
+        <item android:id="@+id/nav_pedidos"
+            android:icon="@drawable/ic_pedidos_novo"
             android:title="Pedidos" />
     </group>
 
+    <item android:title="Cadastros">
+        <menu>
+            <item android:id="@+id/nav_clientes"
+                android:icon="@drawable/ic_clientes_novo"
+                android:title="Clientes" />
+
+            <item android:id="@+id/nav_produtos"
+                android:icon="@drawable/ic_produtos_novo"
+                android:title="Produtos" />
+            <!--<item android:id="@+id/nav_send" android:icon="@android:drawable/ic_menu_send"
+                 android:title="Sincronizar" />-->
+        </menu>
+    </item>
+
     <item android:title="Configurações">
         <menu>
-            <item android:id="@+id/nav_share" android:icon="@android:drawable/ic_menu_manage"
+            <item android:id="@+id/nav_opcoes"
+                android:icon="@drawable/ic_opcoes_novo"
                 android:title="Opções" />
             <!--<item android:id="@+id/nav_send" android:icon="@android:drawable/ic_menu_send"
-                android:title="Sincronizar" />-->
+                 android:title="Sincronizar" />-->
         </menu>
     </item>
 
diff --git a/app/src/main/res/menu/activity_home_drawer.xml b/app/src/main/res/menu/activity_home_drawer.xml
index 3c4a25d..a83f2b9 100755
--- a/app/src/main/res/menu/activity_home_drawer.xml
+++ b/app/src/main/res/menu/activity_home_drawer.xml
@@ -2,17 +2,32 @@
 <menu xmlns:android="http://schemas.android.com/apk/res/android">
 
     <group android:checkableBehavior="single">
-        <item android:id="@+id/nav_camara" android:icon="@android:drawable/ic_menu_save"
-            android:title="Clientes" />
-        <item android:id="@+id/nav_gallery" android:icon="@android:drawable/ic_menu_agenda"
+        <item android:id="@+id/nav_visaogeral"
+            android:icon="@drawable/ic_visaogeral"
+            android:title="Visão Geral" />
+        <item android:id="@+id/nav_pedidos"
+            android:icon="@drawable/ic_pedidos_novo"
             android:title="Pedidos" />
-        <item android:id="@+id/nav_slideshow" android:icon="@android:drawable/ic_menu_slideshow"
-            android:title="Produtos" />
     </group>
 
+    <item android:title="Cadastros">
+        <menu>
+            <item android:id="@+id/nav_clientes"
+                android:icon="@drawable/ic_clientes_novo"
+                android:title="Clientes" />
+
+            <item android:id="@+id/nav_produtos"
+                android:icon="@drawable/ic_produtos_novo"
+                android:title="Produtos" />
+            <!--<item android:id="@+id/nav_send" android:icon="@android:drawable/ic_menu_send"
+                 android:title="Sincronizar" />-->
+        </menu>
+    </item>
+
     <item android:title="Configurações">
         <menu>
-            <item android:id="@+id/nav_share" android:icon="@android:drawable/ic_menu_manage"
+            <item android:id="@+id/nav_opcoes"
+                android:icon="@drawable/ic_opcoes_novo"
                 android:title="Opções" />
             <!--<item android:id="@+id/nav_send" android:icon="@android:drawable/ic_menu_send"
                  android:title="Sincronizar" />-->
diff --git a/app/src/main/res/menu/activity_opcoes_drawer.xml b/app/src/main/res/menu/activity_opcoes_drawer.xml
index 3c4a25d..a83f2b9 100755
--- a/app/src/main/res/menu/activity_opcoes_drawer.xml
+++ b/app/src/main/res/menu/activity_opcoes_drawer.xml
@@ -2,17 +2,32 @@
 <menu xmlns:android="http://schemas.android.com/apk/res/android">
 
     <group android:checkableBehavior="single">
-        <item android:id="@+id/nav_camara" android:icon="@android:drawable/ic_menu_save"
-            android:title="Clientes" />
-        <item android:id="@+id/nav_gallery" android:icon="@android:drawable/ic_menu_agenda"
+        <item android:id="@+id/nav_visaogeral"
+            android:icon="@drawable/ic_visaogeral"
+            android:title="Visão Geral" />
+        <item android:id="@+id/nav_pedidos"
+            android:icon="@drawable/ic_pedidos_novo"
             android:title="Pedidos" />
-        <item android:id="@+id/nav_slideshow" android:icon="@android:drawable/ic_menu_slideshow"
-            android:title="Produtos" />
     </group>
 
+    <item android:title="Cadastros">
+        <menu>
+            <item android:id="@+id/nav_clientes"
+                android:icon="@drawable/ic_clientes_novo"
+                android:title="Clientes" />
+
+            <item android:id="@+id/nav_produtos"
+                android:icon="@drawable/ic_produtos_novo"
+                android:title="Produtos" />
+            <!--<item android:id="@+id/nav_send" android:icon="@android:drawable/ic_menu_send"
+                 android:title="Sincronizar" />-->
+        </menu>
+    </item>
+
     <item android:title="Configurações">
         <menu>
-            <item android:id="@+id/nav_share" android:icon="@android:drawable/ic_menu_manage"
+            <item android:id="@+id/nav_opcoes"
+                android:icon="@drawable/ic_opcoes_novo"
                 android:title="Opções" />
             <!--<item android:id="@+id/nav_send" android:icon="@android:drawable/ic_menu_send"
                  android:title="Sincronizar" />-->
diff --git a/app/src/main/res/menu/activity_pedidos_drawer.xml b/app/src/main/res/menu/activity_pedidos_drawer.xml
index 3c4a25d..a83f2b9 100755
--- a/app/src/main/res/menu/activity_pedidos_drawer.xml
+++ b/app/src/main/res/menu/activity_pedidos_drawer.xml
@@ -2,17 +2,32 @@
 <menu xmlns:android="http://schemas.android.com/apk/res/android">
 
     <group android:checkableBehavior="single">
-        <item android:id="@+id/nav_camara" android:icon="@android:drawable/ic_menu_save"
-            android:title="Clientes" />
-        <item android:id="@+id/nav_gallery" android:icon="@android:drawable/ic_menu_agenda"
+        <item android:id="@+id/nav_visaogeral"
+            android:icon="@drawable/ic_visaogeral"
+            android:title="Visão Geral" />
+        <item android:id="@+id/nav_pedidos"
+            android:icon="@drawable/ic_pedidos_novo"
             android:title="Pedidos" />
-        <item android:id="@+id/nav_slideshow" android:icon="@android:drawable/ic_menu_slideshow"
-            android:title="Produtos" />
     </group>
 
+    <item android:title="Cadastros">
+        <menu>
+            <item android:id="@+id/nav_clientes"
+                android:icon="@drawable/ic_clientes_novo"
+                android:title="Clientes" />
+
+            <item android:id="@+id/nav_produtos"
+                android:icon="@drawable/ic_produtos_novo"
+                android:title="Produtos" />
+            <!--<item android:id="@+id/nav_send" android:icon="@android:drawable/ic_menu_send"
+                 android:title="Sincronizar" />-->
+        </menu>
+    </item>
+
     <item android:title="Configurações">
         <menu>
-            <item android:id="@+id/nav_share" android:icon="@android:drawable/ic_menu_manage"
+            <item android:id="@+id/nav_opcoes"
+                android:icon="@drawable/ic_opcoes_novo"
                 android:title="Opções" />
             <!--<item android:id="@+id/nav_send" android:icon="@android:drawable/ic_menu_send"
                  android:title="Sincronizar" />-->
diff --git a/app/src/main/res/menu/activity_produtos_drawer.xml b/app/src/main/res/menu/activity_produtos_drawer.xml
index 43ea2e3..a83f2b9 100755
--- a/app/src/main/res/menu/activity_produtos_drawer.xml
+++ b/app/src/main/res/menu/activity_produtos_drawer.xml
@@ -2,18 +2,32 @@
 <menu xmlns:android="http://schemas.android.com/apk/res/android">
 
     <group android:checkableBehavior="single">
-        <item android:id="@+id/nav_camara" android:icon="@android:drawable/ic_menu_save"
-            android:title="Clientes" />
-        <item android:id="@+id/nav_gallery" android:icon="@android:drawable/ic_menu_agenda"
+        <item android:id="@+id/nav_visaogeral"
+            android:icon="@drawable/ic_visaogeral"
+            android:title="Visão Geral" />
+        <item android:id="@+id/nav_pedidos"
+            android:icon="@drawable/ic_pedidos_novo"
             android:title="Pedidos" />
-        <item android:id="@+id/nav_slideshow" android:icon="@android:drawable/ic_menu_slideshow"
-            android:title="Produtos" />
-
     </group>
 
+    <item android:title="Cadastros">
+        <menu>
+            <item android:id="@+id/nav_clientes"
+                android:icon="@drawable/ic_clientes_novo"
+                android:title="Clientes" />
+
+            <item android:id="@+id/nav_produtos"
+                android:icon="@drawable/ic_produtos_novo"
+                android:title="Produtos" />
+            <!--<item android:id="@+id/nav_send" android:icon="@android:drawable/ic_menu_send"
+                 android:title="Sincronizar" />-->
+        </menu>
+    </item>
+
     <item android:title="Configurações">
         <menu>
-            <item android:id="@+id/nav_share" android:icon="@android:drawable/ic_menu_manage"
+            <item android:id="@+id/nav_opcoes"
+                android:icon="@drawable/ic_opcoes_novo"
                 android:title="Opções" />
             <!--<item android:id="@+id/nav_send" android:icon="@android:drawable/ic_menu_send"
                  android:title="Sincronizar" />-->
diff --git a/app/src/main/res/menu/activity_sincronizar_drawer.xml b/app/src/main/res/menu/activity_sincronizar_drawer.xml
index a9074ba..421ed8d 100755
--- a/app/src/main/res/menu/activity_sincronizar_drawer.xml
+++ b/app/src/main/res/menu/activity_sincronizar_drawer.xml
@@ -1,18 +1,35 @@
 <?xml version="1.0" encoding="utf-8"?>
 <menu xmlns:android="http://schemas.android.com/apk/res/android">
     <group android:checkableBehavior="single">
-        <item android:id="@+id/nav_camara" android:icon="@android:drawable/ic_menu_save"
-            android:title="Clientes" />
-        <item android:id="@+id/nav_gallery" android:icon="@android:drawable/ic_menu_agenda"
+        <item android:id="@+id/nav_visaogeral"
+            android:icon="@drawable/ic_visaogeral"
+            android:title="Visão Geral" />
+        <item android:id="@+id/nav_pedidos"
+            android:icon="@drawable/ic_pedidos_novo"
             android:title="Pedidos" />
     </group>
 
+    <item android:title="Cadastros">
+        <menu>
+            <item android:id="@+id/nav_clientes"
+                android:icon="@drawable/ic_clientes_novo"
+                android:title="Clientes" />
+
+            <item android:id="@+id/nav_produtos"
+                android:icon="@drawable/ic_produtos_novo"
+                android:title="Produtos" />
+            <!--<item android:id="@+id/nav_send" android:icon="@android:drawable/ic_menu_send"
+                 android:title="Sincronizar" />-->
+        </menu>
+    </item>
+
     <item android:title="Configurações">
         <menu>
-            <item android:id="@+id/nav_share" android:icon="@android:drawable/ic_menu_manage"
+            <item android:id="@+id/nav_opcoes"
+                android:icon="@drawable/ic_opcoes_novo"
                 android:title="Opções" />
             <!--<item android:id="@+id/nav_send" android:icon="@android:drawable/ic_menu_send"
-                android:title="Sincronizar" />-->
+                 android:title="Sincronizar" />-->
         </menu>
     </item>
 
diff --git a/app/src/main/res/menu/activity_visao_geral_nova_drawer.xml b/app/src/main/res/menu/activity_visao_geral_nova_drawer.xml
new file mode 100644
index 0000000..d7124e6
--- /dev/null
+++ b/app/src/main/res/menu/activity_visao_geral_nova_drawer.xml
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    tools:showIn="navigation_view">
+
+    <group android:checkableBehavior="single">
+        <item
+            android:id="@+id/nav_home"
+            android:icon="@drawable/ic_menu_camera"
+            android:title="@string/menu_home" />
+        <item
+            android:id="@+id/nav_gallery"
+            android:icon="@drawable/ic_menu_gallery"
+            android:title="@string/menu_gallery" />
+        <item
+            android:id="@+id/nav_slideshow"
+            android:icon="@drawable/ic_menu_slideshow"
+            android:title="@string/menu_slideshow" />
+        <item
+            android:id="@+id/nav_tools"
+            android:icon="@drawable/ic_menu_manage"
+            android:title="@string/menu_tools" />
+    </group>
+
+    <item android:title="Communicate">
+        <menu>
+            <item
+                android:id="@+id/nav_share"
+                android:icon="@drawable/ic_menu_share"
+                android:title="@string/menu_share" />
+            <item
+                android:id="@+id/nav_send"
+                android:icon="@drawable/ic_menu_send"
+                android:title="@string/menu_send" />
+        </menu>
+    </item>
+
+</menu>
diff --git a/app/src/main/res/menu/adicionarproduto.xml b/app/src/main/res/menu/adicionarproduto.xml
index d91e382..2daf359 100755
--- a/app/src/main/res/menu/adicionarproduto.xml
+++ b/app/src/main/res/menu/adicionarproduto.xml
@@ -1,6 +1,17 @@
 <menu xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools" tools:context=".ManutencaoProdutoPedido">
+
+
+    <item
+        android:id="@+id/buscar_produto"
+        android:orderInCategory="100"
+        android:title="Buscar..."
+        app:showAsAction="always"
+        android:icon="@drawable/ic_buscar"
+
+        />
+
     <item android:id="@+id/action_settings" android:title="Concluir"
         android:orderInCategory="100" app:showAsAction="always" />
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/menu/cliente.xml b/app/src/main/res/menu/cliente.xml
index f911ef6..b909eee 100755
--- a/app/src/main/res/menu/cliente.xml
+++ b/app/src/main/res/menu/cliente.xml
@@ -1,6 +1,13 @@
 <?xml version="1.0" encoding="utf-8"?>
 <menu xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto">
-    <item android:id="@+id/action_settings" android:title="@string/action_settings"
-        android:orderInCategory="100" app:showAsAction="never" />
+    <item
+        android:id="@+id/buscar_pedido"
+        android:orderInCategory="100"
+        android:title="Buscar..."
+        app:showAsAction="always"
+        android:icon="@drawable/ic_buscar"
+
+        />
+
 </menu>
diff --git a/app/src/main/res/menu/home.xml b/app/src/main/res/menu/home.xml
index 83c540f..b4d58d1 100755
--- a/app/src/main/res/menu/home.xml
+++ b/app/src/main/res/menu/home.xml
@@ -1,6 +1,13 @@
 <menu xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools" tools:context=".HomeActivity">
-    <item android:id="@+id/action_settings" android:title="@string/action_settings"
-        android:orderInCategory="100" app:showAsAction="never" />
+    <item
+        android:id="@+id/buscar_cliente"
+        android:orderInCategory="100"
+        android:title="Buscar..."
+        app:showAsAction="always"
+        android:icon="@drawable/ic_buscar"
+
+        />
+
 </menu>
diff --git a/app/src/main/res/menu/manutencaopedido.xml b/app/src/main/res/menu/manutencaopedido.xml
index 7d23c43..10dad0d 100755
--- a/app/src/main/res/menu/manutencaopedido.xml
+++ b/app/src/main/res/menu/manutencaopedido.xml
@@ -7,6 +7,10 @@
         android:orderInCategory="100" app:showAsAction="never" />
     <item android:id="@+id/action_cancelarpedido" android:title="Cancelar Pedido"
         android:orderInCategory="100" app:showAsAction="never" />
+    <item android:id="@+id/action_duplicarpedido" android:title="Duplicar Pedido"
+        android:orderInCategory="100" app:showAsAction="never" />
+    <item android:id="@+id/action_gerarpdf" android:title="Gerar PDF"
+        android:orderInCategory="100" app:showAsAction="never" />
     <item android:id="@+id/action_excluirpedido" android:title="Excluir Pedido"
         android:orderInCategory="100" app:showAsAction="never" />
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/menu/manutencaoproduto.xml b/app/src/main/res/menu/manutencaoproduto.xml
index 87511d7..c6e6e2a 100755
--- a/app/src/main/res/menu/manutencaoproduto.xml
+++ b/app/src/main/res/menu/manutencaoproduto.xml
@@ -1,6 +1,18 @@
 <menu xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools" tools:context=".ManutencaoProdutoPedido">
-    <item android:id="@+id/action_settings" android:title="Salvar"
-        android:orderInCategory="100" app:showAsAction="always" />
+
+    <item
+        android:id="@+id/menu_salvarprodutopedido"
+        android:title="Salvar"
+        android:orderInCategory="100"
+        app:showAsAction="always" />
+
+    <item
+        android:id="@+id/menu_excluirprodutopedido"
+        android:title="@string/menu_excluir"
+        android:icon="@drawable/ic_excluir"
+        android:orderInCategory="100"
+        app:showAsAction="always"
+        />
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/menu/menu_cadastrarcliente.xml b/app/src/main/res/menu/menu_cadastrarcliente.xml
new file mode 100644
index 0000000..6bb3427
--- /dev/null
+++ b/app/src/main/res/menu/menu_cadastrarcliente.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    tools:context=".CadastroClientes"
+    >
+
+    <item android:id="@+id/menu_salvar"
+        android:title="@string/menu_salvar"
+        android:orderInCategory="100"
+        app:showAsAction="always"
+        />
+
+    <item
+        android:id="@+id/menu_excluir"
+        android:title="@string/menu_excluir"
+        android:icon="@drawable/ic_excluir"
+        android:orderInCategory="100"
+        app:showAsAction="always"
+        />
+
+</menu>
\ No newline at end of file
diff --git a/app/src/main/res/menu/pedidos.xml b/app/src/main/res/menu/pedidos.xml
index c9d25e0..737a149 100755
--- a/app/src/main/res/menu/pedidos.xml
+++ b/app/src/main/res/menu/pedidos.xml
@@ -1,6 +1,32 @@
 <?xml version="1.0" encoding="utf-8"?>
 <menu xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto">
-    <item android:id="@+id/action_excluirtodospedidos" android:title="Excluir Pedidos Enviados"
-        android:orderInCategory="100" app:showAsAction="never" />
+
+    <item
+        android:id="@+id/buscar_pedido"
+        android:orderInCategory="100"
+        android:title="Buscar..."
+        app:showAsAction="always"
+        android:icon="@drawable/ic_buscar"
+
+        />
+
+    <item
+        android:id="@+id/action_excluirtodospedidos"
+        android:orderInCategory="100"
+        android:title="Sincronizar"
+        app:showAsAction="always"
+        android:icon="@drawable/ic_excluir"
+
+        />
+
+    <!--Atendimento 19441-->
+    <item
+        android:id="@+id/sincronizar_pedidos"
+        android:orderInCategory="100"
+        android:title="Sincronizar"
+        app:showAsAction="always"
+        android:icon="@drawable/ic_sincronizar"
+
+        />
 </menu>
diff --git a/app/src/main/res/menu/produtos.xml b/app/src/main/res/menu/produtos.xml
index f911ef6..8c503ab 100755
--- a/app/src/main/res/menu/produtos.xml
+++ b/app/src/main/res/menu/produtos.xml
@@ -1,6 +1,13 @@
 <?xml version="1.0" encoding="utf-8"?>
 <menu xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto">
-    <item android:id="@+id/action_settings" android:title="@string/action_settings"
-        android:orderInCategory="100" app:showAsAction="never" />
+    <item
+        android:id="@+id/buscar_produto"
+        android:orderInCategory="100"
+        android:title="Buscar..."
+        app:showAsAction="always"
+        android:icon="@drawable/ic_buscar"
+
+        />
+
 </menu>
diff --git a/app/src/main/res/menu/selecaocliente.xml b/app/src/main/res/menu/selecaocliente.xml
index 40c344b..38a18d6 100755
--- a/app/src/main/res/menu/selecaocliente.xml
+++ b/app/src/main/res/menu/selecaocliente.xml
@@ -1,6 +1,16 @@
 <menu xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools" tools:context=".SelecaoCliente">
+
+    <item
+        android:id="@+id/buscar_clientepedido"
+        android:orderInCategory="100"
+        android:title="Buscar..."
+        app:showAsAction="always"
+        android:icon="@drawable/ic_buscar"
+
+        />
+
     <item android:id="@+id/action_settings" android:title="Cancelar"
         android:orderInCategory="100" app:showAsAction="always" />
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/menu/visao_geral_nova.xml b/app/src/main/res/menu/visao_geral_nova.xml
new file mode 100644
index 0000000..169bf73
--- /dev/null
+++ b/app/src/main/res/menu/visao_geral_nova.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+</menu>
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
index 4eaaad0..fead81b 100755
--- a/app/src/main/res/values/colors.xml
+++ b/app/src/main/res/values/colors.xml
@@ -2,7 +2,7 @@
 <resources>
     <color name="colorPrimary">#3F51B5</color>
     <color name="colorPrimaryDark">#303F9F</color>
-    <color name="colorAccent">#FFFFFF</color>
+    <color name="colorAccent">#3F51B5</color>
     <color name="black">#000000</color>
     <color name="white">#FFFFFF</color>
     <color name="white_FFE1FF">#FFE1FF</color>
@@ -24,4 +24,16 @@
     <color name="cor_botao_excluir">#CD5C5C</color>
     <color name="cor_botao_press_excluir">#CD0000</color>
     <color name="cor_botao_foco_excluir">#FF0000</color>
+
+    <color name="corPreta">#000000</color>
+    <color name="corCinza">#9C9C9C</color>
+    <color name="corCinzaEscuro">#8f8f8f</color>
+    <color name="corBranca">#FFFFFF</color>
+    <color name="corVerde">#5cd055</color>
+    <color name="corVermelhoMuitoTransparente">#CCFF4040</color>
+    <color name="corAzulMuitoTransparente">#CC5c7daa</color>
+    <color name="corVerdeMuitoTransparente">#CC5cd055</color>
+    <color name="azulEscuroNovaIdentidade">#1673B0</color>
+    <color name="corTransparente">#99000000</color>
+
 </resources>
diff --git a/app/src/main/res/values/drawables.xml b/app/src/main/res/values/drawables.xml
new file mode 100644
index 0000000..52c6a6c
--- /dev/null
+++ b/app/src/main/res/values/drawables.xml
@@ -0,0 +1,8 @@
+<resources xmlns:android="http://schemas.android.com/apk/res/android">
+    <item name="ic_menu_camera" type="drawable">@android:drawable/ic_menu_camera</item>
+    <item name="ic_menu_gallery" type="drawable">@android:drawable/ic_menu_gallery</item>
+    <item name="ic_menu_slideshow" type="drawable">@android:drawable/ic_menu_slideshow</item>
+    <item name="ic_menu_manage" type="drawable">@android:drawable/ic_menu_manage</item>
+    <item name="ic_menu_share" type="drawable">@android:drawable/ic_menu_share</item>
+    <item name="ic_menu_send" type="drawable">@android:drawable/ic_menu_send</item>
+</resources>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index dbad24c..20c2603 100755
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -121,7 +121,7 @@
     <string name="title_activity_atualizar_dados">Atualizar Dados</string>
     <string name="title_activity_cadastro_clientes">Cadastro de Clientes</string>
 
-    <string name="mensagemlogin">Para realizar o acesso ao aplicativo é necessária que haja conexão com a internet.</string>
+    <string name="mensagemlogin">Para realizar o acesso ao aplicativo é necessário que haja conexão com a internet.</string>
     <string name="title_activity_produtos">Produtos</string>
     <string name="title_activity_cadastro_produtos">Cadastro de Produtos</string>
     <string name="title_activity_manutencao_pedidos">Pedido</string>
@@ -222,6 +222,60 @@
     <string name="title_activity_manutencao_produto_pedido">Produto</string>
     <string name="title_activity_filial">Filial</string>
 
-    <string name="versao">2.2</string>
+    <string name="versao">3.0</string>
+
+    <string name="menu_salvar">Salvar</string>
+    <string name="menu_excluir">Excluir</string>
+
+    //---------------------------------------Strings da nova tela de visão geral do app
+    -----------------------------------
+    ---------------------------------------------------------------------------------------------------------------------//
+    <string name="title_activity_visao_geral_completa">Visão Geral</string>
+
+    //Strings do primeiro layout das movimentações diárias
+    <string name="campo_visaogeral_valor_venda_bruta">Pedido bruto:</string>
+    <string name="campo_visaogeral_valor_descontos">Descontos:</string>
+    <string name="campo_visaogeral_valor_liquido">Pedido liquido:</string>
+    <string name="campo_visaogeral_lucro_medio">Lucro médio:</string>
+
+    <string name="label_quantidade_tipovenda_pedido">Número de pedidos em aberto: </string>
+
+    <string name="label_quantidade_tipovenda_cancelados_pedidos">Número de pedidos cancelados: </string>
+    <string name="label_valordescontos_tipovenda">Valor total de descontos: </string>
+
+    <string name="label_valortotal_tipovenda_pedidos">Valor total dos pedidos em aberto: </string>
+
+    <string name="label_semprodutosatencao">No momento você não possui produtos que necessitam da sua atenção.</string>
+    <string name="label_produtoatencaounico"> produto que necessita da sua atenção.</string>
+    <string name="label_produtosatencao"> produtos que necessitam da sua atenção</string>
+
+    //-----------Strings das mensagens da tela de visão geral------------------
+    <string name="mensagem_visaogeral_falhacarregamentovendas">Não foi possível carregar os dados das </string>
+    <string name="mensagem_visaogeral_falhacarregamentopedidos">Não foi possível carregar os dados dos </string>
+    <string name="mensagem_visaogeral_falhacarregamentografico">Não foi possível atualizar o gráfico de movimentação mensal devido à seguinte situação: </string>
+    <string name="title_activity_formas_pagamento_pedido">FormasPagamentoPedido</string>
+    <string name="title_activity_descontos_pedido">Descontos do Pedido</string>
+    <string name="title_activity_visao_geral_nova">Visão Geral</string>
+    <string name="nav_header_title">Android Studio</string>
+    <string name="nav_header_subtitle">android.studio@android.com</string>
+    <string name="nav_header_desc">Navigation header</string>
+
+    <string name="menu_home">Home</string>
+    <string name="menu_gallery">Gallery</string>
+    <string name="menu_slideshow">Slideshow</string>
+    <string name="menu_tools">Tools</string>
+    <string name="menu_share">Share</string>
+    <string name="menu_send">Send</string>
+
+
+    <string name="campo_lb_selecionarcliente">Selecionar cliente</string>
+    <string name="campo_lb_selecionarproduto">Adicionar produto</string>
+    <string name="campo_dtemissao">Data de emissão: </string>
+    <string name="campo_vldescontopedido">Valor do desconto: </string>
+    <string name="campo_vlfrete">Valor frete: </string>
+    <string name="campo_condpagamento">Condição de Pagamento: </string>
+    <string name="campo_observacaopedido">Observação do Pedido: </string>
+    <string name="campo_vltotalpedido">Total Liquido do Pedido: </string>
+    <string name="campo_mostrarprodutos">Mostrar Produtos</string>
 
 </resources>
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
index 51f57ae..34f28d1 100755
--- a/app/src/main/res/values/styles.xml
+++ b/app/src/main/res/values/styles.xml
@@ -7,17 +7,49 @@
         <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
         <item name="colorAccent">@color/colorAccent</item>
     </style>
+
     <style name="AppTheme.Login" parent="Theme.AppCompat.Light.NoActionBar">
         <!-- Customize your theme here. -->
         <item name="colorPrimary">@color/colorPrimary</item>
         <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
         <item name="colorAccent">@color/black</item>
     </style>
+
     <style name="AppTheme.NoActionBar">
         <item name="windowActionBar">false</item>
         <item name="windowNoTitle">true</item>
     </style>
+
     <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />
+
     <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
 
+    <style name="MaterialSearchViewStyle">
+        <!-- Background for the search bar -->
+        <item name="searchBackground">@color/colorPrimary</item>
+
+        <!-- Change voice icon -->
+        <item name="searchVoiceIcon">@drawable/ic_action_voice_search_inverted</item>
+
+        <!-- Change clear text icon -->
+        <item name="searchCloseIcon">@drawable/ic_action_navigation_close_inverted</item>
+
+        <!-- Change up icon -->
+        <item name="searchBackIcon">@drawable/ic_action_navigation_arrow_back_inverted</item>
+
+        <!-- Change background for the suggestions list view -->
+        <item name="searchSuggestionBackground">@android:color/white</item>
+
+        <!-- Change text color for edit text. This will also be the color of the cursor -->
+        <item name="android:textColor">@color/corBranca</item>
+
+        <!-- Change hint text color for edit text -->
+        <item name="android:textColorHint">@color/corBranca</item>
+
+        <!-- Hint for edit text -->
+        <item name="android:hint">@string/search_hint</item>
+
+        <!-- Size of the text -->
+        <item name="android:textSize">16sp</item>
+    </style>
 </resources>
